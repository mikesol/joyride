{"version":3,"file":"7637.bundle.js","mappings":"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","sources":["webpack://joyride/./node_modules/lil-gui/dist/lil-gui.esm.js"],"sourcesContent":["/**\n * lil-gui\n * https://lil-gui.georgealways.com\n * @version 0.16.1\n * @author George Michael Brower\n * @license MIT\n */\n\n/**\n * Base class for all controllers.\n */\nclass Controller {\n\n\tconstructor( parent, object, property, className, widgetTag = 'div' ) {\n\n\t\t/**\n\t\t * The GUI that contains this controller.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * The object this controller will modify.\n\t\t * @type {object}\n\t\t */\n\t\tthis.object = object;\n\n\t\t/**\n\t\t * The name of the property to control.\n\t\t * @type {string}\n\t\t */\n\t\tthis.property = property;\n\n\t\t/**\n\t\t * Used to determine if the controller is disabled.\n\t\t * Use `controller.disable( true|false )` to modify this value\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._disabled = false;\n\n\t\t/**\n\t\t * The value of `object[ property ]` when the controller was created.\n\t\t * @type {any}\n\t\t */\n\t\tthis.initialValue = this.getValue();\n\n\t\t/**\n\t\t * The outermost container DOM element for this controller.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.domElement = document.createElement( 'div' );\n\t\tthis.domElement.classList.add( 'controller' );\n\t\tthis.domElement.classList.add( className );\n\n\t\t/**\n\t\t * The DOM element that contains the controller's name.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$name = document.createElement( 'div' );\n\t\tthis.$name.classList.add( 'name' );\n\n\t\tController.nextNameID = Controller.nextNameID || 0;\n\t\tthis.$name.id = `lil-gui-name-${++Controller.nextNameID}`;\n\n\t\t/**\n\t\t * The DOM element that contains the controller's \"widget\" (which differs by controller type).\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$widget = document.createElement( widgetTag );\n\t\tthis.$widget.classList.add( 'widget' );\n\n\t\t/**\n\t\t * The DOM element that receives the disabled attribute when using disable()\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$disable = this.$widget;\n\n\t\tthis.domElement.appendChild( this.$name );\n\t\tthis.domElement.appendChild( this.$widget );\n\n\t\tthis.parent.children.push( this );\n\t\tthis.parent.controllers.push( this );\n\n\t\tthis.parent.$children.appendChild( this.domElement );\n\n\t\tthis._listenCallback = this._listenCallback.bind( this );\n\n\t\tthis.name( property );\n\n\t}\n\n\t/**\n\t * Sets the name of the controller and its label in the GUI.\n\t * @param {string} name\n\t * @returns {this}\n\t */\n\tname( name ) {\n\t\t/**\n\t\t * The controller's name. Use `controller.name( 'Name' )` to modify this value.\n\t\t * @type {string}\n\t\t */\n\t\tthis._name = name;\n\t\tthis.$name.innerHTML = name;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pass a function to be called whenever the value is modified by this controller.\n\t * The function receives the new value as its first parameter. The value of `this` will be the\n\t * controller.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onChange( function( v ) {\n\t * \tconsole.log( 'The value is now ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */\n\tonChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value directly.\n\t\t * Use the `controller.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onChange = callback;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calls the onChange methods of this controller and its parent GUI.\n\t * @protected\n\t */\n\t_callOnChange() {\n\n\t\tthis.parent._callOnChange( this );\n\n\t\tif ( this._onChange !== undefined ) {\n\t\t\tthis._onChange.call( this, this.getValue() );\n\t\t}\n\n\t\tthis._changed = true;\n\n\t}\n\n\t/**\n\t * Pass a function to be called after this controller has been modified and loses focus.\n\t * @param {Function} callback\n\t * @returns {this}\n\t * @example\n\t * const controller = gui.add( object, 'property' );\n\t *\n\t * controller.onFinishChange( function( v ) {\n\t * \tconsole.log( 'Changes complete: ' + v );\n\t * \tconsole.assert( this === controller );\n\t * } );\n\t */\n\tonFinishChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `controller.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onFinishChange = callback;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Should be called by Controller when its widgets lose focus.\n\t * @protected\n\t */\n\t_callOnFinishChange() {\n\n\t\tif ( this._changed ) {\n\n\t\t\tthis.parent._callOnFinishChange( this );\n\n\t\t\tif ( this._onFinishChange !== undefined ) {\n\t\t\t\tthis._onFinishChange.call( this, this.getValue() );\n\t\t\t}\n\n\t\t}\n\n\t\tthis._changed = false;\n\n\t}\n\n\t/**\n\t * Sets the controller back to its initial value.\n\t * @returns {this}\n\t */\n\treset() {\n\t\tthis.setValue( this.initialValue );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Enables this controller.\n\t * @param {boolean} enabled\n\t * @returns {this}\n\t * @example\n\t * controller.enable();\n\t * controller.enable( false ); // disable\n\t * controller.enable( controller._disabled ); // toggle\n\t */\n\tenable( enabled = true ) {\n\t\treturn this.disable( !enabled );\n\t}\n\n\t/**\n\t * Disables this controller.\n\t * @param {boolean} disabled\n\t * @returns {this}\n\t * @example\n\t * controller.disable();\n\t * controller.disable( false ); // enable\n\t * controller.disable( !controller._disabled ); // toggle\n\t */\n\tdisable( disabled = true ) {\n\n\t\tif ( disabled === this._disabled ) return this;\n\n\t\tthis._disabled = disabled;\n\n\t\tthis.domElement.classList.toggle( 'disabled', disabled );\n\t\tthis.$disable.toggleAttribute( 'disabled', disabled );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Destroys this controller and replaces it with a new option controller. Provided as a more\n\t * descriptive syntax for `gui.add`, but primarily for compatibility with dat.gui.\n\t *\n\t * Use caution, as this method will destroy old references to this controller. It will also\n\t * change controller order if called out of sequence, moving the option controller to the end of\n\t * the GUI.\n\t * @example\n\t * // safe usage\n\t *\n\t * gui.add( object1, 'property' ).options( [ 'a', 'b', 'c' ] );\n\t * gui.add( object2, 'property' );\n\t *\n\t * // danger\n\t *\n\t * const c = gui.add( object1, 'property' );\n\t * gui.add( object2, 'property' );\n\t *\n\t * c.options( [ 'a', 'b', 'c' ] );\n\t * // controller is now at the end of the GUI even though it was added first\n\t *\n\t * assert( c.parent.children.indexOf( c ) === -1 )\n\t * // c references a controller that no longer exists\n\t *\n\t * @param {object|Array} options\n\t * @returns {Controller}\n\t */\n\toptions( options ) {\n\t\tconst controller = this.parent.add( this.object, this.property, options );\n\t\tcontroller.name( this._name );\n\t\tthis.destroy();\n\t\treturn controller;\n\t}\n\n\t/**\n\t * Sets the minimum value. Only works on number controllers.\n\t * @param {number} min\n\t * @returns {this}\n\t */\n\tmin( min ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the maximum value. Only works on number controllers.\n\t * @param {number} max\n\t * @returns {this}\n\t */\n\tmax( max ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the step. Only works on number controllers.\n\t * @param {number} step\n\t * @returns {this}\n\t */\n\tstep( step ) {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Calls `updateDisplay()` every animation frame. Pass `false` to stop listening.\n\t * @param {boolean} listen\n\t * @returns {this}\n\t */\n\tlisten( listen = true ) {\n\n\t\t/**\n\t\t * Used to determine if the controller is currently listening. Don't modify this value\n\t\t * directly. Use the `controller.listen( true|false )` method instead.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._listening = listen;\n\n\t\tif ( this._listenCallbackID !== undefined ) {\n\t\t\tcancelAnimationFrame( this._listenCallbackID );\n\t\t\tthis._listenCallbackID = undefined;\n\t\t}\n\n\t\tif ( this._listening ) {\n\t\t\tthis._listenCallback();\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_listenCallback() {\n\n\t\tthis._listenCallbackID = requestAnimationFrame( this._listenCallback );\n\n\t\t// To prevent framerate loss, make sure the value has changed before updating the display.\n\t\t// Note: save() is used here instead of getValue() only because of ColorController. The !== operator\n\t\t// won't work for color objects or arrays, but ColorController.save() always returns a string.\n\n\t\tconst curValue = this.save();\n\n\t\tif ( curValue !== this._listenPrevValue ) {\n\t\t\tthis.updateDisplay();\n\t\t}\n\n\t\tthis._listenPrevValue = curValue;\n\n\t}\n\n\t/**\n\t * Returns `object[ property ]`.\n\t * @returns {any}\n\t */\n\tgetValue() {\n\t\treturn this.object[ this.property ];\n\t}\n\n\t/**\n\t * Sets the value of `object[ property ]`, invokes any `onChange` handlers and updates the display.\n\t * @param {any} value\n\t * @returns {this}\n\t */\n\tsetValue( value ) {\n\t\tthis.object[ this.property ] = value;\n\t\tthis._callOnChange();\n\t\tthis.updateDisplay();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Updates the display to keep it in sync with the current value. Useful for updating your\n\t * controllers when their values have been modified outside of the GUI.\n\t * @returns {this}\n\t */\n\tupdateDisplay() {\n\t\treturn this;\n\t}\n\n\tload( value ) {\n\t\tthis.setValue( value );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\tsave() {\n\t\treturn this.getValue();\n\t}\n\n\t/**\n\t * Destroys this controller and removes it from the parent GUI.\n\t */\n\tdestroy() {\n\t\tthis.listen( false );\n\t\tthis.parent.children.splice( this.parent.children.indexOf( this ), 1 );\n\t\tthis.parent.controllers.splice( this.parent.controllers.indexOf( this ), 1 );\n\t\tthis.parent.$children.removeChild( this.domElement );\n\t}\n\n}\n\nclass BooleanController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'boolean', 'label' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'checkbox' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$input.addEventListener( 'change', () => {\n\t\t\tthis.setValue( this.$input.checked );\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$disable = this.$input;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.checked = this.getValue();\n\t\treturn this;\n\t}\n\n}\n\nfunction normalizeColorString( string ) {\n\n\tlet match, result;\n\n\tif ( match = string.match( /(#|0x)?([a-f0-9]{6})/i ) ) {\n\n\t\tresult = match[ 2 ];\n\n\t} else if ( match = string.match( /rgb\\(\\s*(\\d*)\\s*,\\s*(\\d*)\\s*,\\s*(\\d*)\\s*\\)/ ) ) {\n\n\t\tresult = parseInt( match[ 1 ] ).toString( 16 ).padStart( 2, 0 )\n\t\t\t+ parseInt( match[ 2 ] ).toString( 16 ).padStart( 2, 0 )\n\t\t\t+ parseInt( match[ 3 ] ).toString( 16 ).padStart( 2, 0 );\n\n\t} else if ( match = string.match( /^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i ) ) {\n\n\t\tresult = match[ 1 ] + match[ 1 ] + match[ 2 ] + match[ 2 ] + match[ 3 ] + match[ 3 ];\n\n\t}\n\n\tif ( result ) {\n\t\treturn '#' + result;\n\t}\n\n\treturn false;\n\n}\n\nconst STRING = {\n\tisPrimitive: true,\n\tmatch: v => typeof v === 'string',\n\tfromHexString: normalizeColorString,\n\ttoHexString: normalizeColorString\n};\n\nconst INT = {\n\tisPrimitive: true,\n\tmatch: v => typeof v === 'number',\n\tfromHexString: string => parseInt( string.substring( 1 ), 16 ),\n\ttoHexString: value => '#' + value.toString( 16 ).padStart( 6, 0 )\n};\n\nconst ARRAY = {\n\tisPrimitive: false,\n\tmatch: Array.isArray,\n\tfromHexString( string, target, rgbScale = 1 ) {\n\n\t\tconst int = INT.fromHexString( string );\n\n\t\ttarget[ 0 ] = ( int >> 16 & 255 ) / 255 * rgbScale;\n\t\ttarget[ 1 ] = ( int >> 8 & 255 ) / 255 * rgbScale;\n\t\ttarget[ 2 ] = ( int & 255 ) / 255 * rgbScale;\n\n\t},\n\ttoHexString( [ r, g, b ], rgbScale = 1 ) {\n\n\t\trgbScale = 255 / rgbScale;\n\n\t\tconst int = ( r * rgbScale ) << 16 ^\n\t\t\t( g * rgbScale ) << 8 ^\n\t\t\t( b * rgbScale ) << 0;\n\n\t\treturn INT.toHexString( int );\n\n\t}\n};\n\nconst OBJECT = {\n\tisPrimitive: false,\n\tmatch: v => Object( v ) === v,\n\tfromHexString( string, target, rgbScale = 1 ) {\n\n\t\tconst int = INT.fromHexString( string );\n\n\t\ttarget.r = ( int >> 16 & 255 ) / 255 * rgbScale;\n\t\ttarget.g = ( int >> 8 & 255 ) / 255 * rgbScale;\n\t\ttarget.b = ( int & 255 ) / 255 * rgbScale;\n\n\t},\n\ttoHexString( { r, g, b }, rgbScale = 1 ) {\n\n\t\trgbScale = 255 / rgbScale;\n\n\t\tconst int = ( r * rgbScale ) << 16 ^\n\t\t\t( g * rgbScale ) << 8 ^\n\t\t\t( b * rgbScale ) << 0;\n\n\t\treturn INT.toHexString( int );\n\n\t}\n};\n\nconst FORMATS = [ STRING, INT, ARRAY, OBJECT ];\n\nfunction getColorFormat( value ) {\n\treturn FORMATS.find( format => format.match( value ) );\n}\n\nclass ColorController extends Controller {\n\n\tconstructor( parent, object, property, rgbScale ) {\n\n\t\tsuper( parent, object, property, 'color' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'color' );\n\t\tthis.$input.setAttribute( 'tabindex', -1 );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$text = document.createElement( 'input' );\n\t\tthis.$text.setAttribute( 'type', 'text' );\n\t\tthis.$text.setAttribute( 'spellcheck', 'false' );\n\t\tthis.$text.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$display = document.createElement( 'div' );\n\t\tthis.$display.classList.add( 'display' );\n\n\t\tthis.$display.appendChild( this.$input );\n\t\tthis.$widget.appendChild( this.$display );\n\t\tthis.$widget.appendChild( this.$text );\n\n\t\tthis._format = getColorFormat( this.initialValue );\n\t\tthis._rgbScale = rgbScale;\n\n\t\tthis._initialValueHexString = this.save();\n\t\tthis._textFocused = false;\n\n\t\tthis.$input.addEventListener( 'input', () => {\n\t\t\tthis._setValueFromHexString( this.$input.value );\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'blur', () => {\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'input', () => {\n\t\t\tconst tryParse = normalizeColorString( this.$text.value );\n\t\t\tif ( tryParse ) {\n\t\t\t\tthis._setValueFromHexString( tryParse );\n\t\t\t}\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'focus', () => {\n\t\t\tthis._textFocused = true;\n\t\t\tthis.$text.select();\n\t\t} );\n\n\t\tthis.$text.addEventListener( 'blur', () => {\n\t\t\tthis._textFocused = false;\n\t\t\tthis.updateDisplay();\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$disable = this.$text;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\treset() {\n\t\tthis._setValueFromHexString( this._initialValueHexString );\n\t\treturn this;\n\t}\n\n\t_setValueFromHexString( value ) {\n\n\t\tif ( this._format.isPrimitive ) {\n\n\t\t\tconst newValue = this._format.fromHexString( value );\n\t\t\tthis.setValue( newValue );\n\n\t\t} else {\n\n\t\t\tthis._format.fromHexString( value, this.getValue(), this._rgbScale );\n\t\t\tthis._callOnChange();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t}\n\n\tsave() {\n\t\treturn this._format.toHexString( this.getValue(), this._rgbScale );\n\t}\n\n\tload( value ) {\n\t\tthis._setValueFromHexString( value );\n\t\tthis._callOnFinishChange();\n\t\treturn this;\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.value = this._format.toHexString( this.getValue(), this._rgbScale );\n\t\tif ( !this._textFocused ) {\n\t\t\tthis.$text.value = this.$input.value.substring( 1 );\n\t\t}\n\t\tthis.$display.style.backgroundColor = this.$input.value;\n\t\treturn this;\n\t}\n\n}\n\nclass FunctionController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'function' );\n\n\t\t// Buttons are the only case where widget contains name\n\t\tthis.$button = document.createElement( 'button' );\n\t\tthis.$button.appendChild( this.$name );\n\t\tthis.$widget.appendChild( this.$button );\n\n\t\tthis.$button.addEventListener( 'click', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.getValue().call( this.object );\n\t\t} );\n\n\t\t// enables :active pseudo class on mobile\n\t\tthis.$button.addEventListener( 'touchstart', () => {}, { passive: true } );\n\n\t\tthis.$disable = this.$button;\n\n\t}\n\n}\n\nclass NumberController extends Controller {\n\n\tconstructor( parent, object, property, min, max, step ) {\n\n\t\tsuper( parent, object, property, 'number' );\n\n\t\tthis._initInput();\n\n\t\tthis.min( min );\n\t\tthis.max( max );\n\n\t\tconst stepExplicit = step !== undefined;\n\t\tthis.step( stepExplicit ? step : this._getImplicitStep(), stepExplicit );\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tmin( min ) {\n\t\tthis._min = min;\n\t\tthis._onUpdateMinMax();\n\t\treturn this;\n\t}\n\n\tmax( max ) {\n\t\tthis._max = max;\n\t\tthis._onUpdateMinMax();\n\t\treturn this;\n\t}\n\n\tstep( step, explicit = true ) {\n\t\tthis._step = step;\n\t\tthis._stepExplicit = explicit;\n\t\treturn this;\n\t}\n\n\tupdateDisplay() {\n\n\t\tconst value = this.getValue();\n\n\t\tif ( this._hasSlider ) {\n\n\t\t\tlet percent = ( value - this._min ) / ( this._max - this._min );\n\t\t\tpercent = Math.max( 0, Math.min( percent, 1 ) );\n\n\t\t\tthis.$fill.style.width = percent * 100 + '%';\n\n\t\t}\n\n\t\tif ( !this._inputFocused ) {\n\t\t\tthis.$input.value = value;\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t_initInput() {\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'number' );\n\t\tthis.$input.setAttribute( 'step', 'any' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$disable = this.$input;\n\n\t\tconst onInput = () => {\n\n\t\t\tconst value = parseFloat( this.$input.value );\n\n\t\t\tif ( isNaN( value ) ) return;\n\n\t\t\tthis.setValue( this._clamp( value ) );\n\n\t\t};\n\n\t\t// Keys & mouse wheel\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst increment = delta => {\n\n\t\t\tconst value = parseFloat( this.$input.value );\n\n\t\t\tif ( isNaN( value ) ) return;\n\n\t\t\tthis._snapClampSetValue( value + delta );\n\n\t\t\t// Force the input to updateDisplay when it's focused\n\t\t\tthis.$input.value = this.getValue();\n\n\t\t};\n\n\t\tconst onKeyDown = e => {\n\t\t\tif ( e.code === 'Enter' ) {\n\t\t\t\tthis.$input.blur();\n\t\t\t}\n\t\t\tif ( e.code === 'ArrowUp' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._arrowKeyMultiplier( e ) );\n\t\t\t}\n\t\t\tif ( e.code === 'ArrowDown' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._arrowKeyMultiplier( e ) * -1 );\n\t\t\t}\n\t\t};\n\n\t\tconst onWheel = e => {\n\t\t\tif ( this._inputFocused ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tincrement( this._step * this._normalizeMouseWheel( e ) );\n\t\t\t}\n\t\t};\n\n\t\t// Vertical drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tlet testingForVerticalDrag = false,\n\t\t\tinitClientX,\n\t\t\tinitClientY,\n\t\t\tprevClientY,\n\t\t\tinitValue,\n\t\t\tdragDelta;\n\n\t\t// Once the mouse is dragged more than DRAG_THRESH px on any axis, we decide\n\t\t// on the user's intent: horizontal means highlight, vertical means drag.\n\t\tconst DRAG_THRESH = 5;\n\n\t\tconst onMouseDown = e => {\n\n\t\t\tinitClientX = e.clientX;\n\t\t\tinitClientY = prevClientY = e.clientY;\n\t\t\ttestingForVerticalDrag = true;\n\n\t\t\tinitValue = this.getValue();\n\t\t\tdragDelta = 0;\n\n\t\t\twindow.addEventListener( 'mousemove', onMouseMove );\n\t\t\twindow.addEventListener( 'mouseup', onMouseUp );\n\n\t\t};\n\n\t\tconst onMouseMove = e => {\n\n\t\t\tif ( testingForVerticalDrag ) {\n\n\t\t\t\tconst dx = e.clientX - initClientX;\n\t\t\t\tconst dy = e.clientY - initClientY;\n\n\t\t\t\tif ( Math.abs( dy ) > DRAG_THRESH ) {\n\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.$input.blur();\n\t\t\t\t\ttestingForVerticalDrag = false;\n\t\t\t\t\tthis._setDraggingStyle( true, 'vertical' );\n\n\t\t\t\t} else if ( Math.abs( dx ) > DRAG_THRESH ) {\n\n\t\t\t\t\tonMouseUp();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// This isn't an else so that the first move counts towards dragDelta\n\t\t\tif ( !testingForVerticalDrag ) {\n\n\t\t\t\tconst dy = e.clientY - prevClientY;\n\n\t\t\t\tdragDelta -= dy * this._step * this._arrowKeyMultiplier( e );\n\n\t\t\t\t// Clamp dragDelta so we don't have 'dead space' after dragging past bounds.\n\t\t\t\t// We're okay with the fact that bounds can be undefined here.\n\t\t\t\tif ( initValue + dragDelta > this._max ) {\n\t\t\t\t\tdragDelta = this._max - initValue;\n\t\t\t\t} else if ( initValue + dragDelta < this._min ) {\n\t\t\t\t\tdragDelta = this._min - initValue;\n\t\t\t\t}\n\n\t\t\t\tthis._snapClampSetValue( initValue + dragDelta );\n\n\t\t\t}\n\n\t\t\tprevClientY = e.clientY;\n\n\t\t};\n\n\t\tconst onMouseUp = () => {\n\t\t\tthis._setDraggingStyle( false, 'vertical' );\n\t\t\tthis._callOnFinishChange();\n\t\t\twindow.removeEventListener( 'mousemove', onMouseMove );\n\t\t\twindow.removeEventListener( 'mouseup', onMouseUp );\n\t\t};\n\n\t\t// Focus state & onFinishChange\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst onFocus = () => {\n\t\t\tthis._inputFocused = true;\n\t\t};\n\n\t\tconst onBlur = () => {\n\t\t\tthis._inputFocused = false;\n\t\t\tthis.updateDisplay();\n\t\t\tthis._callOnFinishChange();\n\t\t};\n\n\t\tthis.$input.addEventListener( 'input', onInput );\n\t\tthis.$input.addEventListener( 'keydown', onKeyDown );\n\t\tthis.$input.addEventListener( 'wheel', onWheel, { passive: false } );\n\t\tthis.$input.addEventListener( 'mousedown', onMouseDown );\n\t\tthis.$input.addEventListener( 'focus', onFocus );\n\t\tthis.$input.addEventListener( 'blur', onBlur );\n\n\t}\n\n\t_initSlider() {\n\n\t\tthis._hasSlider = true;\n\n\t\t// Build DOM\n\t\t// ---------------------------------------------------------------------\n\n\t\tthis.$slider = document.createElement( 'div' );\n\t\tthis.$slider.classList.add( 'slider' );\n\n\t\tthis.$fill = document.createElement( 'div' );\n\t\tthis.$fill.classList.add( 'fill' );\n\n\t\tthis.$slider.appendChild( this.$fill );\n\t\tthis.$widget.insertBefore( this.$slider, this.$input );\n\n\t\tthis.domElement.classList.add( 'hasSlider' );\n\n\t\t// Map clientX to value\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst map = ( v, a, b, c, d ) => {\n\t\t\treturn ( v - a ) / ( b - a ) * ( d - c ) + c;\n\t\t};\n\n\t\tconst setValueFromX = clientX => {\n\t\t\tconst rect = this.$slider.getBoundingClientRect();\n\t\t\tlet value = map( clientX, rect.left, rect.right, this._min, this._max );\n\t\t\tthis._snapClampSetValue( value );\n\t\t};\n\n\t\t// Mouse drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tconst mouseDown = e => {\n\t\t\tthis._setDraggingStyle( true );\n\t\t\tsetValueFromX( e.clientX );\n\t\t\twindow.addEventListener( 'mousemove', mouseMove );\n\t\t\twindow.addEventListener( 'mouseup', mouseUp );\n\t\t};\n\n\t\tconst mouseMove = e => {\n\t\t\tsetValueFromX( e.clientX );\n\t\t};\n\n\t\tconst mouseUp = () => {\n\t\t\tthis._callOnFinishChange();\n\t\t\tthis._setDraggingStyle( false );\n\t\t\twindow.removeEventListener( 'mousemove', mouseMove );\n\t\t\twindow.removeEventListener( 'mouseup', mouseUp );\n\t\t};\n\n\t\t// Touch drag\n\t\t// ---------------------------------------------------------------------\n\n\t\tlet testingForScroll = false, prevClientX, prevClientY;\n\n\t\tconst beginTouchDrag = e => {\n\t\t\te.preventDefault();\n\t\t\tthis._setDraggingStyle( true );\n\t\t\tsetValueFromX( e.touches[ 0 ].clientX );\n\t\t\ttestingForScroll = false;\n\t\t};\n\n\t\tconst onTouchStart = e => {\n\n\t\t\tif ( e.touches.length > 1 ) return;\n\n\t\t\t// If we're in a scrollable container, we should wait for the first\n\t\t\t// touchmove to see if the user is trying to slide or scroll.\n\t\t\tif ( this._hasScrollBar ) {\n\n\t\t\t\tprevClientX = e.touches[ 0 ].clientX;\n\t\t\t\tprevClientY = e.touches[ 0 ].clientY;\n\t\t\t\ttestingForScroll = true;\n\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, we can set the value straight away on touchstart.\n\t\t\t\tbeginTouchDrag( e );\n\n\t\t\t}\n\n\t\t\twindow.addEventListener( 'touchmove', onTouchMove );\n\t\t\twindow.addEventListener( 'touchend', onTouchEnd );\n\n\t\t};\n\n\t\tconst onTouchMove = e => {\n\n\t\t\tif ( testingForScroll ) {\n\n\t\t\t\tconst dx = e.touches[ 0 ].clientX - prevClientX;\n\t\t\t\tconst dy = e.touches[ 0 ].clientY - prevClientY;\n\n\t\t\t\tif ( Math.abs( dx ) > Math.abs( dy ) ) {\n\n\t\t\t\t\t// We moved horizontally, set the value and stop checking.\n\t\t\t\t\tbeginTouchDrag( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// This was, in fact, an attempt to scroll. Abort.\n\t\t\t\t\twindow.removeEventListener( 'touchmove', onTouchMove );\n\t\t\t\t\twindow.removeEventListener( 'touchend', onTouchEnd );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\te.preventDefault();\n\t\t\t\tsetValueFromX( e.touches[ 0 ].clientX );\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst onTouchEnd = () => {\n\t\t\tthis._callOnFinishChange();\n\t\t\tthis._setDraggingStyle( false );\n\t\t\twindow.removeEventListener( 'touchmove', onTouchMove );\n\t\t\twindow.removeEventListener( 'touchend', onTouchEnd );\n\t\t};\n\n\t\t// Mouse wheel\n\t\t// ---------------------------------------------------------------------\n\n\t\t// We have to use a debounced function to call onFinishChange because\n\t\t// there's no way to tell when the user is \"done\" mouse-wheeling.\n\t\tconst callOnFinishChange = this._callOnFinishChange.bind( this );\n\t\tconst WHEEL_DEBOUNCE_TIME = 400;\n\t\tlet wheelFinishChangeTimeout;\n\n\t\tconst onWheel = e => {\n\n\t\t\t// ignore vertical wheels if there's a scrollbar\n\t\t\tconst isVertical = Math.abs( e.deltaX ) < Math.abs( e.deltaY );\n\t\t\tif ( isVertical && this._hasScrollBar ) return;\n\n\t\t\te.preventDefault();\n\n\t\t\t// set value\n\t\t\tconst delta = this._normalizeMouseWheel( e ) * this._step;\n\t\t\tthis._snapClampSetValue( this.getValue() + delta );\n\n\t\t\t// force the input to updateDisplay when it's focused\n\t\t\tthis.$input.value = this.getValue();\n\n\t\t\t// debounce onFinishChange\n\t\t\tclearTimeout( wheelFinishChangeTimeout );\n\t\t\twheelFinishChangeTimeout = setTimeout( callOnFinishChange, WHEEL_DEBOUNCE_TIME );\n\n\t\t};\n\n\t\tthis.$slider.addEventListener( 'mousedown', mouseDown );\n\t\tthis.$slider.addEventListener( 'touchstart', onTouchStart, { passive: false } );\n\t\tthis.$slider.addEventListener( 'wheel', onWheel, { passive: false } );\n\n\t}\n\n\t_setDraggingStyle( active, axis = 'horizontal' ) {\n\t\tif ( this.$slider ) {\n\t\t\tthis.$slider.classList.toggle( 'active', active );\n\t\t}\n\t\tdocument.body.classList.toggle( 'lil-gui-dragging', active );\n\t\tdocument.body.classList.toggle( `lil-gui-${axis}`, active );\n\t}\n\n\t_getImplicitStep() {\n\n\t\tif ( this._hasMin && this._hasMax ) {\n\t\t\treturn ( this._max - this._min ) / 1000;\n\t\t}\n\n\t\treturn 0.1;\n\n\t}\n\n\t_onUpdateMinMax() {\n\n\t\tif ( !this._hasSlider && this._hasMin && this._hasMax ) {\n\n\t\t\t// If this is the first time we're hearing about min and max\n\t\t\t// and we haven't explicitly stated what our step is, let's\n\t\t\t// update that too.\n\t\t\tif ( !this._stepExplicit ) {\n\t\t\t\tthis.step( this._getImplicitStep(), false );\n\t\t\t}\n\n\t\t\tthis._initSlider();\n\t\t\tthis.updateDisplay();\n\n\t\t}\n\n\t}\n\n\t_normalizeMouseWheel( e ) {\n\n\t\tlet { deltaX, deltaY } = e;\n\n\t\t// Safari and Chrome report weird non-integral values for a notched wheel,\n\t\t// but still expose actual lines scrolled via wheelDelta. Notched wheels\n\t\t// should behave the same way as arrow keys.\n\t\tif ( Math.floor( e.deltaY ) !== e.deltaY && e.wheelDelta ) {\n\t\t\tdeltaX = 0;\n\t\t\tdeltaY = -e.wheelDelta / 120;\n\t\t\tdeltaY *= this._stepExplicit ? 1 : 10;\n\t\t}\n\n\t\tconst wheel = deltaX + -deltaY;\n\n\t\treturn wheel;\n\n\t}\n\n\t_arrowKeyMultiplier( e ) {\n\n\t\tlet mult = this._stepExplicit ? 1 : 10;\n\n\t\tif ( e.shiftKey ) {\n\t\t\tmult *= 10;\n\t\t} else if ( e.altKey ) {\n\t\t\tmult /= 10;\n\t\t}\n\n\t\treturn mult;\n\n\t}\n\n\t_snap( value ) {\n\n\t\t// This would be the logical way to do things, but floating point errors.\n\t\t// return Math.round( value / this._step ) * this._step;\n\n\t\t// Using inverse step solves a lot of them, but not all\n\t\t// const inverseStep = 1 / this._step;\n\t\t// return Math.round( value * inverseStep ) / inverseStep;\n\n\t\t// Not happy about this, but haven't seen it break.\n\t\tconst r = Math.round( value / this._step ) * this._step;\n\t\treturn parseFloat( r.toPrecision( 15 ) );\n\n\t}\n\n\t_clamp( value ) {\n\t\t// either condition is false if min or max is undefined\n\t\tif ( value < this._min ) value = this._min;\n\t\tif ( value > this._max ) value = this._max;\n\t\treturn value;\n\t}\n\n\t_snapClampSetValue( value ) {\n\t\tthis.setValue( this._clamp( this._snap( value ) ) );\n\t}\n\n\tget _hasScrollBar() {\n\t\tconst root = this.parent.root.$children;\n\t\treturn root.scrollHeight > root.clientHeight;\n\t}\n\n\tget _hasMin() {\n\t\treturn this._min !== undefined;\n\t}\n\n\tget _hasMax() {\n\t\treturn this._max !== undefined;\n\t}\n\n}\n\nclass OptionController extends Controller {\n\n\tconstructor( parent, object, property, options ) {\n\n\t\tsuper( parent, object, property, 'option' );\n\n\t\tthis.$select = document.createElement( 'select' );\n\t\tthis.$select.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$display = document.createElement( 'div' );\n\t\tthis.$display.classList.add( 'display' );\n\n\t\tthis._values = Array.isArray( options ) ? options : Object.values( options );\n\t\tthis._names = Array.isArray( options ) ? options : Object.keys( options );\n\n\t\tthis._names.forEach( name => {\n\t\t\tconst $option = document.createElement( 'option' );\n\t\t\t$option.innerHTML = name;\n\t\t\tthis.$select.appendChild( $option );\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'change', () => {\n\t\t\tthis.setValue( this._values[ this.$select.selectedIndex ] );\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'focus', () => {\n\t\t\tthis.$display.classList.add( 'focus' );\n\t\t} );\n\n\t\tthis.$select.addEventListener( 'blur', () => {\n\t\t\tthis.$display.classList.remove( 'focus' );\n\t\t} );\n\n\t\tthis.$widget.appendChild( this.$select );\n\t\tthis.$widget.appendChild( this.$display );\n\n\t\tthis.$disable = this.$select;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tconst value = this.getValue();\n\t\tconst index = this._values.indexOf( value );\n\t\tthis.$select.selectedIndex = index;\n\t\tthis.$display.innerHTML = index === -1 ? value : this._names[ index ];\n\t\treturn this;\n\t}\n\n}\n\nclass StringController extends Controller {\n\n\tconstructor( parent, object, property ) {\n\n\t\tsuper( parent, object, property, 'string' );\n\n\t\tthis.$input = document.createElement( 'input' );\n\t\tthis.$input.setAttribute( 'type', 'text' );\n\t\tthis.$input.setAttribute( 'aria-labelledby', this.$name.id );\n\n\t\tthis.$input.addEventListener( 'input', () => {\n\t\t\tthis.setValue( this.$input.value );\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'keydown', e => {\n\t\t\tif ( e.code === 'Enter' ) {\n\t\t\t\tthis.$input.blur();\n\t\t\t}\n\t\t} );\n\n\t\tthis.$input.addEventListener( 'blur', () => {\n\t\t\tthis._callOnFinishChange();\n\t\t} );\n\n\t\tthis.$widget.appendChild( this.$input );\n\n\t\tthis.$disable = this.$input;\n\n\t\tthis.updateDisplay();\n\n\t}\n\n\tupdateDisplay() {\n\t\tthis.$input.value = this.getValue();\n\t\treturn this;\n\t}\n\n}\n\nconst stylesheet = `.lil-gui {\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  line-height: 1;\n  font-weight: normal;\n  font-style: normal;\n  text-align: left;\n  background-color: var(--background-color);\n  color: var(--text-color);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  --background-color: #1f1f1f;\n  --text-color: #ebebeb;\n  --title-background-color: #111111;\n  --title-text-color: #ebebeb;\n  --widget-color: #424242;\n  --hover-color: #4f4f4f;\n  --focus-color: #595959;\n  --number-color: #2cc9ff;\n  --string-color: #a2db3c;\n  --font-size: 11px;\n  --input-font-size: 11px;\n  --font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Arial, sans-serif;\n  --font-family-mono: Menlo, Monaco, Consolas, \"Droid Sans Mono\", monospace;\n  --padding: 4px;\n  --spacing: 4px;\n  --widget-height: 20px;\n  --name-width: 45%;\n  --slider-knob-width: 2px;\n  --slider-input-width: 27%;\n  --color-input-width: 27%;\n  --slider-input-min-width: 45px;\n  --color-input-min-width: 45px;\n  --folder-indent: 7px;\n  --widget-padding: 0 0 0 3px;\n  --widget-border-radius: 2px;\n  --checkbox-size: calc(0.75 * var(--widget-height));\n  --scrollbar-width: 5px;\n}\n.lil-gui, .lil-gui * {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n.lil-gui.root {\n  width: var(--width, 245px);\n  display: flex;\n  flex-direction: column;\n}\n.lil-gui.root > .title {\n  background: var(--title-background-color);\n  color: var(--title-text-color);\n}\n.lil-gui.root > .children {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.lil-gui.root > .children::-webkit-scrollbar {\n  width: var(--scrollbar-width);\n  height: var(--scrollbar-width);\n  background: var(--background-color);\n}\n.lil-gui.root > .children::-webkit-scrollbar-thumb {\n  border-radius: var(--scrollbar-width);\n  background: var(--focus-color);\n}\n@media (pointer: coarse) {\n  .lil-gui.allow-touch-styles {\n    --widget-height: 28px;\n    --padding: 6px;\n    --spacing: 6px;\n    --font-size: 13px;\n    --input-font-size: 16px;\n    --folder-indent: 10px;\n    --scrollbar-width: 7px;\n    --slider-input-min-width: 50px;\n    --color-input-min-width: 65px;\n  }\n}\n.lil-gui.force-touch-styles {\n  --widget-height: 28px;\n  --padding: 6px;\n  --spacing: 6px;\n  --font-size: 13px;\n  --input-font-size: 16px;\n  --folder-indent: 10px;\n  --scrollbar-width: 7px;\n  --slider-input-min-width: 50px;\n  --color-input-min-width: 65px;\n}\n.lil-gui.autoPlace {\n  max-height: 100%;\n  position: fixed;\n  top: 0;\n  right: 15px;\n  z-index: 1001;\n}\n\n.lil-gui .controller {\n  display: flex;\n  align-items: center;\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n}\n.lil-gui .controller.disabled {\n  opacity: 0.5;\n}\n.lil-gui .controller.disabled, .lil-gui .controller.disabled * {\n  pointer-events: none !important;\n}\n.lil-gui .controller > .name {\n  min-width: var(--name-width);\n  flex-shrink: 0;\n  white-space: pre;\n  padding-right: var(--spacing);\n  line-height: var(--widget-height);\n}\n.lil-gui .controller .widget {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: var(--widget-height);\n}\n.lil-gui .controller.string input {\n  color: var(--string-color);\n}\n.lil-gui .controller.boolean .widget {\n  cursor: pointer;\n}\n.lil-gui .controller.color .display {\n  width: 100%;\n  height: var(--widget-height);\n  border-radius: var(--widget-border-radius);\n  position: relative;\n}\n@media (hover: hover) {\n  .lil-gui .controller.color .display:hover:before {\n    content: \" \";\n    display: block;\n    position: absolute;\n    border-radius: var(--widget-border-radius);\n    border: 1px solid #fff9;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n}\n.lil-gui .controller.color input[type=color] {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n.lil-gui .controller.color input[type=text] {\n  margin-left: var(--spacing);\n  font-family: var(--font-family-mono);\n  min-width: var(--color-input-min-width);\n  width: var(--color-input-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.option select {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  max-width: 100%;\n}\n.lil-gui .controller.option .display {\n  position: relative;\n  pointer-events: none;\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  line-height: var(--widget-height);\n  max-width: 100%;\n  overflow: hidden;\n  word-break: break-all;\n  padding-left: 0.55em;\n  padding-right: 1.75em;\n  background: var(--widget-color);\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .display.focus {\n    background: var(--focus-color);\n  }\n}\n.lil-gui .controller.option .display.active {\n  background: var(--focus-color);\n}\n.lil-gui .controller.option .display:after {\n  font-family: \"lil-gui\";\n  content: \"↕\";\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  padding-right: 0.375em;\n}\n.lil-gui .controller.option .widget,\n.lil-gui .controller.option select {\n  cursor: pointer;\n}\n@media (hover: hover) {\n  .lil-gui .controller.option .widget:hover .display {\n    background: var(--hover-color);\n  }\n}\n.lil-gui .controller.number input {\n  color: var(--number-color);\n}\n.lil-gui .controller.number.hasSlider input {\n  margin-left: var(--spacing);\n  width: var(--slider-input-width);\n  min-width: var(--slider-input-min-width);\n  flex-shrink: 0;\n}\n.lil-gui .controller.number .slider {\n  width: 100%;\n  height: var(--widget-height);\n  background-color: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  padding-right: var(--slider-knob-width);\n  overflow: hidden;\n  cursor: ew-resize;\n  touch-action: pan-y;\n}\n@media (hover: hover) {\n  .lil-gui .controller.number .slider:hover {\n    background-color: var(--hover-color);\n  }\n}\n.lil-gui .controller.number .slider.active {\n  background-color: var(--focus-color);\n}\n.lil-gui .controller.number .slider.active .fill {\n  opacity: 0.95;\n}\n.lil-gui .controller.number .fill {\n  height: 100%;\n  border-right: var(--slider-knob-width) solid var(--number-color);\n  box-sizing: content-box;\n}\n\n.lil-gui-dragging .lil-gui {\n  --hover-color: var(--widget-color);\n}\n.lil-gui-dragging * {\n  cursor: ew-resize !important;\n}\n\n.lil-gui-dragging.lil-gui-vertical * {\n  cursor: ns-resize !important;\n}\n\n.lil-gui .title {\n  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);\n  height: var(--title-height);\n  line-height: calc(var(--title-height) - 4px);\n  font-weight: 600;\n  padding: 0 var(--padding);\n  -webkit-tap-highlight-color: transparent;\n  cursor: pointer;\n  outline: none;\n  text-decoration-skip: objects;\n}\n.lil-gui .title:before {\n  font-family: \"lil-gui\";\n  content: \"▾\";\n  padding-right: 2px;\n  display: inline-block;\n}\n.lil-gui .title:active {\n  background: var(--title-background-color);\n  opacity: 0.75;\n}\n@media (hover: hover) {\n  body:not(.lil-gui-dragging) .lil-gui .title:hover {\n    background: var(--title-background-color);\n    opacity: 0.85;\n  }\n  .lil-gui .title:focus {\n    text-decoration: underline var(--focus-color);\n  }\n}\n.lil-gui.root > .title:focus {\n  text-decoration: none !important;\n}\n.lil-gui.closed > .title:before {\n  content: \"▸\";\n}\n.lil-gui.closed > .children {\n  transform: translateY(-7px);\n  opacity: 0;\n}\n.lil-gui.closed:not(.transition) > .children {\n  display: none;\n}\n.lil-gui.transition > .children {\n  transition-duration: 300ms;\n  transition-property: height, opacity, transform;\n  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);\n  overflow: hidden;\n  pointer-events: none;\n}\n.lil-gui .children:empty:before {\n  content: \"Empty\";\n  padding: 0 var(--padding);\n  margin: var(--spacing) 0;\n  display: block;\n  height: var(--widget-height);\n  font-style: italic;\n  line-height: var(--widget-height);\n  opacity: 0.5;\n}\n.lil-gui.root > .children > .lil-gui > .title {\n  border: 0 solid var(--widget-color);\n  border-width: 1px 0;\n  transition: border-color 300ms;\n}\n.lil-gui.root > .children > .lil-gui.closed > .title {\n  border-bottom-color: transparent;\n}\n.lil-gui + .controller {\n  border-top: 1px solid var(--widget-color);\n  margin-top: 0;\n  padding-top: var(--spacing);\n}\n.lil-gui .lil-gui .lil-gui > .title {\n  border: none;\n}\n.lil-gui .lil-gui .lil-gui > .children {\n  border: none;\n  margin-left: var(--folder-indent);\n  border-left: 2px solid var(--widget-color);\n}\n.lil-gui .lil-gui .controller {\n  border: none;\n}\n\n.lil-gui input {\n  -webkit-tap-highlight-color: transparent;\n  border: 0;\n  outline: none;\n  font-family: var(--font-family);\n  font-size: var(--input-font-size);\n  border-radius: var(--widget-border-radius);\n  height: var(--widget-height);\n  background: var(--widget-color);\n  color: var(--text-color);\n  width: 100%;\n}\n@media (hover: hover) {\n  .lil-gui input:hover {\n    background: var(--hover-color);\n  }\n  .lil-gui input:active {\n    background: var(--focus-color);\n  }\n}\n.lil-gui input:disabled {\n  opacity: 1;\n}\n.lil-gui input[type=text],\n.lil-gui input[type=number] {\n  padding: var(--widget-padding);\n}\n.lil-gui input[type=text]:focus,\n.lil-gui input[type=number]:focus {\n  background: var(--focus-color);\n}\n.lil-gui input::-webkit-outer-spin-button,\n.lil-gui input::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.lil-gui input[type=number] {\n  -moz-appearance: textfield;\n}\n.lil-gui input[type=checkbox] {\n  appearance: none;\n  -webkit-appearance: none;\n  height: var(--checkbox-size);\n  width: var(--checkbox-size);\n  border-radius: var(--widget-border-radius);\n  text-align: center;\n  cursor: pointer;\n}\n.lil-gui input[type=checkbox]:checked:before {\n  font-family: \"lil-gui\";\n  content: \"✓\";\n  font-size: var(--checkbox-size);\n  line-height: var(--checkbox-size);\n}\n@media (hover: hover) {\n  .lil-gui input[type=checkbox]:focus {\n    box-shadow: inset 0 0 0 1px var(--focus-color);\n  }\n}\n.lil-gui button {\n  -webkit-tap-highlight-color: transparent;\n  outline: none;\n  cursor: pointer;\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n  color: var(--text-color);\n  width: 100%;\n  height: var(--widget-height);\n  text-transform: none;\n  background: var(--widget-color);\n  border-radius: var(--widget-border-radius);\n  border: 1px solid var(--widget-color);\n  text-align: center;\n  line-height: calc(var(--widget-height) - 4px);\n}\n@media (hover: hover) {\n  .lil-gui button:hover {\n    background: var(--hover-color);\n    border-color: var(--hover-color);\n  }\n  .lil-gui button:focus {\n    border-color: var(--focus-color);\n  }\n}\n.lil-gui button:active {\n  background: var(--focus-color);\n}\n\n@font-face {\n  font-family: \"lil-gui\";\n  src: url(\"data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==\") format(\"woff\");\n}`;\n\nfunction _injectStyles( cssContent ) {\n\tconst injected = document.createElement( 'style' );\n\tinjected.innerHTML = cssContent;\n\tconst before = document.querySelector( 'head link[rel=stylesheet], head style' );\n\tif ( before ) {\n\t\tdocument.head.insertBefore( injected, before );\n\t} else {\n\t\tdocument.head.appendChild( injected );\n\t}\n}\n\nlet stylesInjected = false;\n\nclass GUI {\n\n\t/**\n\t * Creates a panel that holds controllers.\n\t * @example\n\t * new GUI();\n\t * new GUI( { container: document.getElementById( 'custom' ) } );\n\t *\n\t * @param {object} [options]\n\t * @param {boolean} [options.autoPlace=true]\n\t * Adds the GUI to `document.body` and fixes it to the top right of the page.\n\t *\n\t * @param {HTMLElement} [options.container]\n\t * Adds the GUI to this DOM element. Overrides `autoPlace`.\n\t *\n\t * @param {number} [options.width=245]\n\t * Width of the GUI in pixels, usually set when name labels become too long. Note that you can make\n\t * name labels wider in CSS with `.lil‑gui { ‑‑name‑width: 55% }`\n\t *\n\t * @param {string} [options.title=Controls]\n\t * Name to display in the title bar.\n\t *\n\t * @param {boolean} [options.injectStyles=true]\n\t * Injects the default stylesheet into the page if this is the first GUI.\n\t * Pass `false` to use your own stylesheet.\n\t *\n\t * @param {number} [options.touchStyles=true]\n\t * Makes controllers larger on touch devices. Pass `false` to disable touch styles.\n\t *\n\t * @param {GUI} [options.parent]\n\t * Adds this GUI as a child in another GUI. Usually this is done for you by `addFolder()`.\n\t *\n\t */\n\tconstructor( {\n\t\tparent,\n\t\tautoPlace = parent === undefined,\n\t\tcontainer,\n\t\twidth,\n\t\ttitle = 'Controls',\n\t\tinjectStyles = true,\n\t\ttouchStyles = true\n\t} = {} ) {\n\n\t\t/**\n\t\t * The GUI containing this folder, or `undefined` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * The top level GUI containing this folder, or `this` if this is the root GUI.\n\t\t * @type {GUI}\n\t\t */\n\t\tthis.root = parent ? parent.root : this;\n\n\t\t/**\n\t\t * The list of controllers and folders contained by this GUI.\n\t\t * @type {Array<GUI|Controller>}\n\t\t */\n\t\tthis.children = [];\n\n\t\t/**\n\t\t * The list of controllers contained by this GUI.\n\t\t * @type {Array<Controller>}\n\t\t */\n\t\tthis.controllers = [];\n\n\t\t/**\n\t\t * The list of folders contained by this GUI.\n\t\t * @type {Array<GUI>}\n\t\t */\n\t\tthis.folders = [];\n\n\t\t/**\n\t\t * Used to determine if the GUI is closed. Use `gui.open()` or `gui.close()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._closed = false;\n\n\t\t/**\n\t\t * Used to determine if the GUI is hidden. Use `gui.show()` or `gui.hide()` to change this.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._hidden = false;\n\n\t\t/**\n\t\t * The outermost container element.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.domElement = document.createElement( 'div' );\n\t\tthis.domElement.classList.add( 'lil-gui' );\n\n\t\t/**\n\t\t * The DOM element that contains the title.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$title = document.createElement( 'div' );\n\t\tthis.$title.classList.add( 'title' );\n\t\tthis.$title.setAttribute( 'role', 'button' );\n\t\tthis.$title.setAttribute( 'aria-expanded', true );\n\t\tthis.$title.setAttribute( 'tabindex', 0 );\n\n\t\tthis.$title.addEventListener( 'click', () => this.openAnimated( this._closed ) );\n\t\tthis.$title.addEventListener( 'keydown', e => {\n\t\t\tif ( e.code === 'Enter' || e.code === 'Space' ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.$title.click();\n\t\t\t}\n\t\t} );\n\n\t\t// enables :active pseudo class on mobile\n\t\tthis.$title.addEventListener( 'touchstart', () => {}, { passive: true } );\n\n\t\t/**\n\t\t * The DOM element that contains children.\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tthis.$children = document.createElement( 'div' );\n\t\tthis.$children.classList.add( 'children' );\n\n\t\tthis.domElement.appendChild( this.$title );\n\t\tthis.domElement.appendChild( this.$children );\n\n\t\tthis.title( title );\n\n\t\tif ( touchStyles ) {\n\t\t\tthis.domElement.classList.add( 'allow-touch-styles' );\n\t\t}\n\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.children.push( this );\n\t\t\tthis.parent.folders.push( this );\n\n\t\t\tthis.parent.$children.appendChild( this.domElement );\n\n\t\t\t// Stop the constructor early, everything onward only applies to root GUI's\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.domElement.classList.add( 'root' );\n\n\t\t// Inject stylesheet if we haven't done that yet\n\t\tif ( !stylesInjected && injectStyles ) {\n\t\t\t_injectStyles( stylesheet );\n\t\t\tstylesInjected = true;\n\t\t}\n\n\t\tif ( container ) {\n\n\t\t\tcontainer.appendChild( this.domElement );\n\n\t\t} else if ( autoPlace ) {\n\n\t\t\tthis.domElement.classList.add( 'autoPlace' );\n\t\t\tdocument.body.appendChild( this.domElement );\n\n\t\t}\n\n\t\tif ( width ) {\n\t\t\tthis.domElement.style.setProperty( '--width', width + 'px' );\n\t\t}\n\n\t\t// Don't fire global key events while typing in the GUI:\n\t\tthis.domElement.addEventListener( 'keydown', e => e.stopPropagation() );\n\t\tthis.domElement.addEventListener( 'keyup', e => e.stopPropagation() );\n\n\t}\n\n\t/**\n\t * Adds a controller to the GUI, inferring controller type using the `typeof` operator.\n\t * @example\n\t * gui.add( object, 'property' );\n\t * gui.add( object, 'number', 0, 100, 1 );\n\t * gui.add( object, 'options', [ 1, 2, 3 ] );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number|object|Array} [$1] Minimum value for number controllers, or the set of\n\t * selectable values for a dropdown.\n\t * @param {number} [max] Maximum value for number controllers.\n\t * @param {number} [step] Step value for number controllers.\n\t * @returns {Controller}\n\t */\n\tadd( object, property, $1, max, step ) {\n\n\t\tif ( Object( $1 ) === $1 ) {\n\n\t\t\treturn new OptionController( this, object, property, $1 );\n\n\t\t}\n\n\t\tconst initialValue = object[ property ];\n\n\t\tswitch ( typeof initialValue ) {\n\n\t\t\tcase 'number':\n\n\t\t\t\treturn new NumberController( this, object, property, $1, max, step );\n\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn new BooleanController( this, object, property );\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn new StringController( this, object, property );\n\n\t\t\tcase 'function':\n\n\t\t\t\treturn new FunctionController( this, object, property );\n\n\t\t}\n\n\t\tconsole.error( `gui.add failed\n\tproperty:`, property, `\n\tobject:`, object, `\n\tvalue:`, initialValue );\n\n\t}\n\n\t/**\n\t * Adds a color controller to the GUI.\n\t * @example\n\t * params = {\n\t * \tcssColor: '#ff00ff',\n\t * \trgbColor: { r: 0, g: 0.2, b: 0.4 },\n\t * \tcustomRange: [ 0, 127, 255 ],\n\t * };\n\t *\n\t * gui.addColor( params, 'cssColor' );\n\t * gui.addColor( params, 'rgbColor' );\n\t * gui.addColor( params, 'customRange', 255 );\n\t *\n\t * @param {object} object The object the controller will modify.\n\t * @param {string} property Name of the property to control.\n\t * @param {number} rgbScale Maximum value for a color channel when using an RGB color. You may\n\t * need to set this to 255 if your colors are too dark.\n\t * @returns {Controller}\n\t */\n\taddColor( object, property, rgbScale = 1 ) {\n\t\treturn new ColorController( this, object, property, rgbScale );\n\t}\n\n\t/**\n\t * Adds a folder to the GUI, which is just another GUI. This method returns\n\t * the nested GUI so you can add controllers to it.\n\t * @example\n\t * const folder = gui.addFolder( 'Position' );\n\t * folder.add( position, 'x' );\n\t * folder.add( position, 'y' );\n\t * folder.add( position, 'z' );\n\t *\n\t * @param {string} title Name to display in the folder's title bar.\n\t * @returns {GUI}\n\t */\n\taddFolder( title ) {\n\t\treturn new GUI( { parent: this, title } );\n\t}\n\n\t/**\n\t * Recalls values that were saved with `gui.save()`.\n\t * @param {object} obj\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */\n\tload( obj, recursive = true ) {\n\n\t\tif ( obj.controllers ) {\n\n\t\t\tthis.controllers.forEach( c => {\n\n\t\t\t\tif ( c instanceof FunctionController ) return;\n\n\t\t\t\tif ( c._name in obj.controllers ) {\n\t\t\t\t\tc.load( obj.controllers[ c._name ] );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( recursive && obj.folders ) {\n\n\t\t\tthis.folders.forEach( f => {\n\n\t\t\t\tif ( f._title in obj.folders ) {\n\t\t\t\t\tf.load( obj.folders[ f._title ] );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Returns an object mapping controller names to values. The object can be passed to `gui.load()` to\n\t * recall these values.\n\t * @example\n\t * {\n\t * \tcontrollers: {\n\t * \t\tprop1: 1,\n\t * \t\tprop2: 'value',\n\t * \t\t...\n\t * \t},\n\t * \tfolders: {\n\t * \t\tfolderName1: { controllers, folders },\n\t * \t\tfolderName2: { controllers, folders }\n\t * \t\t...\n\t * \t}\n\t * }\n\t *\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {object}\n\t */\n\tsave( recursive = true ) {\n\n\t\tconst obj = {\n\t\t\tcontrollers: {},\n\t\t\tfolders: {}\n\t\t};\n\n\t\tthis.controllers.forEach( c => {\n\n\t\t\tif ( c instanceof FunctionController ) return;\n\n\t\t\tif ( c._name in obj.controllers ) {\n\t\t\t\tthrow new Error( `Cannot save GUI with duplicate property \"${c._name}\"` );\n\t\t\t}\n\n\t\t\tobj.controllers[ c._name ] = c.save();\n\n\t\t} );\n\n\t\tif ( recursive ) {\n\n\t\t\tthis.folders.forEach( f => {\n\n\t\t\t\tif ( f._title in obj.folders ) {\n\t\t\t\t\tthrow new Error( `Cannot save GUI with duplicate folder \"${f._title}\"` );\n\t\t\t\t}\n\n\t\t\t\tobj.folders[ f._title ] = f.save();\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn obj;\n\n\t}\n\n\t/**\n\t * Opens a GUI or folder. GUI and folders are open by default.\n\t * @param {boolean} open Pass false to close\n\t * @returns {this}\n\t * @example\n\t * gui.open(); // open\n\t * gui.open( false ); // close\n\t * gui.open( gui._closed ); // toggle\n\t */\n\topen( open = true ) {\n\n\t\tthis._closed = !open;\n\n\t\tthis.$title.setAttribute( 'aria-expanded', !this._closed );\n\t\tthis.domElement.classList.toggle( 'closed', this._closed );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Closes the GUI.\n\t * @returns {this}\n\t */\n\tclose() {\n\t\treturn this.open( false );\n\t}\n\n\t/**\n\t * Shows the GUI after it's been hidden.\n\t * @param {boolean} show\n\t * @returns {this}\n\t * @example\n\t * gui.show();\n\t * gui.show( false ); // hide\n\t * gui.show( gui._hidden ); // toggle\n\t */\n\tshow( show = true ) {\n\n\t\tthis._hidden = !show;\n\n\t\tthis.domElement.style.display = this._hidden ? 'none' : '';\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Hides the GUI.\n\t * @returns {this}\n\t */\n\thide() {\n\t\treturn this.show( false );\n\t}\n\n\topenAnimated( open = true ) {\n\n\t\t// set state immediately\n\t\tthis._closed = !open;\n\n\t\tthis.$title.setAttribute( 'aria-expanded', !this._closed );\n\n\t\t// wait for next frame to measure $children\n\t\trequestAnimationFrame( () => {\n\n\t\t\t// explicitly set initial height for transition\n\t\t\tconst initialHeight = this.$children.clientHeight;\n\t\t\tthis.$children.style.height = initialHeight + 'px';\n\n\t\t\tthis.domElement.classList.add( 'transition' );\n\n\t\t\tconst onTransitionEnd = e => {\n\t\t\t\tif ( e.target !== this.$children ) return;\n\t\t\t\tthis.$children.style.height = '';\n\t\t\t\tthis.domElement.classList.remove( 'transition' );\n\t\t\t\tthis.$children.removeEventListener( 'transitionend', onTransitionEnd );\n\t\t\t};\n\n\t\t\tthis.$children.addEventListener( 'transitionend', onTransitionEnd );\n\n\t\t\t// todo: this is wrong if children's scrollHeight makes for a gui taller than maxHeight\n\t\t\tconst targetHeight = !open ? 0 : this.$children.scrollHeight;\n\n\t\t\tthis.domElement.classList.toggle( 'closed', !open );\n\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tthis.$children.style.height = targetHeight + 'px';\n\t\t\t} );\n\n\t\t} );\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Change the title of this GUI.\n\t * @param {string} title\n\t * @returns {this}\n\t */\n\ttitle( title ) {\n\t\t/**\n\t\t * Current title of the GUI. Use `gui.title( 'Title' )` to modify this value.\n\t\t * @type {string}\n\t\t */\n\t\tthis._title = title;\n\t\tthis.$title.innerHTML = title;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resets all controllers to their initial values.\n\t * @param {boolean} recursive Pass false to exclude folders descending from this GUI.\n\t * @returns {this}\n\t */\n\treset( recursive = true ) {\n\t\tconst controllers = recursive ? this.controllersRecursive() : this.controllers;\n\t\tcontrollers.forEach( c => c.reset() );\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pass a function to be called whenever a controller in this GUI changes.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */\n\tonChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onChange = callback;\n\t\treturn this;\n\t}\n\n\t_callOnChange( controller ) {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnChange( controller );\n\t\t}\n\n\t\tif ( this._onChange !== undefined ) {\n\t\t\tthis._onChange.call( this, {\n\t\t\t\tobject: controller.object,\n\t\t\t\tproperty: controller.property,\n\t\t\t\tvalue: controller.getValue(),\n\t\t\t\tcontroller\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Pass a function to be called whenever a controller in this GUI has finished changing.\n\t * @param {function({object:object, property:string, value:any, controller:Controller})} callback\n\t * @returns {this}\n\t * @example\n\t * gui.onFinishChange( event => {\n\t * \tevent.object     // object that was modified\n\t * \tevent.property   // string, name of property\n\t * \tevent.value      // new value of controller\n\t * \tevent.controller // controller that was modified\n\t * } );\n\t */\n\tonFinishChange( callback ) {\n\t\t/**\n\t\t * Used to access the function bound to `onFinishChange` events. Don't modify this value\n\t\t * directly. Use the `gui.onFinishChange( callback )` method instead.\n\t\t * @type {Function}\n\t\t */\n\t\tthis._onFinishChange = callback;\n\t\treturn this;\n\t}\n\n\t_callOnFinishChange( controller ) {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._callOnFinishChange( controller );\n\t\t}\n\n\t\tif ( this._onFinishChange !== undefined ) {\n\t\t\tthis._onFinishChange.call( this, {\n\t\t\t\tobject: controller.object,\n\t\t\t\tproperty: controller.property,\n\t\t\t\tvalue: controller.getValue(),\n\t\t\t\tcontroller\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys all DOM elements and event listeners associated with this GUI\n\t */\n\tdestroy() {\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent.children.splice( this.parent.children.indexOf( this ), 1 );\n\t\t\tthis.parent.folders.splice( this.parent.folders.indexOf( this ), 1 );\n\t\t}\n\n\t\tif ( this.domElement.parentElement ) {\n\t\t\tthis.domElement.parentElement.removeChild( this.domElement );\n\t\t}\n\n\t\tArray.from( this.children ).forEach( c => c.destroy() );\n\n\t}\n\n\t/**\n\t * Returns an array of controllers contained by this GUI and its descendents.\n\t * @returns {Controller[]}\n\t */\n\tcontrollersRecursive() {\n\t\tlet controllers = Array.from( this.controllers );\n\t\tthis.folders.forEach( f => {\n\t\t\tcontrollers = controllers.concat( f.controllersRecursive() );\n\t\t} );\n\t\treturn controllers;\n\t}\n\n\t/**\n\t * Returns an array of folders contained by this GUI and its descendents.\n\t * @returns {GUI[]}\n\t */\n\tfoldersRecursive() {\n\t\tlet folders = Array.from( this.folders );\n\t\tthis.folders.forEach( f => {\n\t\t\tfolders = folders.concat( f.foldersRecursive() );\n\t\t} );\n\t\treturn folders;\n\t}\n\n}\n\nexport default GUI;\nexport { BooleanController, ColorController, Controller, FunctionController, GUI, NumberController, OptionController, StringController };\n"],"names":["Controller","constructor","parent","object","property","className","widgetTag","this","_disabled","initialValue","getValue","domElement","document","createElement","classList","add","$name","nextNameID","id","$widget","$disable","appendChild","children","push","controllers","$children","_listenCallback","bind","name","_name","innerHTML","onChange","callback","_onChange","_callOnChange","undefined","call","_changed","onFinishChange","_onFinishChange","_callOnFinishChange","reset","setValue","enable","enabled","disable","disabled","toggle","toggleAttribute","options","controller","destroy","min","max","step","listen","_listening","_listenCallbackID","cancelAnimationFrame","requestAnimationFrame","curValue","save","_listenPrevValue","updateDisplay","value","load","splice","indexOf","removeChild","BooleanController","super","$input","setAttribute","addEventListener","checked","normalizeColorString","string","match","result","parseInt","toString","padStart","STRING","isPrimitive","v","fromHexString","toHexString","INT","substring","ARRAY","Array","isArray","target","rgbScale","int","r","g","b","OBJECT","Object","FORMATS","ColorController","$text","$display","_format","find","format","_rgbScale","_initialValueHexString","_textFocused","_setValueFromHexString","tryParse","select","newValue","style","backgroundColor","FunctionController","$button","e","preventDefault","passive","NumberController","_initInput","stepExplicit","_getImplicitStep","_min","_onUpdateMinMax","_max","explicit","_step","_stepExplicit","_hasSlider","percent","Math","$fill","width","_inputFocused","increment","delta","parseFloat","isNaN","_snapClampSetValue","initClientX","initClientY","prevClientY","initValue","dragDelta","testingForVerticalDrag","onMouseMove","dx","clientX","dy","clientY","abs","blur","_setDraggingStyle","onMouseUp","_arrowKeyMultiplier","window","removeEventListener","_clamp","code","_normalizeMouseWheel","_initSlider","$slider","insertBefore","setValueFromX","rect","getBoundingClientRect","a","left","right","c","mouseMove","mouseUp","prevClientX","testingForScroll","beginTouchDrag","touches","onTouchMove","onTouchEnd","callOnFinishChange","wheelFinishChangeTimeout","length","_hasScrollBar","deltaX","deltaY","clearTimeout","setTimeout","active","axis","body","_hasMin","_hasMax","floor","wheelDelta","mult","shiftKey","altKey","_snap","round","toPrecision","root","scrollHeight","clientHeight","OptionController","$select","_values","values","_names","keys","forEach","$option","selectedIndex","remove","index","StringController","stylesInjected","GUI","autoPlace","container","title","injectStyles","touchStyles","folders","_closed","_hidden","$title","openAnimated","click","cssContent","injected","before","querySelector","head","_injectStyles","setProperty","stopPropagation","$1","console","error","addColor","addFolder","obj","recursive","f","_title","Error","open","close","show","display","hide","initialHeight","height","onTransitionEnd","targetHeight","controllersRecursive","parentElement","from","concat","foldersRecursive"],"sourceRoot":""}