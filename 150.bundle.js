"use strict";(self.webpackChunkjoyride=self.webpackChunkjoyride||[]).push([[150],{406:(t,i,e)=>{e.d(i,{F:()=>a});var s=e(9574),r=e(7006),n=e(9542);let o=0;class a extends s.p{constructor(){super(),Object.defineProperty(this,"id",{value:o++}),this.uuid=n.DO(),this.name="",this.type="Material",this.blending=r.bdR,this.side=r.Wl3,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=r.k74,this.blendDst=r.LgZ,this.blendEquation=r.bGH,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=r.vCF,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=r.cum,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=r.x5V,this.stencilZFail=r.x5V,this.stencilZPass=r.x5V,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const i in t){const e=t[i];if(void 0===e){console.warn("THREE.Material: '"+i+"' parameter is undefined.");continue}if("shading"===i){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===r.esl;continue}const s=this[i];void 0!==s?s&&s.isColor?s.set(e):s&&s.isVector3&&e&&e.isVector3?s.copy(e):this[i]=e:console.warn("THREE."+this.type+": '"+i+"' is not a property of this material.")}}toJSON(t){const i=void 0===t||"string"==typeof t;i&&(t={textures:{},images:{}});const e={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function s(t){const i=[];for(const e in t){const s=t[e];delete s.metadata,i.push(s)}return i}if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),this.color&&this.color.isColor&&(e.color=this.color.getHex()),void 0!==this.roughness&&(e.roughness=this.roughness),void 0!==this.metalness&&(e.metalness=this.metalness),void 0!==this.sheen&&(e.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(e.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(e.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(e.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(e.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(e.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(e.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(e.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(e.shininess=this.shininess),void 0!==this.clearcoat&&(e.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(e.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(e.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(e.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(e.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,e.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(e.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(e.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(e.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(e.lightMap=this.lightMap.toJSON(t).uuid,e.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(e.aoMap=this.aoMap.toJSON(t).uuid,e.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(e.bumpMap=this.bumpMap.toJSON(t).uuid,e.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(e.normalMap=this.normalMap.toJSON(t).uuid,e.normalMapType=this.normalMapType,e.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(e.displacementMap=this.displacementMap.toJSON(t).uuid,e.displacementScale=this.displacementScale,e.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(e.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(e.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(e.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(e.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(e.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(e.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(e.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(e.combine=this.combine)),void 0!==this.envMapIntensity&&(e.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(e.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(e.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(e.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(e.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(e.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(e.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(e.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(e.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(e.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(e.size=this.size),null!==this.shadowSide&&(e.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(e.sizeAttenuation=this.sizeAttenuation),this.blending!==r.bdR&&(e.blending=this.blending),this.side!==r.Wl3&&(e.side=this.side),this.vertexColors&&(e.vertexColors=!0),this.opacity<1&&(e.opacity=this.opacity),!0===this.transparent&&(e.transparent=this.transparent),e.depthFunc=this.depthFunc,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.colorWrite=this.colorWrite,e.stencilWrite=this.stencilWrite,e.stencilWriteMask=this.stencilWriteMask,e.stencilFunc=this.stencilFunc,e.stencilRef=this.stencilRef,e.stencilFuncMask=this.stencilFuncMask,e.stencilFail=this.stencilFail,e.stencilZFail=this.stencilZFail,e.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(e.rotation=this.rotation),!0===this.polygonOffset&&(e.polygonOffset=!0),0!==this.polygonOffsetFactor&&(e.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(e.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(e.linewidth=this.linewidth),void 0!==this.dashSize&&(e.dashSize=this.dashSize),void 0!==this.gapSize&&(e.gapSize=this.gapSize),void 0!==this.scale&&(e.scale=this.scale),!0===this.dithering&&(e.dithering=!0),this.alphaTest>0&&(e.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(e.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(e.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(e.wireframe=this.wireframe),this.wireframeLinewidth>1&&(e.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(e.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(e.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(e.flatShading=this.flatShading),!1===this.visible&&(e.visible=!1),!1===this.toneMapped&&(e.toneMapped=!1),!1===this.fog&&(e.fog=!1),"{}"!==JSON.stringify(this.userData)&&(e.userData=this.userData),i){const i=s(t.textures),r=s(t.images);i.length>0&&(e.textures=i),r.length>0&&(e.images=r)}return e}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const i=t.clippingPlanes;let e=null;if(null!==i){const t=i.length;e=new Array(t);for(let s=0;s!==t;++s)e[s]=i[s].clone()}return this.clippingPlanes=e,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}a.prototype.isMaterial=!0,a.fromType=function(){return null}},4033:(t,i,e)=>{e.r(i),e.d(i,{MeshBasicMaterial:()=>o});var s=e(406),r=e(7006),n=e(7282);class o extends s.F{constructor(t){super(),this.type="MeshBasicMaterial",this.color=new n.Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=r.Ns1,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}o.prototype.isMeshBasicMaterial=!0},2081:(t,i,e)=>{e.d(i,{z:()=>p});var s=e(4532);const r=new s.Vector3,n=new s.Vector3,o=new s.Vector3,a=new s.Vector3,h=new s.Vector3,c=new s.Vector3,l=new s.Vector3;class p{constructor(t=new s.Vector3,i=new s.Vector3(0,0,-1)){this.origin=t,this.direction=i}set(t,i){return this.origin.copy(t),this.direction.copy(i),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,i){return i.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,r)),this}closestPointToPoint(t,i){i.subVectors(t,this.origin);const e=i.dot(this.direction);return e<0?i.copy(this.origin):i.copy(this.direction).multiplyScalar(e).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const i=r.subVectors(t,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(t):(r.copy(this.direction).multiplyScalar(i).add(this.origin),r.distanceToSquared(t))}distanceSqToSegment(t,i,e,s){n.copy(t).add(i).multiplyScalar(.5),o.copy(i).sub(t).normalize(),a.copy(this.origin).sub(n);const r=.5*t.distanceTo(i),h=-this.direction.dot(o),c=a.dot(this.direction),l=-a.dot(o),p=a.lengthSq(),u=Math.abs(1-h*h);let d,m,f,g;if(u>0)if(d=h*l-c,m=h*c-l,g=r*u,d>=0)if(m>=-g)if(m<=g){const t=1/u;d*=t,m*=t,f=d*(d+h*m+2*c)+m*(h*d+m+2*l)+p}else m=r,d=Math.max(0,-(h*m+c)),f=-d*d+m*(m+2*l)+p;else m=-r,d=Math.max(0,-(h*m+c)),f=-d*d+m*(m+2*l)+p;else m<=-g?(d=Math.max(0,-(-h*r+c)),m=d>0?-r:Math.min(Math.max(-r,-l),r),f=-d*d+m*(m+2*l)+p):m<=g?(d=0,m=Math.min(Math.max(-r,-l),r),f=m*(m+2*l)+p):(d=Math.max(0,-(h*r+c)),m=d>0?r:Math.min(Math.max(-r,-l),r),f=-d*d+m*(m+2*l)+p);else m=h>0?-r:r,d=Math.max(0,-(h*m+c)),f=-d*d+m*(m+2*l)+p;return e&&e.copy(this.direction).multiplyScalar(d).add(this.origin),s&&s.copy(o).multiplyScalar(m).add(n),f}intersectSphere(t,i){r.subVectors(t.center,this.origin);const e=r.dot(this.direction),s=r.dot(r)-e*e,n=t.radius*t.radius;if(s>n)return null;const o=Math.sqrt(n-s),a=e-o,h=e+o;return a<0&&h<0?null:a<0?this.at(h,i):this.at(a,i)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const i=t.normal.dot(this.direction);if(0===i)return 0===t.distanceToPoint(this.origin)?0:null;const e=-(this.origin.dot(t.normal)+t.constant)/i;return e>=0?e:null}intersectPlane(t,i){const e=this.distanceToPlane(t);return null===e?null:this.at(e,i)}intersectsPlane(t){const i=t.distanceToPoint(this.origin);return 0===i||t.normal.dot(this.direction)*i<0}intersectBox(t,i){let e,s,r,n,o,a;const h=1/this.direction.x,c=1/this.direction.y,l=1/this.direction.z,p=this.origin;return h>=0?(e=(t.min.x-p.x)*h,s=(t.max.x-p.x)*h):(e=(t.max.x-p.x)*h,s=(t.min.x-p.x)*h),c>=0?(r=(t.min.y-p.y)*c,n=(t.max.y-p.y)*c):(r=(t.max.y-p.y)*c,n=(t.min.y-p.y)*c),e>n||r>s?null:((r>e||e!=e)&&(e=r),(n<s||s!=s)&&(s=n),l>=0?(o=(t.min.z-p.z)*l,a=(t.max.z-p.z)*l):(o=(t.max.z-p.z)*l,a=(t.min.z-p.z)*l),e>a||o>s?null:((o>e||e!=e)&&(e=o),(a<s||s!=s)&&(s=a),s<0?null:this.at(e>=0?e:s,i)))}intersectsBox(t){return null!==this.intersectBox(t,r)}intersectTriangle(t,i,e,s,r){h.subVectors(i,t),c.subVectors(e,t),l.crossVectors(h,c);let n,o=this.direction.dot(l);if(o>0){if(s)return null;n=1}else{if(!(o<0))return null;n=-1,o=-o}a.subVectors(this.origin,t);const p=n*this.direction.dot(c.crossVectors(a,c));if(p<0)return null;const u=n*this.direction.dot(h.cross(a));if(u<0)return null;if(p+u>o)return null;const d=-n*a.dot(l);return d<0?null:this.at(d/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}},9150:(t,i,e)=>{e.r(i),e.d(i,{Mesh:()=>W});var s=e(4532),r=e(6120),n=e(9771),o=e(2081),a=e(1245),h=e(1052);const c=new s.Vector3,l=new s.Vector3,p=new s.Vector3,u=new s.Vector3,d=new s.Vector3,m=new s.Vector3,f=new s.Vector3,g=new s.Vector3,y=new s.Vector3,M=new s.Vector3;class b{constructor(t=new s.Vector3,i=new s.Vector3,e=new s.Vector3){this.a=t,this.b=i,this.c=e}static getNormal(t,i,e,s){s.subVectors(e,i),c.subVectors(t,i),s.cross(c);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(t,i,e,s,r){c.subVectors(s,i),l.subVectors(e,i),p.subVectors(t,i);const n=c.dot(c),o=c.dot(l),a=c.dot(p),h=l.dot(l),u=l.dot(p),d=n*h-o*o;if(0===d)return r.set(-2,-1,-1);const m=1/d,f=(h*a-o*u)*m,g=(n*u-o*a)*m;return r.set(1-f-g,g,f)}static containsPoint(t,i,e,s){return this.getBarycoord(t,i,e,s,u),u.x>=0&&u.y>=0&&u.x+u.y<=1}static getUV(t,i,e,s,r,n,o,a){return this.getBarycoord(t,i,e,s,u),a.set(0,0),a.addScaledVector(r,u.x),a.addScaledVector(n,u.y),a.addScaledVector(o,u.z),a}static isFrontFacing(t,i,e,s){return c.subVectors(e,i),l.subVectors(t,i),c.cross(l).dot(s)<0}set(t,i,e){return this.a.copy(t),this.b.copy(i),this.c.copy(e),this}setFromPointsAndIndices(t,i,e,s){return this.a.copy(t[i]),this.b.copy(t[e]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,i,e,s){return this.a.fromBufferAttribute(t,i),this.b.fromBufferAttribute(t,e),this.c.fromBufferAttribute(t,s),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return c.subVectors(this.c,this.b),l.subVectors(this.a,this.b),.5*c.cross(l).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return b.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,i){return b.getBarycoord(t,this.a,this.b,this.c,i)}getUV(t,i,e,s,r){return b.getUV(t,this.a,this.b,this.c,i,e,s,r)}containsPoint(t){return b.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return b.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,i){const e=this.a,s=this.b,r=this.c;let n,o;d.subVectors(s,e),m.subVectors(r,e),g.subVectors(t,e);const a=d.dot(g),h=m.dot(g);if(a<=0&&h<=0)return i.copy(e);y.subVectors(t,s);const c=d.dot(y),l=m.dot(y);if(c>=0&&l<=c)return i.copy(s);const p=a*l-c*h;if(p<=0&&a>=0&&c<=0)return n=a/(a-c),i.copy(e).addScaledVector(d,n);M.subVectors(t,r);const u=d.dot(M),b=m.dot(M);if(b>=0&&u<=b)return i.copy(r);const S=u*h-a*b;if(S<=0&&h>=0&&b<=0)return o=h/(h-b),i.copy(e).addScaledVector(m,o);const w=c*b-u*l;if(w<=0&&l-c>=0&&u-b>=0)return f.subVectors(r,s),o=(l-c)/(l-c+(u-b)),i.copy(s).addScaledVector(f,o);const x=1/(w+S+p);return n=S*x,o=p*x,i.copy(e).addScaledVector(d,n).addScaledVector(m,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}var S=e(7006),w=e(4033),x=e(5699);const v=new a.Matrix4,T=new o.z,V=new n.Sphere,A=new s.Vector3,O=new s.Vector3,I=new s.Vector3,B=new s.Vector3,F=new s.Vector3,C=new s.Vector3,N=new s.Vector3,R=new s.Vector3,P=new s.Vector3,z=new r.Vector2,J=new r.Vector2,k=new r.Vector2,E=new s.Vector3,q=new s.Vector3;class W extends h.T{constructor(t=new x.BufferGeometry,i=new w.MeshBasicMaterial){super(),this.type="Mesh",this.geometry=t,this.material=i,this.updateMorphTargets()}copy(t){return super.copy(t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const i=t.morphAttributes,e=Object.keys(i);if(e.length>0){const t=i[e[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,e=t.length;i<e;i++){const e=t[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=i}}}}else{const i=t.morphTargets;void 0!==i&&i.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(t,i){const e=this.geometry,s=this.material,r=this.matrixWorld;if(void 0===s)return;if(null===e.boundingSphere&&e.computeBoundingSphere(),V.copy(e.boundingSphere),V.applyMatrix4(r),!1===t.ray.intersectsSphere(V))return;if(v.copy(r).invert(),T.copy(t.ray).applyMatrix4(v),null!==e.boundingBox&&!1===T.intersectsBox(e.boundingBox))return;let n;if(e.isBufferGeometry){const r=e.index,o=e.attributes.position,a=e.morphAttributes.position,h=e.morphTargetsRelative,c=e.attributes.uv,l=e.attributes.uv2,p=e.groups,u=e.drawRange;if(null!==r)if(Array.isArray(s))for(let e=0,d=p.length;e<d;e++){const d=p[e],m=s[d.materialIndex];for(let e=Math.max(d.start,u.start),s=Math.min(r.count,Math.min(d.start+d.count,u.start+u.count));e<s;e+=3){const s=r.getX(e),p=r.getX(e+1),u=r.getX(e+2);n=D(this,m,t,T,o,a,h,c,l,s,p,u),n&&(n.faceIndex=Math.floor(e/3),n.face.materialIndex=d.materialIndex,i.push(n))}}else for(let e=Math.max(0,u.start),p=Math.min(r.count,u.start+u.count);e<p;e+=3){const p=r.getX(e),u=r.getX(e+1),d=r.getX(e+2);n=D(this,s,t,T,o,a,h,c,l,p,u,d),n&&(n.faceIndex=Math.floor(e/3),i.push(n))}else if(void 0!==o)if(Array.isArray(s))for(let e=0,r=p.length;e<r;e++){const r=p[e],d=s[r.materialIndex];for(let e=Math.max(r.start,u.start),s=Math.min(o.count,Math.min(r.start+r.count,u.start+u.count));e<s;e+=3)n=D(this,d,t,T,o,a,h,c,l,e,e+1,e+2),n&&(n.faceIndex=Math.floor(e/3),n.face.materialIndex=r.materialIndex,i.push(n))}else for(let e=Math.max(0,u.start),r=Math.min(o.count,u.start+u.count);e<r;e+=3)n=D(this,s,t,T,o,a,h,c,l,e,e+1,e+2),n&&(n.faceIndex=Math.floor(e/3),i.push(n))}else e.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function D(t,i,e,n,o,a,h,c,l,p,u,d){A.fromBufferAttribute(o,p),O.fromBufferAttribute(o,u),I.fromBufferAttribute(o,d);const m=t.morphTargetInfluences;if(a&&m){N.set(0,0,0),R.set(0,0,0),P.set(0,0,0);for(let t=0,i=a.length;t<i;t++){const i=m[t],e=a[t];0!==i&&(B.fromBufferAttribute(e,p),F.fromBufferAttribute(e,u),C.fromBufferAttribute(e,d),h?(N.addScaledVector(B,i),R.addScaledVector(F,i),P.addScaledVector(C,i)):(N.addScaledVector(B.sub(A),i),R.addScaledVector(F.sub(O),i),P.addScaledVector(C.sub(I),i)))}A.add(N),O.add(R),I.add(P)}t.isSkinnedMesh&&(t.boneTransform(p,A),t.boneTransform(u,O),t.boneTransform(d,I));const f=function(t,i,e,s,r,n,o,a){let h;if(h=i.side===S._Li?s.intersectTriangle(o,n,r,!0,a):s.intersectTriangle(r,n,o,i.side!==S.ehD,a),null===h)return null;q.copy(a),q.applyMatrix4(t.matrixWorld);const c=e.ray.origin.distanceTo(q);return c<e.near||c>e.far?null:{distance:c,point:q.clone(),object:t}}(t,i,e,n,A,O,I,E);if(f){c&&(z.fromBufferAttribute(c,p),J.fromBufferAttribute(c,u),k.fromBufferAttribute(c,d),f.uv=b.getUV(E,A,O,I,z,J,k,new r.Vector2)),l&&(z.fromBufferAttribute(l,p),J.fromBufferAttribute(l,u),k.fromBufferAttribute(l,d),f.uv2=b.getUV(E,A,O,I,z,J,k,new r.Vector2));const t={a:p,b:u,c:d,normal:new s.Vector3,materialIndex:0};b.getNormal(A,O,I,t.normal),f.face=t}return f}W.prototype.isMesh=!0}}]);