"use strict";(self.webpackChunkjoyride=self.webpackChunkjoyride||[]).push([[7232],{7232:(t,i,s)=>{s.r(i),s.d(i,{Box3:()=>e});var n=s(4532);class e{constructor(t=new n.Vector3(1/0,1/0,1/0),i=new n.Vector3(-1/0,-1/0,-1/0)){this.min=t,this.max=i}set(t,i){return this.min.copy(t),this.max.copy(i),this}setFromArray(t){let i=1/0,s=1/0,n=1/0,e=-1/0,r=-1/0,m=-1/0;for(let a=0,h=t.length;a<h;a+=3){const h=t[a],x=t[a+1],o=t[a+2];h<i&&(i=h),x<s&&(s=x),o<n&&(n=o),h>e&&(e=h),x>r&&(r=x),o>m&&(m=o)}return this.min.set(i,s,n),this.max.set(e,r,m),this}setFromBufferAttribute(t){let i=1/0,s=1/0,n=1/0,e=-1/0,r=-1/0,m=-1/0;for(let a=0,h=t.count;a<h;a++){const h=t.getX(a),x=t.getY(a),o=t.getZ(a);h<i&&(i=h),x<s&&(s=x),o<n&&(n=o),h>e&&(e=h),x>r&&(r=x),o>m&&(m=o)}return this.min.set(i,s,n),this.max.set(e,r,m),this}setFromPoints(t){this.makeEmpty();for(let i=0,s=t.length;i<s;i++)this.expandByPoint(t[i]);return this}setFromCenterAndSize(t,i){const s=m.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(s),this.max.copy(t).add(s),this}setFromObject(t,i=!1){return this.makeEmpty(),this.expandByObject(t,i)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,i=!1){t.updateWorldMatrix(!1,!1);const s=t.geometry;if(void 0!==s)if(i&&null!=s.attributes&&void 0!==s.attributes.position){const i=s.attributes.position;for(let s=0,n=i.count;s<n;s++)m.fromBufferAttribute(i,s).applyMatrix4(t.matrixWorld),this.expandByPoint(m)}else null===s.boundingBox&&s.computeBoundingBox(),a.copy(s.boundingBox),a.applyMatrix4(t.matrixWorld),this.union(a);const n=t.children;for(let t=0,s=n.length;t<s;t++)this.expandByObject(n[t],i);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,i){return i.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,m),m.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let i,s;return t.normal.x>0?(i=t.normal.x*this.min.x,s=t.normal.x*this.max.x):(i=t.normal.x*this.max.x,s=t.normal.x*this.min.x),t.normal.y>0?(i+=t.normal.y*this.min.y,s+=t.normal.y*this.max.y):(i+=t.normal.y*this.max.y,s+=t.normal.y*this.min.y),t.normal.z>0?(i+=t.normal.z*this.min.z,s+=t.normal.z*this.max.z):(i+=t.normal.z*this.max.z,s+=t.normal.z*this.min.z),i<=-t.constant&&s>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(l),p.subVectors(this.max,l),h.subVectors(t.a,l),x.subVectors(t.b,l),o.subVectors(t.c,l),c.subVectors(x,h),y.subVectors(o,x),u.subVectors(h,o);let i=[0,-c.z,c.y,0,-y.z,y.y,0,-u.z,u.y,c.z,0,-c.x,y.z,0,-y.x,u.z,0,-u.x,-c.y,c.x,0,-y.y,y.x,0,-u.y,u.x,0];return!!V(i,h,x,o,p)&&(i=[1,0,0,0,1,0,0,0,1],!!V(i,h,x,o,p)&&(z.crossVectors(c,y),i=[z.x,z.y,z.z],V(i,h,x,o,p)))}clampPoint(t,i){return i.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return m.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(m).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(r[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),r[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),r[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),r[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),r[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),r[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),r[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),r[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(r)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}e.prototype.isBox3=!0;const r=[new n.Vector3,new n.Vector3,new n.Vector3,new n.Vector3,new n.Vector3,new n.Vector3,new n.Vector3,new n.Vector3],m=new n.Vector3,a=new e,h=new n.Vector3,x=new n.Vector3,o=new n.Vector3,c=new n.Vector3,y=new n.Vector3,u=new n.Vector3,l=new n.Vector3,p=new n.Vector3,z=new n.Vector3,d=new n.Vector3;function V(t,i,s,n,e){for(let r=0,m=t.length-3;r<=m;r+=3){d.fromArray(t,r);const m=e.x*Math.abs(d.x)+e.y*Math.abs(d.y)+e.z*Math.abs(d.z),a=i.dot(d),h=s.dot(d),x=n.dot(d);if(Math.max(-Math.max(a,h,x),Math.min(a,h,x))>m)return!1}return!0}}}]);