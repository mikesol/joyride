"use strict";(self.webpackChunkjoyride=self.webpackChunkjoyride||[]).push([[430,120],{4430:(t,s,i)=>{i.r(s),i.d(s,{BufferAttribute:()=>y,Float16BufferAttribute:()=>M,Float32BufferAttribute:()=>z,Float64BufferAttribute:()=>p,Int16BufferAttribute:()=>d,Int32BufferAttribute:()=>w,Int8BufferAttribute:()=>c,Uint16BufferAttribute:()=>m,Uint32BufferAttribute:()=>f,Uint8BufferAttribute:()=>x,Uint8ClampedBufferAttribute:()=>l});var r=i(6980),h=i(4532),e=i(6120),a=i(7282),n=i(7006);const o=new h.Vector3,u=new e.Vector2;class y{constructor(t,s,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=s,this.count=void 0!==t?t.length/s:0,this.normalized=!0===i,this.usage=n.W2J,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,s,i){t*=this.itemSize,i*=s.itemSize;for(let r=0,h=this.itemSize;r<h;r++)this.array[t+r]=s.array[i+r];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const s=this.array;let i=0;for(let r=0,h=t.length;r<h;r++){let h=t[r];void 0===h&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),h=new a.Color),s[i++]=h.r,s[i++]=h.g,s[i++]=h.b}return this}copyVector2sArray(t){const s=this.array;let i=0;for(let r=0,h=t.length;r<h;r++){let h=t[r];void 0===h&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),h=new e.Vector2),s[i++]=h.x,s[i++]=h.y}return this}copyVector3sArray(t){const s=this.array;let i=0;for(let r=0,e=t.length;r<e;r++){let e=t[r];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),e=new h.Vector3),s[i++]=e.x,s[i++]=e.y,s[i++]=e.z}return this}copyVector4sArray(t){const s=this.array;let i=0;for(let h=0,e=t.length;h<e;h++){let e=t[h];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",h),e=new r.L),s[i++]=e.x,s[i++]=e.y,s[i++]=e.z,s[i++]=e.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let s=0,i=this.count;s<i;s++)u.fromBufferAttribute(this,s),u.applyMatrix3(t),this.setXY(s,u.x,u.y);else if(3===this.itemSize)for(let s=0,i=this.count;s<i;s++)o.fromBufferAttribute(this,s),o.applyMatrix3(t),this.setXYZ(s,o.x,o.y,o.z);return this}applyMatrix4(t){for(let s=0,i=this.count;s<i;s++)o.fromBufferAttribute(this,s),o.applyMatrix4(t),this.setXYZ(s,o.x,o.y,o.z);return this}applyNormalMatrix(t){for(let s=0,i=this.count;s<i;s++)o.fromBufferAttribute(this,s),o.applyNormalMatrix(t),this.setXYZ(s,o.x,o.y,o.z);return this}transformDirection(t){for(let s=0,i=this.count;s<i;s++)o.fromBufferAttribute(this,s),o.transformDirection(t),this.setXYZ(s,o.x,o.y,o.z);return this}set(t,s=0){return this.array.set(t,s),this}getX(t){return this.array[t*this.itemSize]}setX(t,s){return this.array[t*this.itemSize]=s,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,s){return this.array[t*this.itemSize+1]=s,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,s){return this.array[t*this.itemSize+2]=s,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,s){return this.array[t*this.itemSize+3]=s,this}setXY(t,s,i){return t*=this.itemSize,this.array[t+0]=s,this.array[t+1]=i,this}setXYZ(t,s,i,r){return t*=this.itemSize,this.array[t+0]=s,this.array[t+1]=i,this.array[t+2]=r,this}setXYZW(t,s,i,r,h){return t*=this.itemSize,this.array[t+0]=s,this.array[t+1]=i,this.array[t+2]=r,this.array[t+3]=h,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==n.W2J&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}y.prototype.isBufferAttribute=!0;class c extends y{constructor(t,s,i){super(new Int8Array(t),s,i)}}class x extends y{constructor(t,s,i){super(new Uint8Array(t),s,i)}}class l extends y{constructor(t,s,i){super(new Uint8ClampedArray(t),s,i)}}class d extends y{constructor(t,s,i){super(new Int16Array(t),s,i)}}class m extends y{constructor(t,s,i){super(new Uint16Array(t),s,i)}}class w extends y{constructor(t,s,i){super(new Int32Array(t),s,i)}}class f extends y{constructor(t,s,i){super(new Uint32Array(t),s,i)}}class M extends y{constructor(t,s,i){super(new Uint16Array(t),s,i)}}M.prototype.isFloat16BufferAttribute=!0;class z extends y{constructor(t,s,i){super(new Float32Array(t),s,i)}}class p extends y{constructor(t,s,i){super(new Float64Array(t),s,i)}}},6120:(t,s,i)=>{i.r(s),i.d(s,{Vector2:()=>r});class r{constructor(t=0,s=0){this.x=t,this.y=s}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,s){return this.x=t,this.y=s,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,s){return void 0!==s?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,s)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t,s){return void 0!==s?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,s)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const s=this.x,i=this.y,r=t.elements;return this.x=r[0]*s+r[3]*i+r[6],this.y=r[1]*s+r[4]*i+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y;return s*s+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t}fromBufferAttribute(t,s,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(s),this.y=t.getY(s),this}rotateAround(t,s){const i=Math.cos(s),r=Math.sin(s),h=this.x-t.x,e=this.y-t.y;return this.x=h*i-e*r+t.x,this.y=h*r+e*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}r.prototype.isVector2=!0},6980:(t,s,i)=>{i.d(s,{L:()=>r});class r{constructor(t=0,s=0,i=0,r=1){this.x=t,this.y=s,this.z=i,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,s,i,r){return this.x=t,this.y=s,this.z=i,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;case 3:this.w=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,s){return void 0!==s?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,s)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this.w=t.w+s.w,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this.w+=t.w*s,this}sub(t,s){return void 0!==s?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,s)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this.w=t.w-s.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const s=this.x,i=this.y,r=this.z,h=this.w,e=t.elements;return this.x=e[0]*s+e[4]*i+e[8]*r+e[12]*h,this.y=e[1]*s+e[5]*i+e[9]*r+e[13]*h,this.z=e[2]*s+e[6]*i+e[10]*r+e[14]*h,this.w=e[3]*s+e[7]*i+e[11]*r+e[15]*h,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const s=Math.sqrt(1-t.w*t.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/s,this.y=t.y/s,this.z=t.z/s),this}setAxisAngleFromRotationMatrix(t){let s,i,r,h;const e=.01,a=.1,n=t.elements,o=n[0],u=n[4],y=n[8],c=n[1],x=n[5],l=n[9],d=n[2],m=n[6],w=n[10];if(Math.abs(u-c)<e&&Math.abs(y-d)<e&&Math.abs(l-m)<e){if(Math.abs(u+c)<a&&Math.abs(y+d)<a&&Math.abs(l+m)<a&&Math.abs(o+x+w-3)<a)return this.set(1,0,0,0),this;s=Math.PI;const t=(o+1)/2,n=(x+1)/2,f=(w+1)/2,M=(u+c)/4,z=(y+d)/4,p=(l+m)/4;return t>n&&t>f?t<e?(i=0,r=.707106781,h=.707106781):(i=Math.sqrt(t),r=M/i,h=z/i):n>f?n<e?(i=.707106781,r=0,h=.707106781):(r=Math.sqrt(n),i=M/r,h=p/r):f<e?(i=.707106781,r=.707106781,h=0):(h=Math.sqrt(f),i=z/h,r=p/h),this.set(i,r,h,s),this}let f=Math.sqrt((m-l)*(m-l)+(y-d)*(y-d)+(c-u)*(c-u));return Math.abs(f)<.001&&(f=1),this.x=(m-l)/f,this.y=(y-d)/f,this.z=(c-u)/f,this.w=Math.acos((o+x+w-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this.w=Math.max(t.w,Math.min(s.w,this.w)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this.w=Math.max(t,Math.min(s,this.w)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this.w+=(t.w-this.w)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this.w=t.w+(s.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this.w=t[s+3],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t[s+3]=this.w,t}fromBufferAttribute(t,s,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this.w=t.getW(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}r.prototype.isVector4=!0}}]);