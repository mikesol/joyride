{"version":3,"file":"7613.bundle.js","mappings":"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","sources":["webpack://joyride/./node_modules/three/src/constants.js","webpack://joyride/./node_modules/three/src/core/EventDispatcher.js","webpack://joyride/./node_modules/three/src/materials/Material.js","webpack://joyride/./node_modules/three/src/materials/RawShaderMaterial.js","webpack://joyride/./node_modules/three/src/materials/ShaderMaterial.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/default_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/default_fragment.glsl.js","webpack://joyride/./node_modules/three/src/math/MathUtils.js","webpack://joyride/./node_modules/three/src/renderers/shaders/UniformsUtils.js"],"sourcesContent":["export const REVISION = '140';\nexport const MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nexport const TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nexport const CullFaceNone = 0;\nexport const CullFaceBack = 1;\nexport const CullFaceFront = 2;\nexport const CullFaceFrontBack = 3;\nexport const BasicShadowMap = 0;\nexport const PCFShadowMap = 1;\nexport const PCFSoftShadowMap = 2;\nexport const VSMShadowMap = 3;\nexport const FrontSide = 0;\nexport const BackSide = 1;\nexport const DoubleSide = 2;\nexport const FlatShading = 1;\nexport const SmoothShading = 2;\nexport const NoBlending = 0;\nexport const NormalBlending = 1;\nexport const AdditiveBlending = 2;\nexport const SubtractiveBlending = 3;\nexport const MultiplyBlending = 4;\nexport const CustomBlending = 5;\nexport const AddEquation = 100;\nexport const SubtractEquation = 101;\nexport const ReverseSubtractEquation = 102;\nexport const MinEquation = 103;\nexport const MaxEquation = 104;\nexport const ZeroFactor = 200;\nexport const OneFactor = 201;\nexport const SrcColorFactor = 202;\nexport const OneMinusSrcColorFactor = 203;\nexport const SrcAlphaFactor = 204;\nexport const OneMinusSrcAlphaFactor = 205;\nexport const DstAlphaFactor = 206;\nexport const OneMinusDstAlphaFactor = 207;\nexport const DstColorFactor = 208;\nexport const OneMinusDstColorFactor = 209;\nexport const SrcAlphaSaturateFactor = 210;\nexport const NeverDepth = 0;\nexport const AlwaysDepth = 1;\nexport const LessDepth = 2;\nexport const LessEqualDepth = 3;\nexport const EqualDepth = 4;\nexport const GreaterEqualDepth = 5;\nexport const GreaterDepth = 6;\nexport const NotEqualDepth = 7;\nexport const MultiplyOperation = 0;\nexport const MixOperation = 1;\nexport const AddOperation = 2;\nexport const NoToneMapping = 0;\nexport const LinearToneMapping = 1;\nexport const ReinhardToneMapping = 2;\nexport const CineonToneMapping = 3;\nexport const ACESFilmicToneMapping = 4;\nexport const CustomToneMapping = 5;\n\nexport const UVMapping = 300;\nexport const CubeReflectionMapping = 301;\nexport const CubeRefractionMapping = 302;\nexport const EquirectangularReflectionMapping = 303;\nexport const EquirectangularRefractionMapping = 304;\nexport const CubeUVReflectionMapping = 306;\nexport const RepeatWrapping = 1000;\nexport const ClampToEdgeWrapping = 1001;\nexport const MirroredRepeatWrapping = 1002;\nexport const NearestFilter = 1003;\nexport const NearestMipmapNearestFilter = 1004;\nexport const NearestMipMapNearestFilter = 1004;\nexport const NearestMipmapLinearFilter = 1005;\nexport const NearestMipMapLinearFilter = 1005;\nexport const LinearFilter = 1006;\nexport const LinearMipmapNearestFilter = 1007;\nexport const LinearMipMapNearestFilter = 1007;\nexport const LinearMipmapLinearFilter = 1008;\nexport const LinearMipMapLinearFilter = 1008;\nexport const UnsignedByteType = 1009;\nexport const ByteType = 1010;\nexport const ShortType = 1011;\nexport const UnsignedShortType = 1012;\nexport const IntType = 1013;\nexport const UnsignedIntType = 1014;\nexport const FloatType = 1015;\nexport const HalfFloatType = 1016;\nexport const UnsignedShort4444Type = 1017;\nexport const UnsignedShort5551Type = 1018;\nexport const UnsignedInt248Type = 1020;\nexport const AlphaFormat = 1021;\nexport const RGBFormat = 1022;\nexport const RGBAFormat = 1023;\nexport const LuminanceFormat = 1024;\nexport const LuminanceAlphaFormat = 1025;\nexport const DepthFormat = 1026;\nexport const DepthStencilFormat = 1027;\nexport const RedFormat = 1028;\nexport const RedIntegerFormat = 1029;\nexport const RGFormat = 1030;\nexport const RGIntegerFormat = 1031;\nexport const RGBAIntegerFormat = 1033;\n\nexport const RGB_S3TC_DXT1_Format = 33776;\nexport const RGBA_S3TC_DXT1_Format = 33777;\nexport const RGBA_S3TC_DXT3_Format = 33778;\nexport const RGBA_S3TC_DXT5_Format = 33779;\nexport const RGB_PVRTC_4BPPV1_Format = 35840;\nexport const RGB_PVRTC_2BPPV1_Format = 35841;\nexport const RGBA_PVRTC_4BPPV1_Format = 35842;\nexport const RGBA_PVRTC_2BPPV1_Format = 35843;\nexport const RGB_ETC1_Format = 36196;\nexport const RGB_ETC2_Format = 37492;\nexport const RGBA_ETC2_EAC_Format = 37496;\nexport const RGBA_ASTC_4x4_Format = 37808;\nexport const RGBA_ASTC_5x4_Format = 37809;\nexport const RGBA_ASTC_5x5_Format = 37810;\nexport const RGBA_ASTC_6x5_Format = 37811;\nexport const RGBA_ASTC_6x6_Format = 37812;\nexport const RGBA_ASTC_8x5_Format = 37813;\nexport const RGBA_ASTC_8x6_Format = 37814;\nexport const RGBA_ASTC_8x8_Format = 37815;\nexport const RGBA_ASTC_10x5_Format = 37816;\nexport const RGBA_ASTC_10x6_Format = 37817;\nexport const RGBA_ASTC_10x8_Format = 37818;\nexport const RGBA_ASTC_10x10_Format = 37819;\nexport const RGBA_ASTC_12x10_Format = 37820;\nexport const RGBA_ASTC_12x12_Format = 37821;\nexport const RGBA_BPTC_Format = 36492;\nexport const LoopOnce = 2200;\nexport const LoopRepeat = 2201;\nexport const LoopPingPong = 2202;\nexport const InterpolateDiscrete = 2300;\nexport const InterpolateLinear = 2301;\nexport const InterpolateSmooth = 2302;\nexport const ZeroCurvatureEnding = 2400;\nexport const ZeroSlopeEnding = 2401;\nexport const WrapAroundEnding = 2402;\nexport const NormalAnimationBlendMode = 2500;\nexport const AdditiveAnimationBlendMode = 2501;\nexport const TrianglesDrawMode = 0;\nexport const TriangleStripDrawMode = 1;\nexport const TriangleFanDrawMode = 2;\nexport const LinearEncoding = 3000;\nexport const sRGBEncoding = 3001;\nexport const BasicDepthPacking = 3200;\nexport const RGBADepthPacking = 3201;\nexport const TangentSpaceNormalMap = 0;\nexport const ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nexport const NoColorSpace = '';\nexport const SRGBColorSpace = 'srgb';\nexport const LinearSRGBColorSpace = 'srgb-linear';\n\nexport const ZeroStencilOp = 0;\nexport const KeepStencilOp = 7680;\nexport const ReplaceStencilOp = 7681;\nexport const IncrementStencilOp = 7682;\nexport const DecrementStencilOp = 7683;\nexport const IncrementWrapStencilOp = 34055;\nexport const DecrementWrapStencilOp = 34056;\nexport const InvertStencilOp = 5386;\n\nexport const NeverStencilFunc = 512;\nexport const LessStencilFunc = 513;\nexport const EqualStencilFunc = 514;\nexport const LessEqualStencilFunc = 515;\nexport const GreaterStencilFunc = 516;\nexport const NotEqualStencilFunc = 517;\nexport const GreaterEqualStencilFunc = 518;\nexport const AlwaysStencilFunc = 519;\n\nexport const StaticDrawUsage = 35044;\nexport const DynamicDrawUsage = 35048;\nexport const StreamDrawUsage = 35040;\nexport const StaticReadUsage = 35045;\nexport const DynamicReadUsage = 35049;\nexport const StreamReadUsage = 35041;\nexport const StaticCopyUsage = 35046;\nexport const DynamicCopyUsage = 35050;\nexport const StreamCopyUsage = 35042;\n\nexport const GLSL1 = '100';\nexport const GLSL3 = '300 es';\n\nexport const _SRGBAFormat = 1035; // fallback for WebGL 1\n","/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { EventDispatcher };\n","import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { FrontSide, FlatShading, NormalBlending, LessEqualDepth, AddEquation, OneMinusSrcAlphaFactor, SrcAlphaFactor, AlwaysStencilFunc, KeepStencilOp } from '../constants.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatibility if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nMaterial.prototype.isMaterial = true;\n\nMaterial.fromType = function ( /*type*/ ) {\n\n\t// TODO: Behavior added in Materials.js\n\n\treturn null;\n\n};\n\nexport { Material };\n","import { ShaderMaterial } from './ShaderMaterial.js';\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\nexport { RawShaderMaterial };\n","import { Material } from './Material.js';\nimport { cloneUniforms } from '../renderers/shaders/UniformsUtils.js';\n\nimport default_vertex from '../renderers/shaders/ShaderChunk/default_vertex.glsl.js';\nimport default_fragment from '../renderers/shaders/ShaderChunk/default_fragment.glsl.js';\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nexport { ShaderMaterial };\n","export default /* glsl */`\nvoid main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n`;\n","export default /* glsl */`\nvoid main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}\n`;\n","const _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\n\n\nexport {\n\tDEG2RAD,\n\tRAD2DEG,\n\tgenerateUUID,\n\tclamp,\n\teuclideanModulo,\n\tmapLinear,\n\tinverseLerp,\n\tlerp,\n\tdamp,\n\tpingpong,\n\tsmoothstep,\n\tsmootherstep,\n\trandInt,\n\trandFloat,\n\trandFloatSpread,\n\tseededRandom,\n\tdegToRad,\n\tradToDeg,\n\tisPowerOfTwo,\n\tceilPowerOfTwo,\n\tfloorPowerOfTwo,\n\tsetQuaternionFromProperEuler,\n\tnormalize,\n\tdenormalize,\n};\n","/**\n * Uniform Utilities\n */\n\nexport function cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nexport function mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nexport { UniformsUtils };\n"],"names":["REVISION","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","SRGBColorSpace","LinearSRGBColorSpace","KeepStencilOp","AlwaysStencilFunc","StaticDrawUsage","GLSL3","_SRGBAFormat","EventDispatcher","addEventListener","type","listener","undefined","this","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","materialId","Material","constructor","super","Object","defineProperty","value","uuid","name","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","visible","toneMapped","userData","version","_alphaTest","alphaTest","onBuild","onBeforeRender","onBeforeCompile","customProgramCacheKey","toString","setValues","values","key","newValue","console","warn","flatShading","currentValue","isColor","set","isVector3","copy","toJSON","meta","isRootObject","textures","images","data","metadata","generator","extractFromCache","cache","color","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","isTexture","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","toArray","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","size","sizeAttenuation","rotation","linewidth","dashSize","gapSize","scale","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fog","JSON","stringify","clone","source","srcPlanes","dstPlanes","n","Array","parse","dispose","needsUpdate","prototype","isMaterial","fromType","RawShaderMaterial","ShaderMaterial","parameters","isRawShaderMaterial","defines","uniforms","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","attributes","error","assign","isVector2","isVector4","isMatrix3","isMatrix4","keys","isShaderMaterial","_lut","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","toLowerCase","clamp","min","max","euclideanModulo","m","lerp","x","y","t","isPowerOfTwo","floorPowerOfTwo","pow","floor","log","LN2","cloneUniforms","src","dst","u","p","property","isQuaternion","isArray","mergeUniforms","merged","tmp","UniformsUtils","merge"],"sourceRoot":""}