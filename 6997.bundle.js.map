{"version":3,"file":"6997.bundle.js","mappings":"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","sources":["webpack://joyride/./node_modules/three/src/core/EventDispatcher.js","webpack://joyride/./node_modules/three/src/materials/Material.js","webpack://joyride/./node_modules/three/src/materials/MeshStandardMaterial.js","webpack://joyride/./node_modules/three/src/math/MathUtils.js","webpack://joyride/./node_modules/three/src/math/Vector2.js"],"sourcesContent":["/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { EventDispatcher };\n","import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { FrontSide, FlatShading, NormalBlending, LessEqualDepth, AddEquation, OneMinusSrcAlphaFactor, SrcAlphaFactor, AlwaysStencilFunc, KeepStencilOp } from '../constants.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatibility if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nMaterial.prototype.isMaterial = true;\n\nMaterial.fromType = function ( /*type*/ ) {\n\n\t// TODO: Behavior added in Materials.js\n\n\treturn null;\n\n};\n\nexport { Material };\n","import { TangentSpaceNormalMap } from '../constants.js';\nimport { Material } from './Material.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Color } from '../math/Color.js';\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nexport { MeshStandardMaterial };\n","const _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\n\n\nexport {\n\tDEG2RAD,\n\tRAD2DEG,\n\tgenerateUUID,\n\tclamp,\n\teuclideanModulo,\n\tmapLinear,\n\tinverseLerp,\n\tlerp,\n\tdamp,\n\tpingpong,\n\tsmoothstep,\n\tsmootherstep,\n\trandInt,\n\trandFloat,\n\trandFloatSpread,\n\tseededRandom,\n\tdegToRad,\n\tradToDeg,\n\tisPowerOfTwo,\n\tceilPowerOfTwo,\n\tfloorPowerOfTwo,\n\tsetQuaternionFromProperEuler,\n\tnormalize,\n\tdenormalize,\n};\n","class Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nVector2.prototype.isVector2 = true;\n\nexport { Vector2 };\n"],"names":["EventDispatcher","addEventListener","type","listener","undefined","this","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","materialId","Material","constructor","super","Object","defineProperty","value","uuid","name","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","visible","toneMapped","userData","version","_alphaTest","alphaTest","onBuild","onBeforeRender","onBeforeCompile","customProgramCacheKey","toString","setValues","values","key","newValue","console","warn","flatShading","currentValue","isColor","set","isVector3","copy","toJSON","meta","isRootObject","textures","images","data","metadata","generator","extractFromCache","cache","color","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","isTexture","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","toArray","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","size","sizeAttenuation","rotation","linewidth","dashSize","gapSize","scale","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fog","JSON","stringify","clone","source","srcPlanes","dstPlanes","n","Array","parse","dispose","needsUpdate","prototype","isMaterial","fromType","MeshStandardMaterial","parameters","defines","Color","Vector2","isMeshStandardMaterial","_lut","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","toLowerCase","clamp","min","max","euclideanModulo","m","lerp","x","y","t","isPowerOfTwo","floorPowerOfTwo","pow","floor","log","LN2","width","height","setScalar","scalar","setX","setY","setComponent","Error","getComponent","v","add","w","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","ceil","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","fromBufferAttribute","attribute","getX","getY","rotateAround","center","c","cos","sin","Symbol","iterator","isVector2"],"sourceRoot":""}