"use strict";(self.webpackChunkjoyride=self.webpackChunkjoyride||[]).push([[394],{406:(t,i,s)=>{s.d(i,{F:()=>r});var e=s(9574),n=s(7006),a=s(9542);let o=0;class r extends e.p{constructor(){super(),Object.defineProperty(this,"id",{value:o++}),this.uuid=a.DO(),this.name="",this.type="Material",this.blending=n.bdR,this.side=n.Wl3,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=n.k74,this.blendDst=n.LgZ,this.blendEquation=n.bGH,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=n.vCF,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=n.cum,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=n.x5V,this.stencilZFail=n.x5V,this.stencilZPass=n.x5V,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const i in t){const s=t[i];if(void 0===s){console.warn("THREE.Material: '"+i+"' parameter is undefined.");continue}if("shading"===i){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=s===n.esl;continue}const e=this[i];void 0!==e?e&&e.isColor?e.set(s):e&&e.isVector3&&s&&s.isVector3?e.copy(s):this[i]=s:console.warn("THREE."+this.type+": '"+i+"' is not a property of this material.")}}toJSON(t){const i=void 0===t||"string"==typeof t;i&&(t={textures:{},images:{}});const s={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function e(t){const i=[];for(const s in t){const e=t[s];delete e.metadata,i.push(e)}return i}if(s.uuid=this.uuid,s.type=this.type,""!==this.name&&(s.name=this.name),this.color&&this.color.isColor&&(s.color=this.color.getHex()),void 0!==this.roughness&&(s.roughness=this.roughness),void 0!==this.metalness&&(s.metalness=this.metalness),void 0!==this.sheen&&(s.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(s.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(s.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(s.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(s.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(s.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(s.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(s.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(s.shininess=this.shininess),void 0!==this.clearcoat&&(s.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(s.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(s.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(s.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(s.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,s.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(s.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(s.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(s.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(s.lightMap=this.lightMap.toJSON(t).uuid,s.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(s.aoMap=this.aoMap.toJSON(t).uuid,s.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(s.bumpMap=this.bumpMap.toJSON(t).uuid,s.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(s.normalMap=this.normalMap.toJSON(t).uuid,s.normalMapType=this.normalMapType,s.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(s.displacementMap=this.displacementMap.toJSON(t).uuid,s.displacementScale=this.displacementScale,s.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(s.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(s.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(s.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(s.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(s.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(s.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(s.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(s.combine=this.combine)),void 0!==this.envMapIntensity&&(s.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(s.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(s.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(s.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(s.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(s.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(s.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(s.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(s.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(s.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(s.size=this.size),null!==this.shadowSide&&(s.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(s.sizeAttenuation=this.sizeAttenuation),this.blending!==n.bdR&&(s.blending=this.blending),this.side!==n.Wl3&&(s.side=this.side),this.vertexColors&&(s.vertexColors=!0),this.opacity<1&&(s.opacity=this.opacity),!0===this.transparent&&(s.transparent=this.transparent),s.depthFunc=this.depthFunc,s.depthTest=this.depthTest,s.depthWrite=this.depthWrite,s.colorWrite=this.colorWrite,s.stencilWrite=this.stencilWrite,s.stencilWriteMask=this.stencilWriteMask,s.stencilFunc=this.stencilFunc,s.stencilRef=this.stencilRef,s.stencilFuncMask=this.stencilFuncMask,s.stencilFail=this.stencilFail,s.stencilZFail=this.stencilZFail,s.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(s.rotation=this.rotation),!0===this.polygonOffset&&(s.polygonOffset=!0),0!==this.polygonOffsetFactor&&(s.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(s.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(s.linewidth=this.linewidth),void 0!==this.dashSize&&(s.dashSize=this.dashSize),void 0!==this.gapSize&&(s.gapSize=this.gapSize),void 0!==this.scale&&(s.scale=this.scale),!0===this.dithering&&(s.dithering=!0),this.alphaTest>0&&(s.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(s.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(s.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(s.wireframe=this.wireframe),this.wireframeLinewidth>1&&(s.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(s.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(s.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(s.flatShading=this.flatShading),!1===this.visible&&(s.visible=!1),!1===this.toneMapped&&(s.toneMapped=!1),!1===this.fog&&(s.fog=!1),"{}"!==JSON.stringify(this.userData)&&(s.userData=this.userData),i){const i=e(t.textures),n=e(t.images);i.length>0&&(s.textures=i),n.length>0&&(s.images=n)}return s}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const i=t.clippingPlanes;let s=null;if(null!==i){const t=i.length;s=new Array(t);for(let e=0;e!==t;++e)s[e]=i[e].clone()}return this.clippingPlanes=s,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}r.prototype.isMaterial=!0,r.fromType=function(){return null}},2081:(t,i,s)=>{s.d(i,{z:()=>p});var e=s(4532);const n=new e.Vector3,a=new e.Vector3,o=new e.Vector3,r=new e.Vector3,h=new e.Vector3,l=new e.Vector3,c=new e.Vector3;class p{constructor(t=new e.Vector3,i=new e.Vector3(0,0,-1)){this.origin=t,this.direction=i}set(t,i){return this.origin.copy(t),this.direction.copy(i),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,i){return i.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,n)),this}closestPointToPoint(t,i){i.subVectors(t,this.origin);const s=i.dot(this.direction);return s<0?i.copy(this.origin):i.copy(this.direction).multiplyScalar(s).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const i=n.subVectors(t,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(t):(n.copy(this.direction).multiplyScalar(i).add(this.origin),n.distanceToSquared(t))}distanceSqToSegment(t,i,s,e){a.copy(t).add(i).multiplyScalar(.5),o.copy(i).sub(t).normalize(),r.copy(this.origin).sub(a);const n=.5*t.distanceTo(i),h=-this.direction.dot(o),l=r.dot(this.direction),c=-r.dot(o),p=r.lengthSq(),u=Math.abs(1-h*h);let d,m,g,y;if(u>0)if(d=h*c-l,m=h*l-c,y=n*u,d>=0)if(m>=-y)if(m<=y){const t=1/u;d*=t,m*=t,g=d*(d+h*m+2*l)+m*(h*d+m+2*c)+p}else m=n,d=Math.max(0,-(h*m+l)),g=-d*d+m*(m+2*c)+p;else m=-n,d=Math.max(0,-(h*m+l)),g=-d*d+m*(m+2*c)+p;else m<=-y?(d=Math.max(0,-(-h*n+l)),m=d>0?-n:Math.min(Math.max(-n,-c),n),g=-d*d+m*(m+2*c)+p):m<=y?(d=0,m=Math.min(Math.max(-n,-c),n),g=m*(m+2*c)+p):(d=Math.max(0,-(h*n+l)),m=d>0?n:Math.min(Math.max(-n,-c),n),g=-d*d+m*(m+2*c)+p);else m=h>0?-n:n,d=Math.max(0,-(h*m+l)),g=-d*d+m*(m+2*c)+p;return s&&s.copy(this.direction).multiplyScalar(d).add(this.origin),e&&e.copy(o).multiplyScalar(m).add(a),g}intersectSphere(t,i){n.subVectors(t.center,this.origin);const s=n.dot(this.direction),e=n.dot(n)-s*s,a=t.radius*t.radius;if(e>a)return null;const o=Math.sqrt(a-e),r=s-o,h=s+o;return r<0&&h<0?null:r<0?this.at(h,i):this.at(r,i)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const i=t.normal.dot(this.direction);if(0===i)return 0===t.distanceToPoint(this.origin)?0:null;const s=-(this.origin.dot(t.normal)+t.constant)/i;return s>=0?s:null}intersectPlane(t,i){const s=this.distanceToPlane(t);return null===s?null:this.at(s,i)}intersectsPlane(t){const i=t.distanceToPoint(this.origin);return 0===i||t.normal.dot(this.direction)*i<0}intersectBox(t,i){let s,e,n,a,o,r;const h=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,p=this.origin;return h>=0?(s=(t.min.x-p.x)*h,e=(t.max.x-p.x)*h):(s=(t.max.x-p.x)*h,e=(t.min.x-p.x)*h),l>=0?(n=(t.min.y-p.y)*l,a=(t.max.y-p.y)*l):(n=(t.max.y-p.y)*l,a=(t.min.y-p.y)*l),s>a||n>e?null:((n>s||s!=s)&&(s=n),(a<e||e!=e)&&(e=a),c>=0?(o=(t.min.z-p.z)*c,r=(t.max.z-p.z)*c):(o=(t.max.z-p.z)*c,r=(t.min.z-p.z)*c),s>r||o>e?null:((o>s||s!=s)&&(s=o),(r<e||e!=e)&&(e=r),e<0?null:this.at(s>=0?s:e,i)))}intersectsBox(t){return null!==this.intersectBox(t,n)}intersectTriangle(t,i,s,e,n){h.subVectors(i,t),l.subVectors(s,t),c.crossVectors(h,l);let a,o=this.direction.dot(c);if(o>0){if(e)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}r.subVectors(this.origin,t);const p=a*this.direction.dot(l.crossVectors(r,l));if(p<0)return null;const u=a*this.direction.dot(h.cross(r));if(u<0)return null;if(p+u>o)return null;const d=-a*r.dot(c);return d<0?null:this.at(d/o,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}},394:(t,i,s)=>{s.r(i),s.d(i,{Points:()=>y});var e=s(9771),n=s(2081),a=s(1245),o=s(1052),r=s(4532),h=s(406),l=s(7282);class c extends h.F{constructor(t){super(),this.type="PointsMaterial",this.color=new l.Color(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}c.prototype.isPointsMaterial=!0;var p=s(5699);const u=new a.Matrix4,d=new n.z,m=new e.Sphere,g=new r.Vector3;class y extends o.T{constructor(t=new p.BufferGeometry,i=new c){super(),this.type="Points",this.geometry=t,this.material=i,this.updateMorphTargets()}copy(t){return super.copy(t),this.material=t.material,this.geometry=t.geometry,this}raycast(t,i){const s=this.geometry,e=this.matrixWorld,n=t.params.Points.threshold,a=s.drawRange;if(null===s.boundingSphere&&s.computeBoundingSphere(),m.copy(s.boundingSphere),m.applyMatrix4(e),m.radius+=n,!1===t.ray.intersectsSphere(m))return;u.copy(e).invert(),d.copy(t.ray).applyMatrix4(u);const o=n/((this.scale.x+this.scale.y+this.scale.z)/3),r=o*o;if(s.isBufferGeometry){const n=s.index,o=s.attributes.position;if(null!==n)for(let s=Math.max(0,a.start),h=Math.min(n.count,a.start+a.count);s<h;s++){const a=n.getX(s);g.fromBufferAttribute(o,a),M(g,a,r,e,t,i,this)}else for(let s=Math.max(0,a.start),n=Math.min(o.count,a.start+a.count);s<n;s++)g.fromBufferAttribute(o,s),M(g,s,r,e,t,i,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const t=this.geometry;if(t.isBufferGeometry){const i=t.morphAttributes,s=Object.keys(i);if(s.length>0){const t=i[s[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,s=t.length;i<s;i++){const s=t[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=i}}}}else{const i=t.morphTargets;void 0!==i&&i.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function M(t,i,s,e,n,a,o){const h=d.distanceSqToPoint(t);if(h<s){const s=new r.Vector3;d.closestPointToPoint(t,s),s.applyMatrix4(e);const l=n.ray.origin.distanceTo(s);if(l<n.near||l>n.far)return;a.push({distance:l,distanceToRay:Math.sqrt(h),point:s,index:i,face:null,object:o})}}y.prototype.isPoints=!0}}]);