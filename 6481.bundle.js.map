{"version":3,"file":"6481.bundle.js","mappings":"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xBC,uBC3HwB,qED4HxBC,mBE5HwB,qFF6HxBC,wBG7HwB,+DH8HxBC,eI9HwB,ghBJ+HxBC,oBK/HwB,gGLgIxBC,aMhIwB,2CNiIxBC,mBOjIwB,yHPkIxBC,MQlIwB,k7PRmIxBC,sBSnIwB,iyCToIxBC,yBUpIwB,ypBVqIxBC,8BWrIwB,sIXsIxBC,4BYtIwB,6EZuIxBC,uBavIwB,mFbwIxBC,ecxIwB,2IdyIxBC,oBezIwB,iIf0IxBC,kBgB1IwB,oKhB2IxBC,aiB3IwB,ySjB4IxBC,OkB5IwB,w1FlB6IxBC,4BmB7IwB,g9HnB8IxBC,qBoB9IwB,qtBpB+IxBC,4BqB/IwB,0JrBgJxBC,uBsBhJwB,2KtBiJxBC,qBuBjJwB,iJvBkJxBC,0BwBlJwB,2ExBmJxBC,mByBnJwB,0DzBoJxBC,wB0BpJwB,uR1BqJxBC,gB2BrJwB,45C3BsJxBC,4B4BtJwB,qN5BuJxBC,qB6BvJwB,2U7BwJxBC,mB8BxJwB,mT9ByJxBC,8B+BzJwB,ukC/B0JxBC,cgC1JwB,krBhC2JxBC,WiC3JwB,gEjC4JxBC,gBkC5JwB,6DlC6JxBC,amC7JwB,6SnC8JxBC,kBoC9JwB,6NpC+JxBC,0BqC/JwB,scrCgKxBC,kBsChKwB,0NtCiKxBC,uBuCjKwB,yGvCkKxBC,sBwClKwB,s1FxCmKxBC,kByCnKwB,2tLzCoKxBC,qB0CpKwB,wE1CqKxBC,0B2CrKwB,u2B3CsKxBC,sB4CtKwB,0M5CuKxBC,2B6CvKwB,isC7CwKxBC,yB8CxKwB,46E9CyKxBC,8B+CzKwB,04P/C0KxBC,sBgD1KwB,+iJhD2KxBC,qBiD3KwB,guBjD4KxBC,oBkD5KwB,yRlD6KxBC,qBmD7KwB,4SnD8KxBC,0BoD9KwB,iLpD+KxBC,wBqD/KwB,sMrDgLxBC,mBsDhLwB,qZtDiLxBC,auDjLwB,6gBvDkLxBC,kBwDlLwB,2DxDmLxBC,sByDnLwB,qTzDoLxBC,2B0DpLwB,2N1DqLxBC,sB2DrLwB,8Q3DsLxBC,2B4DtLwB,6E5DuLxBC,kB6DvLwB,42B7DwLxBC,mB8DxLwB,87B9DyLxBC,wB+DzLwB,o3B/D0LxBC,mBgE1LwB,8uChE2LxBC,sBiE3LwB,4gCjE4LxBC,qBkE5LwB,iwBlE6LxBC,qBmE7LwB,+JnE8LxBC,mBoE9LwB,+JpE+LxBC,cqE/LwB,ySrEgMxBC,wBsEhMwB,ksCtEiMxBC,gCuEjMwB,iFvEkMxBC,+BwElMwB,qYxEmMxBC,wByEnMwB,ySzEoMxBC,gB0EpMwB,6O1EqMxBC,Q2ErMwB,k0D3EsMxBC,6B4EtMwB,8M5EuMxBC,e6EvMwB,kO7EwMxBC,mB8ExMwB,wF9EyMxBC,wB+EzMwB,4mB/E0MxBC,sBgF1MwB,8QhF2MxBC,2BiF3MwB,6EjF4MxBC,wBkF5MwB,yqVlF6MxBC,sBmF7MwB,86CnF8MxBC,iBoF9MwB,slDpF+MxBC,yBqF/MwB,wjDrFgNxBC,gBsFhNwB,0OtFiNxBC,qBuFjNwB,+zBvFkNxBC,gBwFlNwB,2YxFmNxBC,kByFnNwB,qezFoNxBC,qB0FpNwB,wM1FqNxBC,0B2FrNwB,2E3FsNxBC,qB4FtNwB,qG5FuNxBC,0B6FvNwB,ujE7FwNxBC,sB8FxNwB,06B9FyNxBC,2B+FzNwB,8/H/F0NxBC,iBgG1NwB,iGhG2NxBC,eiG3NwB,0JjG4NxBC,UkG5NwB,6ElG6NxBC,kBmG7NwB,4FnG8NxBC,gBoG9NwB,mJpG+NxBC,WqG/NwB,sHrGgOxBC,gBsGhOwB,kUtGkOxBC,gBuGlO+B,0KvGmO/BC,gBuGtNiC,miBvGuNjCC,UwGpO+B,wQxGqO/BC,UwGpNiC,4WxGqNjCC,WyGtO+B,qjCzGuO/BC,WyG9LiC,0hCzG+LjCC,kB0GxO+B,4uB1GyO/BC,kB0GlMiC,4wB1GmMjCC,c2G1O+B,6M3G2O/BC,c2G5NiC,6U3G6NjCC,gB4G5O+B,+kB5G6O/BC,gB4GhNiC,uzB5GiNjCC,e6G9O+B,w8B7G+O/BC,e6GpMiC,4wD7GqMjCC,iB8GhP+B,irC9GiP/BC,iB8G5LiC,o6E9G6LjCC,gB+GlP+B,w8B/GmP/BC,gB+GvMiC,4mD/GwMjCC,gBgHpP+B,wgChHqP/BC,gBgHvMiC,ssBhHwMjCC,eiHtP+B,spCjHuP/BC,eiHpMiC,0oEjHqMjCC,kBkHxP+B,ivClHyP/BC,kBkH7LiC,u4HlH8LjCC,cmH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","sources":["webpack://joyride/./node_modules/three/src/cameras/Camera.js","webpack://joyride/./node_modules/three/src/cameras/OrthographicCamera.js","webpack://joyride/./node_modules/three/src/cameras/PerspectiveCamera.js","webpack://joyride/./node_modules/three/src/extras/ImageUtils.js","webpack://joyride/./node_modules/three/src/geometries/BoxGeometry.js","webpack://joyride/./node_modules/three/src/geometries/PlaneGeometry.js","webpack://joyride/./node_modules/three/src/materials/ShaderMaterial.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/default_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/default_fragment.glsl.js","webpack://joyride/./node_modules/three/src/math/Frustum.js","webpack://joyride/./node_modules/three/src/math/Plane.js","webpack://joyride/./node_modules/three/src/objects/Group.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLAnimation.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLAttributes.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/alphatest_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/aomap_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/begin_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/bsdfs.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/color_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/color_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/common.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/encodings_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/envmap_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/envmap_common_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/envmap_physical_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/envmap_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/fog_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/fog_pars_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/fog_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/gradientmap_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/lights_pars_begin.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/lights_toon_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/lights_toon_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_begin.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_maps.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/lights_fragment_end.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/map_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/morphcolor_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/normal_fragment_begin.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/normal_fragment_maps.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/normal_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/normal_pars_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/normal_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_normal_fragment_begin.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_normal_fragment_maps.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/clearcoat_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/output_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/packing.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/project_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/dithering_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/dithering_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/skinning_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/transmission_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/transmission_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/uv_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/uv2_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/background.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/cube.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/depth.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/distanceRGBA.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/equirect.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/linedashed.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/meshbasic.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/meshlambert.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/meshmatcap.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/meshnormal.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/meshphong.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/meshphysical.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/meshtoon.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/points.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/shadow.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/sprite.glsl.js","webpack://joyride/./node_modules/three/src/renderers/shaders/UniformsLib.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLBackground.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLBindingStates.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLBufferRenderer.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLCapabilities.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLClipping.js","webpack://joyride/./node_modules/three/src/renderers/WebGLRenderTarget.js","webpack://joyride/./node_modules/three/src/cameras/CubeCamera.js","webpack://joyride/./node_modules/three/src/renderers/WebGLCubeRenderTarget.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLCubeMaps.js","webpack://joyride/./node_modules/three/src/extras/PMREMGenerator.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLCubeUVMaps.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLExtensions.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLGeometries.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLIndexedBufferRenderer.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLInfo.js","webpack://joyride/./node_modules/three/src/textures/DataArrayTexture.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLMorphtargets.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLObjects.js","webpack://joyride/./node_modules/three/src/textures/Data3DTexture.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLUniforms.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLShader.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLProgram.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLShaderCache.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLPrograms.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLProperties.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLRenderLists.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLLights.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLRenderStates.js","webpack://joyride/./node_modules/three/src/materials/MeshDepthMaterial.js","webpack://joyride/./node_modules/three/src/materials/MeshDistanceMaterial.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLShadowMap.js","webpack://joyride/./node_modules/three/src/renderers/shaders/ShaderLib/vsm.glsl.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLState.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLTextures.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLUtils.js","webpack://joyride/./node_modules/three/src/cameras/ArrayCamera.js","webpack://joyride/./node_modules/three/src/renderers/webxr/WebXRController.js","webpack://joyride/./node_modules/three/src/textures/DepthTexture.js","webpack://joyride/./node_modules/three/src/renderers/webxr/WebXRManager.js","webpack://joyride/./node_modules/three/src/renderers/webgl/WebGLMaterials.js","webpack://joyride/./node_modules/three/src/renderers/WebGLRenderer.js","webpack://joyride/./node_modules/three/src/renderers/shaders/UniformsUtils.js","webpack://joyride/./node_modules/three/src/textures/CubeTexture.js","webpack://joyride/./node_modules/three/src/textures/Source.js","webpack://joyride/./node_modules/three/src/textures/Texture.js"],"sourcesContent":["import { Matrix4 } from '../math/Matrix4.js';\nimport { Object3D } from '../core/Object3D.js';\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nCamera.prototype.isCamera = true;\n\nexport { Camera };\n","import { Camera } from './Camera.js';\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nOrthographicCamera.prototype.isOrthographicCamera = true;\n\nexport { OrthographicCamera };\n","import { Camera } from './Camera.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = MathUtils.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn MathUtils.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\nexport { PerspectiveCamera };\n","import { createElementNS } from '../utils.js';\nimport { SRGBToLinear } from '../math/Color.js';\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nexport { ImageUtils };\n","import { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { Vector3 } from '../math/Vector3.js';\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\nexport { BoxGeometry, BoxGeometry as BoxBufferGeometry };\n","import { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nexport { PlaneGeometry, PlaneGeometry as PlaneBufferGeometry };\n","import { Material } from './Material.js';\nimport { cloneUniforms } from '../renderers/shaders/UniformsUtils.js';\n\nimport default_vertex from '../renderers/shaders/ShaderChunk/default_vertex.glsl.js';\nimport default_fragment from '../renderers/shaders/ShaderChunk/default_fragment.glsl.js';\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nexport { ShaderMaterial };\n","export default /* glsl */`\nvoid main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n`;\n","export default /* glsl */`\nvoid main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}\n`;\n","import { Vector3 } from './Vector3.js';\nimport { Sphere } from './Sphere.js';\nimport { Plane } from './Plane.js';\n\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _vector = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n\nexport { Frustum };\n","import { Matrix3 } from './Matrix3.js';\nimport { Vector3 } from './Vector3.js';\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nPlane.prototype.isPlane = true;\n\nexport { Plane };\n","import { Object3D } from '../core/Object3D.js';\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nGroup.prototype.isGroup = true;\n\nexport { Group };\n","function WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nexport { WebGLAnimation };\n","function WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLAttributes };\n","export default /* glsl */`\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n`;\n","import alphamap_fragment from './ShaderChunk/alphamap_fragment.glsl.js';\nimport alphamap_pars_fragment from './ShaderChunk/alphamap_pars_fragment.glsl.js';\nimport alphatest_fragment from './ShaderChunk/alphatest_fragment.glsl.js';\nimport alphatest_pars_fragment from './ShaderChunk/alphatest_pars_fragment.glsl.js';\nimport aomap_fragment from './ShaderChunk/aomap_fragment.glsl.js';\nimport aomap_pars_fragment from './ShaderChunk/aomap_pars_fragment.glsl.js';\nimport begin_vertex from './ShaderChunk/begin_vertex.glsl.js';\nimport beginnormal_vertex from './ShaderChunk/beginnormal_vertex.glsl.js';\nimport bsdfs from './ShaderChunk/bsdfs.glsl.js';\nimport bumpmap_pars_fragment from './ShaderChunk/bumpmap_pars_fragment.glsl.js';\nimport clipping_planes_fragment from './ShaderChunk/clipping_planes_fragment.glsl.js';\nimport clipping_planes_pars_fragment from './ShaderChunk/clipping_planes_pars_fragment.glsl.js';\nimport clipping_planes_pars_vertex from './ShaderChunk/clipping_planes_pars_vertex.glsl.js';\nimport clipping_planes_vertex from './ShaderChunk/clipping_planes_vertex.glsl.js';\nimport color_fragment from './ShaderChunk/color_fragment.glsl.js';\nimport color_pars_fragment from './ShaderChunk/color_pars_fragment.glsl.js';\nimport color_pars_vertex from './ShaderChunk/color_pars_vertex.glsl.js';\nimport color_vertex from './ShaderChunk/color_vertex.glsl.js';\nimport common from './ShaderChunk/common.glsl.js';\nimport cube_uv_reflection_fragment from './ShaderChunk/cube_uv_reflection_fragment.glsl.js';\nimport defaultnormal_vertex from './ShaderChunk/defaultnormal_vertex.glsl.js';\nimport displacementmap_pars_vertex from './ShaderChunk/displacementmap_pars_vertex.glsl.js';\nimport displacementmap_vertex from './ShaderChunk/displacementmap_vertex.glsl.js';\nimport emissivemap_fragment from './ShaderChunk/emissivemap_fragment.glsl.js';\nimport emissivemap_pars_fragment from './ShaderChunk/emissivemap_pars_fragment.glsl.js';\nimport encodings_fragment from './ShaderChunk/encodings_fragment.glsl.js';\nimport encodings_pars_fragment from './ShaderChunk/encodings_pars_fragment.glsl.js';\nimport envmap_fragment from './ShaderChunk/envmap_fragment.glsl.js';\nimport envmap_common_pars_fragment from './ShaderChunk/envmap_common_pars_fragment.glsl.js';\nimport envmap_pars_fragment from './ShaderChunk/envmap_pars_fragment.glsl.js';\nimport envmap_pars_vertex from './ShaderChunk/envmap_pars_vertex.glsl.js';\nimport envmap_vertex from './ShaderChunk/envmap_vertex.glsl.js';\nimport fog_vertex from './ShaderChunk/fog_vertex.glsl.js';\nimport fog_pars_vertex from './ShaderChunk/fog_pars_vertex.glsl.js';\nimport fog_fragment from './ShaderChunk/fog_fragment.glsl.js';\nimport fog_pars_fragment from './ShaderChunk/fog_pars_fragment.glsl.js';\nimport gradientmap_pars_fragment from './ShaderChunk/gradientmap_pars_fragment.glsl.js';\nimport lightmap_fragment from './ShaderChunk/lightmap_fragment.glsl.js';\nimport lightmap_pars_fragment from './ShaderChunk/lightmap_pars_fragment.glsl.js';\nimport lights_lambert_vertex from './ShaderChunk/lights_lambert_vertex.glsl.js';\nimport lights_pars_begin from './ShaderChunk/lights_pars_begin.glsl.js';\nimport envmap_physical_pars_fragment from './ShaderChunk/envmap_physical_pars_fragment.glsl.js';\nimport lights_toon_fragment from './ShaderChunk/lights_toon_fragment.glsl.js';\nimport lights_toon_pars_fragment from './ShaderChunk/lights_toon_pars_fragment.glsl.js';\nimport lights_phong_fragment from './ShaderChunk/lights_phong_fragment.glsl.js';\nimport lights_phong_pars_fragment from './ShaderChunk/lights_phong_pars_fragment.glsl.js';\nimport lights_physical_fragment from './ShaderChunk/lights_physical_fragment.glsl.js';\nimport lights_physical_pars_fragment from './ShaderChunk/lights_physical_pars_fragment.glsl.js';\nimport lights_fragment_begin from './ShaderChunk/lights_fragment_begin.glsl.js';\nimport lights_fragment_maps from './ShaderChunk/lights_fragment_maps.glsl.js';\nimport lights_fragment_end from './ShaderChunk/lights_fragment_end.glsl.js';\nimport logdepthbuf_fragment from './ShaderChunk/logdepthbuf_fragment.glsl.js';\nimport logdepthbuf_pars_fragment from './ShaderChunk/logdepthbuf_pars_fragment.glsl.js';\nimport logdepthbuf_pars_vertex from './ShaderChunk/logdepthbuf_pars_vertex.glsl.js';\nimport logdepthbuf_vertex from './ShaderChunk/logdepthbuf_vertex.glsl.js';\nimport map_fragment from './ShaderChunk/map_fragment.glsl.js';\nimport map_pars_fragment from './ShaderChunk/map_pars_fragment.glsl.js';\nimport map_particle_fragment from './ShaderChunk/map_particle_fragment.glsl.js';\nimport map_particle_pars_fragment from './ShaderChunk/map_particle_pars_fragment.glsl.js';\nimport metalnessmap_fragment from './ShaderChunk/metalnessmap_fragment.glsl.js';\nimport metalnessmap_pars_fragment from './ShaderChunk/metalnessmap_pars_fragment.glsl.js';\nimport morphcolor_vertex from './ShaderChunk/morphcolor_vertex.glsl.js';\nimport morphnormal_vertex from './ShaderChunk/morphnormal_vertex.glsl.js';\nimport morphtarget_pars_vertex from './ShaderChunk/morphtarget_pars_vertex.glsl.js';\nimport morphtarget_vertex from './ShaderChunk/morphtarget_vertex.glsl.js';\nimport normal_fragment_begin from './ShaderChunk/normal_fragment_begin.glsl.js';\nimport normal_fragment_maps from './ShaderChunk/normal_fragment_maps.glsl.js';\nimport normal_pars_fragment from './ShaderChunk/normal_pars_fragment.glsl.js';\nimport normal_pars_vertex from './ShaderChunk/normal_pars_vertex.glsl.js';\nimport normal_vertex from './ShaderChunk/normal_vertex.glsl.js';\nimport normalmap_pars_fragment from './ShaderChunk/normalmap_pars_fragment.glsl.js';\nimport clearcoat_normal_fragment_begin from './ShaderChunk/clearcoat_normal_fragment_begin.glsl.js';\nimport clearcoat_normal_fragment_maps from './ShaderChunk/clearcoat_normal_fragment_maps.glsl.js';\nimport clearcoat_pars_fragment from './ShaderChunk/clearcoat_pars_fragment.glsl.js';\nimport output_fragment from './ShaderChunk/output_fragment.glsl.js';\nimport packing from './ShaderChunk/packing.glsl.js';\nimport premultiplied_alpha_fragment from './ShaderChunk/premultiplied_alpha_fragment.glsl.js';\nimport project_vertex from './ShaderChunk/project_vertex.glsl.js';\nimport dithering_fragment from './ShaderChunk/dithering_fragment.glsl.js';\nimport dithering_pars_fragment from './ShaderChunk/dithering_pars_fragment.glsl.js';\nimport roughnessmap_fragment from './ShaderChunk/roughnessmap_fragment.glsl.js';\nimport roughnessmap_pars_fragment from './ShaderChunk/roughnessmap_pars_fragment.glsl.js';\nimport shadowmap_pars_fragment from './ShaderChunk/shadowmap_pars_fragment.glsl.js';\nimport shadowmap_pars_vertex from './ShaderChunk/shadowmap_pars_vertex.glsl.js';\nimport shadowmap_vertex from './ShaderChunk/shadowmap_vertex.glsl.js';\nimport shadowmask_pars_fragment from './ShaderChunk/shadowmask_pars_fragment.glsl.js';\nimport skinbase_vertex from './ShaderChunk/skinbase_vertex.glsl.js';\nimport skinning_pars_vertex from './ShaderChunk/skinning_pars_vertex.glsl.js';\nimport skinning_vertex from './ShaderChunk/skinning_vertex.glsl.js';\nimport skinnormal_vertex from './ShaderChunk/skinnormal_vertex.glsl.js';\nimport specularmap_fragment from './ShaderChunk/specularmap_fragment.glsl.js';\nimport specularmap_pars_fragment from './ShaderChunk/specularmap_pars_fragment.glsl.js';\nimport tonemapping_fragment from './ShaderChunk/tonemapping_fragment.glsl.js';\nimport tonemapping_pars_fragment from './ShaderChunk/tonemapping_pars_fragment.glsl.js';\nimport transmission_fragment from './ShaderChunk/transmission_fragment.glsl.js';\nimport transmission_pars_fragment from './ShaderChunk/transmission_pars_fragment.glsl.js';\nimport uv_pars_fragment from './ShaderChunk/uv_pars_fragment.glsl.js';\nimport uv_pars_vertex from './ShaderChunk/uv_pars_vertex.glsl.js';\nimport uv_vertex from './ShaderChunk/uv_vertex.glsl.js';\nimport uv2_pars_fragment from './ShaderChunk/uv2_pars_fragment.glsl.js';\nimport uv2_pars_vertex from './ShaderChunk/uv2_pars_vertex.glsl.js';\nimport uv2_vertex from './ShaderChunk/uv2_vertex.glsl.js';\nimport worldpos_vertex from './ShaderChunk/worldpos_vertex.glsl.js';\n\nimport * as background from './ShaderLib/background.glsl.js';\nimport * as cube from './ShaderLib/cube.glsl.js';\nimport * as depth from './ShaderLib/depth.glsl.js';\nimport * as distanceRGBA from './ShaderLib/distanceRGBA.glsl.js';\nimport * as equirect from './ShaderLib/equirect.glsl.js';\nimport * as linedashed from './ShaderLib/linedashed.glsl.js';\nimport * as meshbasic from './ShaderLib/meshbasic.glsl.js';\nimport * as meshlambert from './ShaderLib/meshlambert.glsl.js';\nimport * as meshmatcap from './ShaderLib/meshmatcap.glsl.js';\nimport * as meshnormal from './ShaderLib/meshnormal.glsl.js';\nimport * as meshphong from './ShaderLib/meshphong.glsl.js';\nimport * as meshphysical from './ShaderLib/meshphysical.glsl.js';\nimport * as meshtoon from './ShaderLib/meshtoon.glsl.js';\nimport * as points from './ShaderLib/points.glsl.js';\nimport * as shadow from './ShaderLib/shadow.glsl.js';\nimport * as sprite from './ShaderLib/sprite.glsl.js';\n\nexport const ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: background.vertex,\n\tbackground_frag: background.fragment,\n\tcube_vert: cube.vertex,\n\tcube_frag: cube.fragment,\n\tdepth_vert: depth.vertex,\n\tdepth_frag: depth.fragment,\n\tdistanceRGBA_vert: distanceRGBA.vertex,\n\tdistanceRGBA_frag: distanceRGBA.fragment,\n\tequirect_vert: equirect.vertex,\n\tequirect_frag: equirect.fragment,\n\tlinedashed_vert: linedashed.vertex,\n\tlinedashed_frag: linedashed.fragment,\n\tmeshbasic_vert: meshbasic.vertex,\n\tmeshbasic_frag: meshbasic.fragment,\n\tmeshlambert_vert: meshlambert.vertex,\n\tmeshlambert_frag: meshlambert.fragment,\n\tmeshmatcap_vert: meshmatcap.vertex,\n\tmeshmatcap_frag: meshmatcap.fragment,\n\tmeshnormal_vert: meshnormal.vertex,\n\tmeshnormal_frag: meshnormal.fragment,\n\tmeshphong_vert: meshphong.vertex,\n\tmeshphong_frag: meshphong.fragment,\n\tmeshphysical_vert: meshphysical.vertex,\n\tmeshphysical_frag: meshphysical.fragment,\n\tmeshtoon_vert: meshtoon.vertex,\n\tmeshtoon_frag: meshtoon.fragment,\n\tpoints_vert: points.vertex,\n\tpoints_frag: points.fragment,\n\tshadow_vert: shadow.vertex,\n\tshadow_frag: shadow.fragment,\n\tsprite_vert: sprite.vertex,\n\tsprite_frag: sprite.fragment\n};\n","export default /* glsl */`\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ALPHATEST\n\n\tif ( diffuseColor.a < alphaTest ) discard;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_AOMAP\n\n\t// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif\n`;\n","export default /* glsl */`\nvec3 transformed = vec3( position );\n`;\n","export default /* glsl */`\nvec3 objectNormal = vec3( normal );\n\n#ifdef USE_TANGENT\n\n\tvec3 objectTangent = vec3( tangent.xyz );\n\n#endif\n`;\n","export default /* glsl */`\n\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\n\treturn RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\n\t// Original approximation by Christophe Schlick '94\n\t// float fresnel = pow( 1.0 - dotVH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\n\t// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n\n} // validated\n\n// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2\n// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\n\treturn 0.5 / max( gv + gl, EPSILON );\n\n}\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n\tfloat a2 = pow2( alpha );\n\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n\n}\n\n// GGX Distribution, Schlick Fresnel, GGX_SmithCorrelated Visibility\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\n\tfloat alpha = pow2( roughness ); // UE4's roughness\n\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\n\tfloat D = D_GGX( alpha, dotNH );\n\n\treturn F * ( V * D );\n\n}\n\n// Rect Area Light\n\n// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines\n// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt\n// code: https://github.com/selfshadow/ltc_code/\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\n\tfloat dotNV = saturate( dot( N, V ) );\n\n\t// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\treturn uv;\n\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\n\t// Real-Time Area Lighting: a Journey from Research to Production (p.102)\n\t// An approximation of the form factor of a horizon-clipped rectangle.\n\n\tfloat l = length( f );\n\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\n\tfloat x = dot( v1, v2 );\n\n\tfloat y = abs( x );\n\n\t// rational polynomial approximation to theta / sin( theta ) / 2PI\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\n\treturn cross( v1, v2 ) * theta_sintheta;\n\n}\n\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n\t// bail if point is on back side of plane of light\n\t// assumes ccw winding order of light vertices\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n\t// construct orthonormal basis around N\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n\t// compute transform\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n\t// transform rect\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n\t// project rect onto sphere\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\n\t// calculate vector form factor\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n\t// adjust for horizon clipping\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n\t// alternate method of adjusting for horizon clipping (see referece)\n\t// refactoring required\n\tfloat len = length( vectorFormFactor );\n\tfloat z = vectorFormFactor.z / len;\n\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\n\t// tabulated horizon-clipped sphere, apparently...\n\tvec2 uv = vec2( z * 0.5 + 0.5, len );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\tfloat scale = texture2D( ltc_2, uv ).w;\n\n\tfloat result = len * scale;\n*/\n\n\treturn vec3( result );\n\n}\n\n// End Rect Area Light\n\n\nfloat G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {\n\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n#if defined( USE_SHEEN )\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs\nfloat D_Charlie( float roughness, float dotNH ) {\n\n\tfloat alpha = pow2( roughness );\n\n\t// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\"\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 ); // 2^(-14/2), so sin2h^2 > 0 in fp16\n\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n\n}\n\n// https://github.com/google/filament/blob/master/shaders/src/brdf.fs\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\n\t// Neubelt and Pettineo 2013, \"Crafting a Next-gen Material Pipeline for The Order: 1886\"\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n\n}\n\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\n\treturn sheenColor * ( D * V );\n\n}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n\t// https://mmikk.github.io/papers3d/mm_sfgrad_bump.pdf\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvec4 plane;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\n\t\tbool clipped = true;\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t\tif ( clipped ) discard;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvarying vec3 vClipPosition;\n\n#endif\n`;\n","export default /* glsl */`\n#if NUM_CLIPPING_PLANES > 0\n\n\tvClipPosition = - mvPosition.xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_COLOR_ALPHA )\n\n\tdiffuseColor *= vColor;\n\n#elif defined( USE_COLOR )\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_COLOR_ALPHA )\n\n\tvarying vec4 vColor;\n\n#elif defined( USE_COLOR )\n\n\tvarying vec3 vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_COLOR_ALPHA )\n\n\tvarying vec4 vColor;\n\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\n\tvarying vec3 vColor;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_COLOR_ALPHA )\n\n\tvColor = vec4( 1.0 );\n\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\n\tvColor = vec3( 1.0 );\n\n#endif\n\n#ifdef USE_COLOR\n\n\tvColor *= color;\n\n#endif\n\n#ifdef USE_INSTANCING_COLOR\n\n\tvColor.xyz *= instanceColor.xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n\n#ifndef saturate\n// <tonemapping_pars_fragment> may have defined saturate() already\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\n\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n\n// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.\n// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand( const in vec2 uv ) {\n\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\n\treturn fract( sin( sn ) * c );\n\n}\n\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t// dir can be either a direction vector or a normal vector\n\t// upper-left 3x3 of matrix is assumed to be orthogonal\n\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\n\tmat3 tmp;\n\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\n\treturn tmp;\n\n}\n\n// https://en.wikipedia.org/wiki/Relative_luminance\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\n\treturn dot( weights, color.rgb );\n\n}\n\nbool isPerspectiveMatrix( mat4 m ) {\n\n\treturn m[ 2 ][ 3 ] == - 1.0;\n\n}\n\nvec2 equirectUv( in vec3 dir ) {\n\n\t// dir is assumed to be unit length\n\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\treturn vec2( u, v );\n\n}\n`;\n","export default /* glsl */`\n#ifdef ENVMAP_TYPE_CUBE_UV\n\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\n\t// These shader functions convert between the UV coordinates of a single face of\n\t// a cubemap, the 0-5 integer index of a cube face, and the direction vector for\n\t// sampling a textureCube (not generally normalized ).\n\n\tfloat getFace( vec3 direction ) {\n\n\t\tvec3 absDirection = abs( direction );\n\n\t\tfloat face = - 1.0;\n\n\t\tif ( absDirection.x > absDirection.z ) {\n\n\t\t\tif ( absDirection.x > absDirection.y )\n\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\n\t\t\telse\n\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\n\t\t} else {\n\n\t\t\tif ( absDirection.z > absDirection.y )\n\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\n\t\t\telse\n\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\n\t\t}\n\n\t\treturn face;\n\n\t}\n\n\t// RH coordinate system; PMREM face-indexing convention\n\tvec2 getUV( vec3 direction, float face ) {\n\n\t\tvec2 uv;\n\n\t\tif ( face == 0.0 ) {\n\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x ); // pos x\n\n\t\t} else if ( face == 1.0 ) {\n\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y ); // pos y\n\n\t\t} else if ( face == 2.0 ) {\n\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z ); // pos z\n\n\t\t} else if ( face == 3.0 ) {\n\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x ); // neg x\n\n\t\t} else if ( face == 4.0 ) {\n\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y ); // neg y\n\n\t\t} else {\n\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z ); // neg z\n\n\t\t}\n\n\t\treturn 0.5 * ( uv + 1.0 );\n\n\t}\n\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\n\t\tfloat face = getFace( direction );\n\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\n\t\tfloat faceSize = exp2( mipInt );\n\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\n\t\tif ( face > 2.0 ) {\n\n\t\t\tuv.y += faceSize;\n\n\t\t\tface -= 3.0;\n\n\t\t}\n\n\t\tuv.x += face * faceSize;\n\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\n\t\t#ifdef texture2DGradEXT\n\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb; // disable anisotropic filtering\n\n\t\t#else\n\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\n\t\t#endif\n\n\t}\n\n\t// These defines must match with PMREMGenerator\n\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\n\tfloat roughnessToMip( float roughness ) {\n\n\t\tfloat mip = 0.0;\n\n\t\tif ( roughness >= r1 ) {\n\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\n\t\t} else if ( roughness >= r4 ) {\n\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\n\t\t} else if ( roughness >= r5 ) {\n\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\n\t\t} else if ( roughness >= r6 ) {\n\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\n\t\t} else {\n\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness ); // 1.16 = 1.79^0.25\n\t\t}\n\n\t\treturn mip;\n\n\t}\n\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\n\t\tfloat mipF = fract( mip );\n\n\t\tfloat mipInt = floor( mip );\n\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\n\t\tif ( mipF == 0.0 ) {\n\n\t\t\treturn vec4( color0, 1.0 );\n\n\t\t} else {\n\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\n\t\t}\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\nvec3 transformedNormal = objectNormal;\n\n#ifdef USE_INSTANCING\n\n\t// this is in lieu of a per-instance normal-matrix\n\t// shear transforms in the instance matrix are not supported\n\n\tmat3 m = mat3( instanceMatrix );\n\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\n\ttransformedNormal = m * transformedNormal;\n\n#endif\n\ntransformedNormal = normalMatrix * transformedNormal;\n\n#ifdef FLIP_SIDED\n\n\ttransformedNormal = - transformedNormal;\n\n#endif\n\n#ifdef USE_TANGENT\n\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#ifdef FLIP_SIDED\n\n\t\ttransformedTangent = - transformedTangent;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n`;\n","export default /* glsl */`\ngl_FragColor = linearToOutputTexel( gl_FragColor );\n`;\n","export default /* glsl */`\n\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\n\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\n\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvec3 cameraToFrag;\n\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\n\t\t}\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\n\t#else\n\n\t\tvec4 envColor = vec4( 0.0 );\n\n\t#endif\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\n\t\t#define ENV_WORLDPOS\n\n\t#endif\n\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_ENVMAP )\n\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\n\t\t#else\n\n\t\t\treturn vec3( 0.0 );\n\n\t\t#endif\n\n\t}\n\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\n\t\t\t// Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\n\t\t#else\n\n\t\t\treturn vec3( 0.0 );\n\n\t\t#endif\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ENVMAP\n\n\t#ifdef ENV_WORLDPOS\n\n\t\tvWorldPosition = worldPosition.xyz;\n\n\t#else\n\n\t\tvec3 cameraToVertex;\n\n\t\tif ( isOrthographic ) {\n\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\n\t\t} else {\n\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\t\t}\n\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tvFogDepth = - mvPosition.z;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tvarying float vFogDepth;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\n\t#endif\n\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n\n#ifdef USE_GRADIENTMAP\n\n\tuniform sampler2D gradientMap;\n\n#endif\n\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\n\t// dotNL will be from -1.0 to 1.0\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\n\t#ifdef USE_GRADIENTMAP\n\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\n\t#else\n\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\n\t#endif\n\n}\n`;\n","export default /* glsl */`\n#ifdef USE_LIGHTMAP\n\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif\n`;\n","export default /* glsl */`\nvec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\n\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n\n#ifdef DOUBLE_SIDED\n\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n\n#endif\n\n#if NUM_POINT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_DIR_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if NUM_HEMI_LIGHTS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\n\t\t#endif\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n`;\n","export default /* glsl */`\nuniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\n\n// get the irradiance (radiance convolved with cosine lobe) at the point 'normal' on the unit sphere\n// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\n\t// normal is assumed to have unit length\n\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\n\t// band 0\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\n\t// band 1\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\n\t// band 2\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\n\treturn result;\n\n}\n\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\n\treturn irradiance;\n\n}\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n\tvec3 irradiance = ambientLightColor;\n\n\treturn irradiance;\n\n}\n\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\n\t\t// based upon Frostbite 3 Moving to Physically-based Rendering\n\t\t// page 32, equation 26: E[window1]\n\t\t// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\n\t\tif ( cutoffDistance > 0.0 ) {\n\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\n\t\t}\n\n\t\treturn distanceFalloff;\n\n\t#else\n\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t\t}\n\n\t\treturn 1.0;\n\n\t#endif\n\n}\n\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n\n}\n\n#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\t// light is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\n\t\tlight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\t// light is an out parameter as having it as a return value caused compiler errors on some devices\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\n\t\tlight.direction = normalize( lVector );\n\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\n\t\tif ( spotAttenuation > 0.0 ) {\n\n\t\t\tfloat lightDistance = length( lVector );\n\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\n\t\t} else {\n\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\n\t\t}\n\n\t}\n\n#endif\n\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\n\t// Pre-computed values of LinearTransformedCosine approximation of BRDF\n\t// BRDF approximation Texture is 64x64\n\tuniform sampler2D ltc_1; // RGBA Float\n\tuniform sampler2D ltc_2; // RGBA Float\n\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t\treturn irradiance;\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\nToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\n`;\n","export default /* glsl */`\nvarying vec3 vViewPosition;\n\nstruct ToonMaterial {\n\n\tvec3 diffuseColor;\n\n};\n\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n\n#define Material_LightProbeLOD( material )\t(0)\n`;\n","export default /* glsl */`\nBlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n`;\n","export default /* glsl */`\nvarying vec3 vViewPosition;\n\nstruct BlinnPhongMaterial {\n\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )\t(0)\n`;\n","export default /* glsl */`\nPhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\n\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\n\nmaterial.roughness = max( roughnessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.\nmaterial.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n\n#ifdef IOR\n\n\t#ifdef SPECULAR\n\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\n\t\t#endif\n\n\t\t#ifdef USE_SPECULARCOLORMAP\n\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\n\t\t#endif\n\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\n\t#else\n\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\n\t#endif\n\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n\n#else\n\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n\n#endif\n\n#ifdef USE_CLEARCOAT\n\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\n\t#ifdef USE_CLEARCOATMAP\n\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\n\t#endif\n\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\n\t#endif\n\n\tmaterial.clearcoat = saturate( material.clearcoat ); // Burley clearcoat model\n\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n\n#endif\n\n#ifdef USE_SHEEN\n\n\tmaterial.sheenColor = sheenColor;\n\n\t#ifdef USE_SHEENCOLORMAP\n\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\n\t#endif\n\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\n\t#ifdef USE_SHEENROUGHNESSMAP\n\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\nstruct PhysicalMaterial {\n\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\n};\n\n// temporary\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\n\n// This is a curve-fit approxmation to the \"Charlie sheen\" BRDF integrated over the hemisphere from \n// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\". The analysis can be found\n// in the Sheen section of https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\n\tfloat r2 = roughness * roughness;\n\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\n\treturn saturate( DG * RECIPROCAL_PI );\n\n}\n\n// Analytical approximation of the DFG LUT, one half of the\n// split-sum approximation used in indirect specular lighting.\n// via 'environmentBRDF' from \"Physically Based Shading on Mobile\"\n// https://www.unrealengine.com/blog/physically-based-shading-on-mobile\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tvec4 r = roughness * c0 + c1;\n\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\n\treturn fab;\n\n}\n\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\n\treturn specularColor * fab.x + specularF90 * fab.y;\n\n}\n\n// Fdez-Agüera's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n// Approximates multiscattering in order to preserve energy.\n// http://www.jcgt.org/published/0008/01/03/\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619; // 1/21\n\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n\n}\n\n#if NUM_RECT_AREA_LIGHTS > 0\n\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight; // counterclockwise; light shines in local neg z direction\n\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\n\t\t// LTC Fresnel Approximation by Stephen Hill\n\t\t// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\n\t}\n\n#endif\n\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * directLight.color;\n\n\t#ifdef USE_CLEARCOAT\n\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\n\t#endif\n\n\t#ifdef USE_SHEEN\n\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\n\t#endif\n\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\n\t#ifdef USE_CLEARCOAT\n\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\n\t#endif\n\n\t#ifdef USE_SHEEN\n\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\n\t#endif\n\n\t// Both indirect specular and indirect diffuse light accumulate here\n\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n\n// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n\n}\n`;\n","export default /* glsl */`\n/**\n * This is a template that can be used to light a material, it uses pluggable\n * RenderEquations (RE)for specific lighting scenarios.\n *\n * Instructions for use:\n * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n * - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n * - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n *\n * TODO:\n * - Add area light support.\n * - Add sphere light support.\n * - Add diffuse light probe (irradiance cubemap) support.\n */\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n\n#ifdef USE_CLEARCOAT\n\n\tgeometry.clearcoatNormal = clearcoatNormal;\n\n#endif\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\n\tRectAreaLight rectAreaLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\n\t}\n\t#pragma unroll_loop_end\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 iblIrradiance = vec3( 0.0 );\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\n\t\t}\n\t\t#pragma unroll_loop_end\n\n\t#endif\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( RE_IndirectDiffuse )\n\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\n\t\tirradiance += lightMapIrradiance;\n\n\t#endif\n\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\n\t#endif\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\n\t#ifdef USE_CLEARCOAT\n\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( RE_IndirectDiffuse )\n\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( RE_IndirectSpecular )\n\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\t// Doing a strict comparison with == 1.0 can cause noise artifacts\n\t// on some platforms. See issue #17623.\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\n\t#else\n\n\t\tuniform float logDepthBufFC;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\n\t#else\n\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\n\t\t\tgl_Position.z *= gl_Position.w;\n\n\t\t}\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MAP\n\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\n\t#ifdef DECODE_VIDEO_TEXTURE\n\n\t\t// inline sRGB decode (TODO: Remove this code when https://crbug.com/1256340 is solved)\n\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\n\t#endif\n\n\tdiffuseColor *= sampledDiffuseColor;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\n#endif\n\n#ifdef USE_MAP\n\n\tdiffuseColor *= texture2D( map, uv );\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\n\tuniform mat3 uvTransform;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif\n\n#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n`;\n","export default /* glsl */`\nfloat metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\n\t// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\tmetalnessFactor *= texelMetalness.b;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_METALNESSMAP\n\n\tuniform sampler2D metalnessMap;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\tvColor *= morphTargetBaseInfluence;\n\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\n\t\t#if defined( USE_COLOR_ALPHA )\n\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\n\t\t#elif defined( USE_COLOR )\n\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\n\t\t#endif\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHNORMALS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\tobjectNormal *= morphTargetBaseInfluence;\n\n\t#ifdef MORPHTARGETS_TEXTURE\n\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\n\t\t}\n\n\t#else\n\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHTARGETS\n\n\tuniform float morphTargetBaseInfluence;\n\n\t#ifdef MORPHTARGETS_TEXTURE\n\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\n\t\t}\n\n\t#else\n\n\t\t#ifndef USE_MORPHNORMALS\n\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\n\t\t#else\n\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\n\t\t#endif\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_MORPHTARGETS\n\n\t// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:\n\t// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in position = sum((target - base) * influence)\n\t// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting\n\ttransformed *= morphTargetBaseInfluence;\n\n\t#ifdef MORPHTARGETS_TEXTURE\n\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\n\t\t}\n\n\t#else\n\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\n\t\t#ifndef USE_MORPHNORMALS\n\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\n\t\t#endif\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\nfloat faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n\n#ifdef FLAT_SHADED\n\n\t// Workaround for Adreno GPUs not able to do dFdx( vViewPosition )\n\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * faceDirection;\n\n\t#endif\n\n\t#ifdef USE_TANGENT\n\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\n\t\t#endif\n\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\n\t\t#endif\n\n\t#endif\n\n#endif\n\n// non perturbed normal for clearcoat among others\n\nvec3 geometryNormal = normal;\n\n`;\n","export default /* glsl */`\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals\n\n\t#ifdef FLIP_SIDED\n\n\t\tnormal = - normal;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * faceDirection;\n\n\t#endif\n\n\tnormal = normalize( normalMatrix * normal );\n\n#elif defined( TANGENTSPACE_NORMALMAP )\n\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tnormal = normalize( vTBN * mapN );\n\n\t#else\n\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\n\t#endif\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n\n#endif\n`;\n","export default /* glsl */`\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifndef FLAT_SHADED // normal is computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n#endif\n\n#ifdef OBJECTSPACE_NORMALMAP\n\n\tuniform mat3 normalMatrix;\n\n#endif\n\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\n\t// Normal Mapping Without Precomputed Tangents\n\t// http://www.thetenthplanet.de/archives/1180\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 N = surf_norm; // normalized\n\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_CLEARCOAT\n\n\tvec3 clearcoatNormal = geometryNormal;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\n\t#ifdef USE_TANGENT\n\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\n\t#else\n\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\n\n#ifdef USE_CLEARCOATMAP\n\n\tuniform sampler2D clearcoatMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\n\tuniform sampler2D clearcoatRoughnessMap;\n\n#endif\n\n#ifdef USE_CLEARCOAT_NORMALMAP\n\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n\n// https://github.com/mrdoob/three.js/pull/22425\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\n\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\n`;\n","export default /* glsl */`\nvec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\n\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\n\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\n\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8; // tidy overflow\n\treturn r * PackUpscale;\n}\n\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\n\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\n\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\n\n// NOTE: viewZ/eyeZ is < 0 when in front of the camera per OpenGL conventions\n\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\n\n// NOTE: https://twitter.com/gonnavis/status/1377183786949959682\n\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n`;\n","export default /* glsl */`\n#ifdef PREMULTIPLIED_ALPHA\n\n\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n\tgl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n`;\n","export default /* glsl */`\nvec4 mvPosition = vec4( transformed, 1.0 );\n\n#ifdef USE_INSTANCING\n\n\tmvPosition = instanceMatrix * mvPosition;\n\n#endif\n\nmvPosition = modelViewMatrix * mvPosition;\n\ngl_Position = projectionMatrix * mvPosition;\n`;\n","export default /* glsl */`\n#ifdef DITHERING\n\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef DITHERING\n\n\t// based on https://www.shadertoy.com/view/MslGR8\n\tvec3 dithering( vec3 color ) {\n\t\t//Calculate grid position\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\n\t\t//Shift the individual colors differently, thus making it even harder to see the dithering pattern\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n\t\t//modify shift according to grid position.\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n\t\t//shift the color by dither_shift\n\t\treturn color + dither_shift_RGB;\n\t}\n\n#endif\n`;\n","export default /* glsl */`\nfloat roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\n\t// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n\troughnessFactor *= texelRoughness.g;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_ROUGHNESSMAP\n\n\tuniform sampler2D roughnessMap;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): create uniforms for area light shadows\n\n\t#endif\n\t*/\n\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\n\t}\n\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\n\t}\n\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\n\t\tfloat occlusion = 1.0;\n\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\n\t\tfloat hard_shadow = step( compare , distribution.x ); // Hard Shadow\n\n\t\tif (hard_shadow != 1.0 ) {\n\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance ); // Chebeyshevs inequality\n\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 ); // 0.3 reduces light bleed\n\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\n\t\t}\n\t\treturn occlusion;\n\n\t}\n\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tfloat shadow = 1.0;\n\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\n\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#else // no percentage-closer filtering:\n\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#endif\n\n\t\t}\n\n\t\treturn shadow;\n\n\t}\n\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\n\t// 2D texture:\n\t//\n\t// xzXZ\n\t//  y Y\n\t//\n\t// Y - Positive y direction\n\t// y - Negative y direction\n\t// X - Positive x direction\n\t// x - Negative x direction\n\t// Z - Positive z direction\n\t// z - Negative z direction\n\t//\n\t// Source and test bed:\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\t\t// Number of texels to avoid at the edge of each square\n\n\t\tvec3 absV = abs( v );\n\n\t\t// Intersect unit cube\n\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\n\t\t// Apply scale to avoid seams\n\n\t\t// two texels less per square (one texel will do for NEAREST)\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\t\t// Unwrap\n\n\t\t// space: -1 ... 1 range for each square\n\t\t//\n\t\t// #X##\t\tdim    := ( 4 , 2 )\n\t\t//  # #\t\tcenter := ( 1 , 1 )\n\n\t\tvec2 planar = v.xy;\n\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\tif ( absV.z >= almostOne ) {\n\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t}\n\n\t\t// Transform to UV space\n\n\t\t// scale := 0.5 / dim\n\t\t// translate := ( center + 0.5 ) / dim\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t}\n\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\n\t\t// the vector from the light to the world-space position of the fragment.\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\n\t\t// dp = normalized distance from light to fragment position\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?\n\t\tdp += shadowBias;\n\n\t\t// bd3D = base direction 3D\n\t\tvec3 bd3D = normalize( lightToPosition );\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering\n\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n\t\t#endif\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): uniforms for area light shadows\n\n\t#endif\n\t*/\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\n\t\t// Offsetting the position used for querying occlusion along the world normal can be used to reduce shadow acne.\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\n\t#endif\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update vAreaShadowCoord with area light info\n\n\t#endif\n\t*/\n\n#endif\n`;\n","export default /* glsl */`\nfloat getShadowMask() {\n\n\tfloat shadow = 1.0;\n\n\t#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\n\tDirectionalLightShadow directionalLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\n\tSpotLightShadow spotLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\n\tPointLightShadow pointLight;\n\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\n\t}\n\t#pragma unroll_loop_end\n\n\t#endif\n\n\t/*\n\t#if NUM_RECT_AREA_LIGHTS > 0\n\n\t\t// TODO (abelnation): update shadow for Area light\n\n\t#endif\n\t*/\n\n\t#endif\n\n\treturn shadow;\n\n}\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\n\tmat4 getBoneMatrix( const in float i ) {\n\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\n\t\ty = dy * ( y + 0.5 );\n\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\treturn bone;\n\n\t}\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n\t#ifdef USE_TANGENT\n\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\n\t#endif\n\n#endif\n`;\n","export default /* glsl */`\nfloat specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( TONE_MAPPING )\n\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n\n#endif\n`;\n","export default /* glsl */`\n#ifndef saturate\n// <common> may have defined saturate() already\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n\nuniform float toneMappingExposure;\n\n// exposure only\nvec3 LinearToneMapping( vec3 color ) {\n\n\treturn toneMappingExposure * color;\n\n}\n\n// source: https://www.cs.utah.edu/docs/techreports/2002/pdf/UUCS-02-001.pdf\nvec3 ReinhardToneMapping( vec3 color ) {\n\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n\n}\n\n// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\n\t// optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n\n}\n\n// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs\nvec3 RRTAndODTFit( vec3 v ) {\n\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n\n}\n\n// this implementation of ACES is modified to accommodate a brighter viewing environment.\n// the scale factor of 1/0.6 is subjective. see discussion in #19621.\n\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\n\t// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ), // transposed from source\n\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\n\t// ODT_SAT => XYZ => D60_2_D65 => sRGB\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ), // transposed from source\n\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\n\tcolor *= toneMappingExposure / 0.6;\n\n\tcolor = ACESInputMat * color;\n\n\t// Apply RRT and ODT\n\tcolor = RRTAndODTFit( color );\n\n\tcolor = ACESOutputMat * color;\n\n\t// Clamp to [0, 1]\n\treturn saturate( color );\n\n}\n\nvec3 CustomToneMapping( vec3 color ) { return color; }\n`;\n","export default /* glsl */`\n#ifdef USE_TRANSMISSION\n\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\n\t#ifdef USE_TRANSMISSIONMAP\n\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\n\t#endif\n\n\t#ifdef USE_THICKNESSMAP\n\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\n\t#endif\n\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_TRANSMISSION\n\n\t// Transmission code is based on glTF-Sampler-Viewer\n\t// https://github.com/KhronosGroup/glTF-Sample-Viewer\n\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\n\t#ifdef USE_TRANSMISSIONMAP\n\n\t\tuniform sampler2D transmissionMap;\n\n\t#endif\n\n\t#ifdef USE_THICKNESSMAP\n\n\t\tuniform sampler2D thicknessMap;\n\n\t#endif\n\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\n\tvarying vec3 vWorldPosition;\n\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\n\t\t// Direction of refracted light.\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\n\t\t// Compute rotation-independant scaling of the model matrix.\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\n\t\t// The thickness is specified in local space.\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\n\t}\n\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\n\t\t// Scale roughness with IOR so that an IOR of 1.0 results in no microfacet refraction and\n\t\t// an IOR of 1.5 results in the default amount of microfacet refraction.\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\n\t}\n\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\n\t\t#ifdef texture2DLodEXT\n\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\n\t\t#else\n\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\n\t\t#endif\n\n\t}\n\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\n\t\tif ( attenuationDistance == 0.0 ) {\n\n\t\t\t// Attenuation distance is +∞ (which we indicate by zero), i.e. the transmitted color is not attenuated at all.\n\t\t\treturn radiance;\n\n\t\t} else {\n\n\t\t\t// Compute light attenuation using Beer's law.\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance ); // Beer's law\n\t\t\treturn transmittance * radiance;\n\n\t\t}\n\n\t}\n\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\n\t\t// Project refracted vector on the framebuffer, while mapping to normalized device coordinates.\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\n\t\t// Sample framebuffer to get pixel the refracted ray hits.\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\n\t\t// Get the specular component.\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\n\t}\n#endif\n`;\n","export default /* glsl */`\n#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\n\tvarying vec2 vUv;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_UV\n\n\t#ifdef UVS_VERTEX_ONLY\n\n\t\tvec2 vUv;\n\n\t#else\n\n\t\tvarying vec2 vUv;\n\n\t#endif\n\n\tuniform mat3 uvTransform;\n\n#endif\n`;\n","export default /* glsl */`\n#ifdef USE_UV\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n\tuniform mat3 uv2Transform;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n\n#endif\n`;\n","export default /* glsl */`\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\n\t#ifdef USE_INSTANCING\n\n\t\tworldPosition = instanceMatrix * worldPosition;\n\n\t#endif\n\n\tworldPosition = modelMatrix * worldPosition;\n\n#endif\n`;\n","export const vertex = /* glsl */`\nvarying vec2 vUv;\nuniform mat3 uvTransform;\n\nvoid main() {\n\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform sampler2D t2D;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\tgl_FragColor = texture2D( t2D, vUv );\n\n\t#ifdef DECODE_VIDEO_TEXTURE\n\n\t\t// inline sRGB decode (TODO: Remove this code when https://crbug.com/1256340 is solved)\n\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\n\t#endif\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export const vertex = /* glsl */`\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n\tgl_Position.z = gl_Position.w; // set z to camera.far\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#include <envmap_common_pars_fragment>\nuniform float opacity;\n\nvarying vec3 vWorldDirection;\n\n#include <cube_uv_reflection_fragment>\n\nvoid main() {\n\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export const vertex = /* glsl */`\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n// This is used for computing an equivalent of gl_FragCoord.z that is as high precision as possible.\n// Some platforms compute gl_FragCoord at a lower precision which makes the manually computed value better for\n// depth-based postprocessing effects. Reproduced on iPad with A10 processor / iPadOS 13.3.1.\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvHighPrecisionZW = gl_Position.zw;\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#if DEPTH_PACKING == 3200\n\n\tuniform float opacity;\n\n#endif\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvarying vec2 vHighPrecisionZW;\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tdiffuseColor.a = opacity;\n\n\t#endif\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\t#include <logdepthbuf_fragment>\n\n\t// Higher precision equivalent of gl_FragCoord.z. This assumes depthRange has been left to its default values.\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\n\t#if DEPTH_PACKING == 3200\n\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\n\t#elif DEPTH_PACKING == 3201\n\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\n\t#endif\n\n}\n`;\n","export const vertex = /* glsl */`\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <skinbase_vertex>\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvWorldPosition = worldPosition.xyz;\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main () {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( 1.0 );\n\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor = packDepthToRGBA( dist );\n\n}\n`;\n","export const vertex = /* glsl */`\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform sampler2D tEquirect;\n\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvec3 direction = normalize( vWorldDirection );\n\n\tvec2 sampleUV = equirectUv( direction );\n\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\n","export const vertex = /* glsl */`\nuniform float scale;\nattribute float lineDistance;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\tvLineDistance = scale * lineDistance;\n\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\nuniform float dashSize;\nuniform float totalSize;\n\nvarying float vLineDistance;\n\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\n\t\tdiscard;\n\n\t}\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\n\toutgoingLight = diffuseColor.rgb; // simple shader\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n`;\n","export const vertex = /* glsl */`\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\n\t#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\n\t// accumulation (baked indirect lighting only)\n\t#ifdef USE_LIGHTMAP\n\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\n\t#endif\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\n\t#include <envmap_fragment>\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export const vertex = /* glsl */`\n#define LAMBERT\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\n\t#else\n\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\n\t#endif\n\n\t#include <lightmap_fragment>\n\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\n\t#else\n\n\t\treflectedLight.directDiffuse = vLightFront;\n\n\t#endif\n\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\n\t// modulation\n\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n`;\n","export const vertex = /* glsl */`\n#define MATCAP\n\nvarying vec3 vViewPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#define MATCAP\n\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\n\nvarying vec3 vViewPosition;\n\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks\n\n\t#ifdef USE_MATCAP\n\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\n\t#else\n\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 ); // default if matcap is missing\n\n\t#endif\n\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export const vertex = /* glsl */`\n#define NORMAL\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvViewPosition = - mvPosition.xyz;\n\n#endif\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#define NORMAL\n\nuniform float opacity;\n\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\n\tvarying vec3 vViewPosition;\n\n#endif\n\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\n\t#ifdef OPAQUE\n\n\t\tgl_FragColor.a = 1.0;\n\n\t#endif\n\n}\n`;\n","export const vertex = /* glsl */`\n#define PHONG\n\nvarying vec3 vViewPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export const vertex = /* glsl */`\n#define STANDARD\n\nvarying vec3 vViewPosition;\n\n#ifdef USE_TRANSMISSION\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n#ifdef USE_TRANSMISSION\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif\n}\n`;\n\nexport const fragment = /* glsl */`\n#define STANDARD\n\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifdef IOR\n\tuniform float ior;\n#endif\n\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n\nvarying vec3 vViewPosition;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\n\t#include <transmission_fragment>\n\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\n\t#ifdef USE_SHEEN\n\n\t\t// Sheen energy compensation approximation calculation can be found at the end of\n\t\t// https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\n\t#endif\n\n\t#ifdef USE_CLEARCOAT\n\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\n\t#endif\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export const vertex = /* glsl */`\n#define TOON\n\nvarying vec3 vViewPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\n#define TOON\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`;\n","export const vertex = /* glsl */`\nuniform float size;\nuniform float scale;\n\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\n\tgl_PointSize = size;\n\n\t#ifdef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\n\t#endif\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\n}\n`;\n","export const vertex = /* glsl */`\n#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n\nvoid main() {\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform vec3 color;\nuniform float opacity;\n\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nvoid main() {\n\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n`;\n","export const vertex = /* glsl */`\nuniform float rotation;\nuniform vec2 center;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n\t#ifndef USE_SIZEATTENUATION\n\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\n\t#endif\n\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\n\tmvPosition.xy += rotatedPosition;\n\n\tgl_Position = projectionMatrix * mvPosition;\n\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform vec3 diffuse;\nuniform float opacity;\n\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\n\toutgoingLight = diffuseColor.rgb;\n\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\n}\n`;\n","import { Color } from '../../math/Color.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 } // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nexport { UniformsLib };\n","import { ShaderChunk } from './ShaderChunk.js';\nimport { mergeUniforms } from './UniformsUtils.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from './UniformsLib.js';\nimport { Color } from '../../math/Color.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n\nexport { ShaderLib };\n","import { BackSide, FrontSide, CubeUVReflectionMapping } from '../../constants.js';\nimport { BoxGeometry } from '../../geometries/BoxGeometry.js';\nimport { PlaneGeometry } from '../../geometries/PlaneGeometry.js';\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\nimport { Color } from '../../math/Color.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { cloneUniforms } from '../shaders/UniformsUtils.js';\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n\nexport { WebGLBackground };\n","﻿function WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\n\nexport { WebGLBindingStates };\n","function WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n\nexport { WebGLBufferRenderer };\n","function WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n\nexport { WebGLCapabilities };\n","import { Matrix3 } from '../../math/Matrix3.js';\nimport { Plane } from '../../math/Plane.js';\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n\nexport { WebGLClipping };\n","import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { Texture } from '../textures/Texture.js';\nimport { LinearFilter } from '../constants.js';\nimport { Vector4 } from '../math/Vector4.js';\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tthis.texture.image = Object.assign( {}, source.texture.image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\nexport { WebGLRenderTarget };\n","import { NoToneMapping } from '../constants.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nexport { CubeCamera };\n","import { BackSide, LinearFilter, LinearMipmapLinearFilter, NoBlending } from '../constants.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { BoxGeometry } from '../geometries/BoxGeometry.js';\nimport { ShaderMaterial } from '../materials/ShaderMaterial.js';\nimport { cloneUniforms } from './shaders/UniformsUtils.js';\nimport { WebGLRenderTarget } from './WebGLRenderTarget.js';\nimport { CubeCamera } from '../cameras/CubeCamera.js';\nimport { CubeTexture } from '../textures/CubeTexture.js';\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\nexport { WebGLCubeRenderTarget };\n","import { CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping } from '../../constants.js';\nimport { WebGLCubeRenderTarget } from '../WebGLCubeRenderTarget.js';\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nexport { WebGLCubeMaps };\n","import {\n\tCubeReflectionMapping,\n\tCubeRefractionMapping,\n\tCubeUVReflectionMapping,\n\tLinearEncoding,\n\tLinearFilter,\n\tNoToneMapping,\n\tNoBlending,\n\tRGBAFormat,\n\tHalfFloatType\n} from '../constants.js';\n\nimport { BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Mesh } from '../objects/Mesh.js';\nimport { OrthographicCamera } from '../cameras/OrthographicCamera.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\nimport { ShaderMaterial } from '../materials/ShaderMaterial.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Color } from '../math/Color.js';\nimport { WebGLRenderTarget } from '../renderers/WebGLRenderTarget.js';\nimport { MeshBasicMaterial } from '../materials/MeshBasicMaterial.js';\nimport { BoxGeometry } from '../geometries/BoxGeometry.js';\nimport { BackSide } from '../constants.js';\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nexport { PMREMGenerator };\n","import { CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping } from '../../constants.js';\nimport { PMREMGenerator } from '../../extras/PMREMGenerator.js';\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nexport { WebGLCubeUVMaps };\n","function WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n\nexport { WebGLExtensions };\n","import { Uint16BufferAttribute, Uint32BufferAttribute } from '../../core/BufferAttribute.js';\nimport { arrayNeedsUint32 } from '../../utils.js';\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n\nexport { WebGLGeometries };\n","function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n\nexport { WebGLIndexedBufferRenderer };\n","function WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n\nexport { WebGLInfo };\n","import { Texture } from './Texture.js';\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nDataArrayTexture.prototype.isDataArrayTexture = true;\n\nexport { DataArrayTexture };\n","import { FloatType } from '../../constants.js';\nimport { DataArrayTexture } from '../../textures/DataArrayTexture.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { Vector2 } from '../../math/Vector2.js';\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction denormalize( morph, attribute ) {\n\n\tlet denominator = 1;\n\tconst array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n\n\tif ( array instanceof Int8Array ) denominator = 127;\n\telse if ( array instanceof Int16Array ) denominator = 32767;\n\telse if ( array instanceof Int32Array ) denominator = 2147483647;\n\telse console.error( 'THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array );\n\n\tmorph.divideScalar( denominator );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tif ( morphTarget.normalized === true ) denormalize( morph, morphTarget );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tif ( morphNormal.normalized === true ) denormalize( morph, morphNormal );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tif ( morphColor.normalized === true ) denormalize( morph, morphColor );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n\nexport { WebGLMorphtargets };\n","function WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n\nexport { WebGLObjects };\n","import { Texture } from './Texture.js';\nimport { ClampToEdgeWrapping, NearestFilter } from '../constants.js';\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nData3DTexture.prototype.isData3DTexture = true;\n\nexport { Data3DTexture };\n","/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nimport { CubeTexture } from '../../textures/CubeTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { DataArrayTexture } from '../../textures/DataArrayTexture.js';\nimport { Data3DTexture } from '../../textures/Data3DTexture.js';\n\nconst emptyTexture = new Texture();\nconst emptyArrayTexture = new DataArrayTexture();\nconst empty3dTexture = new Data3DTexture();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tconst seq = this.seq;\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tconst u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tconst v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tconst r = [];\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nexport { WebGLUniforms };\n","function WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nexport { WebGLShader };\n","import { WebGLUniforms } from './WebGLUniforms.js';\nimport { WebGLShader } from './WebGLShader.js';\nimport { ShaderChunk } from '../shaders/ShaderChunk.js';\nimport { NoToneMapping, AddOperation, MixOperation, MultiplyOperation, CubeRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, ACESFilmicToneMapping, CineonToneMapping, CustomToneMapping, ReinhardToneMapping, LinearToneMapping, sRGBEncoding, LinearEncoding, GLSL3 } from '../../constants.js';\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tlines2.push( ( i + 1 ) + ': ' + lines[ i ] );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 0 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nexport { WebGLProgram };\n","let _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\n\t\tif ( cache.has( material ) === false ) {\n\n\t\t\tcache.set( material, new Set() );\n\n\t\t}\n\n\t\treturn cache.get( material );\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\n\t\tif ( cache.has( code ) === false ) {\n\n\t\t\tconst stage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn cache.get( code );\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nexport { WebGLShaderCache };\n","import { BackSide, DoubleSide, CubeUVReflectionMapping, ObjectSpaceNormalMap, TangentSpaceNormalMap, NoToneMapping, LinearEncoding, sRGBEncoding, NormalBlending } from '../../constants.js';\nimport { Layers } from '../../core/Layers.js';\nimport { WebGLProgram } from './WebGLProgram.js';\nimport { WebGLShaderCache } from './WebGLShaderCache.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { UniformsUtils } from '../shaders/UniformsUtils.js';\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 30 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.physicallyCorrectLights )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 23 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLPrograms };\n","function WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLProperties };\n","function painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tlet list;\n\n\t\tif ( lists.has( scene ) === false ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= lists.get( scene ).length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.get( scene ).push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = lists.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderLists, WebGLRenderList };\n","import { Color } from '../../math/Color.js';\nimport { Matrix4 } from '../../math/Matrix4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from '../shaders/UniformsLib.js';\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, physicallyCorrectLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\n\nexport { WebGLLights };\n","import { WebGLLights } from './WebGLLights.js';\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderStates };\n","import { Material } from './Material.js';\nimport { BasicDepthPacking } from '../constants.js';\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nexport { MeshDepthMaterial };\n","import { Material } from './Material.js';\nimport { Vector3 } from '../math/Vector3.js';\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nexport { MeshDistanceMaterial };\n","import { FrontSide, BackSide, DoubleSide, RGBAFormat, NearestFilter, PCFShadowMap, VSMShadowMap, RGBADepthPacking, NoBlending } from '../../constants.js';\nimport { WebGLRenderTarget } from '../WebGLRenderTarget.js';\nimport { MeshDepthMaterial } from '../../materials/MeshDepthMaterial.js';\nimport { MeshDistanceMaterial } from '../../materials/MeshDistanceMaterial.js';\nimport { ShaderMaterial } from '../../materials/ShaderMaterial.js';\nimport { BufferAttribute } from '../../core/BufferAttribute.js';\nimport { BufferGeometry } from '../../core/BufferGeometry.js';\nimport { Mesh } from '../../objects/Mesh.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Frustum } from '../../math/Frustum.js';\n\nimport * as vsm from '../shaders/ShaderLib/vsm.glsl.js';\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vsm.vertex,\n\t\tfragmentShader: vsm.fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t}\n\n\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 ) ||\n\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t( material.alphaMap && material.alphaTest > 0 ) ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { WebGLShadowMap };\n","export const vertex = /* glsl */`\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}\n`;\n\nexport const fragment = /* glsl */`\nuniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n\n#include <packing>\n\nvoid main() {\n\n\tconst float samples = float( VSM_SAMPLES );\n\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\n\t// This seems totally useless but it's a crazy work around for a Adreno compiler bug\n\t// float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\n\t\t#ifdef HORIZONTAL_PASS\n\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\n\t\t#else\n\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\n\t\t#endif\n\n\t}\n\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n\n}\n`;\n","import { NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessEqualDepth, LessDepth, AlwaysDepth, NeverDepth, CullFaceFront, CullFaceBack, CullFaceNone, DoubleSide, BackSide, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, NoBlending, NormalBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor } from '../../constants.js';\nimport { Vector4 } from '../../math/Vector4.js';\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nexport { WebGLState };\n","import { LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, RGBAFormat, DepthFormat, DepthStencilFormat, UnsignedShortType, UnsignedIntType, UnsignedInt248Type, FloatType, HalfFloatType, MirroredRepeatWrapping, ClampToEdgeWrapping, RepeatWrapping, sRGBEncoding, LinearEncoding, UnsignedByteType, _SRGBAFormat } from '../../constants.js';\nimport * as MathUtils from '../../math/MathUtils.js';\nimport { ImageUtils } from '../../extras/ImageUtils.js';\nimport { createElementNS } from '../../utils.js';\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, isVideoTexture = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( encoding === sRGBEncoding && isVideoTexture === false ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( textureProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( textureProperties.__version === undefined );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// Use the first texture for MRT so far\n\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[ 0 ] : renderTarget.texture;\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [ _gl.COLOR_ATTACHMENT0 ];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t}\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t}\n\n\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nexport { WebGLTextures };\n","import { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBFormat, RGBAFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, RGBA_BPTC_Format, sRGBEncoding, _SRGBAFormat } from '../../constants.js';\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\t\tif ( p === RedFormat ) return gl.RED;\n\n\t\tif ( p === RGBFormat ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n\t\t\treturn gl.RGBA;\n\n\t\t}\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n\nexport { WebGLUtils };\n","import { PerspectiveCamera } from './PerspectiveCamera.js';\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nArrayCamera.prototype.isArrayCamera = true;\n\n\nexport { ArrayCamera };\n","import { Vector3 } from '../../math/Vector3.js';\nimport { Group } from '../../objects/Group.js';\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nexport { WebXRController };\n","import { Texture } from './Texture.js';\nimport { NearestFilter, UnsignedShortType, UnsignedInt248Type, DepthFormat, DepthStencilFormat } from '../constants.js';\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\n}\n\nDepthTexture.prototype.isDepthTexture = true;\n\nexport { DepthTexture };\n","import { ArrayCamera } from '../../cameras/ArrayCamera.js';\nimport { EventDispatcher } from '../../core/EventDispatcher.js';\nimport { PerspectiveCamera } from '../../cameras/PerspectiveCamera.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { Vector4 } from '../../math/Vector4.js';\nimport { WebGLAnimation } from '../webgl/WebGLAnimation.js';\nimport { WebGLRenderTarget } from '../WebGLRenderTarget.js';\nimport { WebXRController } from './WebXRController.js';\nimport { DepthTexture } from '../../textures/DepthTexture.js';\nimport {\n\tDepthFormat,\n\tDepthStencilFormat,\n\tRGBAFormat,\n\tsRGBEncoding,\n\tUnsignedByteType,\n\tUnsignedShortType,\n\tUnsignedInt248Type,\n} from '../../constants.js';\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst inputSourcesMap = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\t\tcontroller.disconnect( inputSource );\n\n\t\t\t} );\n\n\t\t\tinputSourcesMap.clear();\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedShortType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: ( renderer.outputEncoding === sRGBEncoding ) ? gl.SRGB8_ALPHA8 : gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\t// Set foveation to maximum.\n\t\t\t\tthis.setFoveation( 1.0 );\n\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t// Assign controllers to available inputSources\n\n\t\t\tfor ( let i = 0; i < inputSources.length; i ++ ) {\n\n\t\t\t\tconst index = inputSources[ i ].handedness === 'right' ? 1 : 0;\n\t\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ index ] );\n\n\t\t\t}\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.position.copy( cameraVR.position );\n\t\t\tcamera.quaternion.copy( cameraVR.quaternion );\n\t\t\tcamera.scale.copy( cameraVR.scale );\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\treturn glProjLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\treturn glBaseLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( foveation ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst camera = cameras[ i ];\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = inputSources[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nexport { WebXRManager };\n","import { BackSide } from '../../constants.js';\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. specular intensity map\n\t\t// 14. specular tint map\n\t\t// 15. transmission map\n\t\t// 16. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nexport { WebGLMaterials };\n","import {\n\tREVISION,\n\tBackSide,\n\tDoubleSide,\n\tFrontSide,\n\tRGBAFormat,\n\tHalfFloatType,\n\tFloatType,\n\tUnsignedByteType,\n\tLinearEncoding,\n\tNoToneMapping,\n\tLinearMipmapLinearFilter\n} from '../constants.js';\nimport { floorPowerOfTwo } from '../math/MathUtils.js';\nimport { Frustum } from '../math/Frustum.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { WebGLAnimation } from './webgl/WebGLAnimation.js';\nimport { WebGLAttributes } from './webgl/WebGLAttributes.js';\nimport { WebGLBackground } from './webgl/WebGLBackground.js';\nimport { WebGLBindingStates } from './webgl/WebGLBindingStates.js';\nimport { WebGLBufferRenderer } from './webgl/WebGLBufferRenderer.js';\nimport { WebGLCapabilities } from './webgl/WebGLCapabilities.js';\nimport { WebGLClipping } from './webgl/WebGLClipping.js';\nimport { WebGLCubeMaps } from './webgl/WebGLCubeMaps.js';\nimport { WebGLCubeUVMaps } from './webgl/WebGLCubeUVMaps.js';\nimport { WebGLExtensions } from './webgl/WebGLExtensions.js';\nimport { WebGLGeometries } from './webgl/WebGLGeometries.js';\nimport { WebGLIndexedBufferRenderer } from './webgl/WebGLIndexedBufferRenderer.js';\nimport { WebGLInfo } from './webgl/WebGLInfo.js';\nimport { WebGLMorphtargets } from './webgl/WebGLMorphtargets.js';\nimport { WebGLObjects } from './webgl/WebGLObjects.js';\nimport { WebGLPrograms } from './webgl/WebGLPrograms.js';\nimport { WebGLProperties } from './webgl/WebGLProperties.js';\nimport { WebGLRenderLists } from './webgl/WebGLRenderLists.js';\nimport { WebGLRenderStates } from './webgl/WebGLRenderStates.js';\nimport { WebGLRenderTarget } from './WebGLRenderTarget.js';\nimport { WebGLShadowMap } from './webgl/WebGLShadowMap.js';\nimport { WebGLState } from './webgl/WebGLState.js';\nimport { WebGLTextures } from './webgl/WebGLTextures.js';\nimport { WebGLUniforms } from './webgl/WebGLUniforms.js';\nimport { WebGLUtils } from './webgl/WebGLUtils.js';\nimport { WebXRManager } from './webxr/WebXRManager.js';\nimport { WebGLMaterials } from './webgl/WebGLMaterials.js';\nimport { createElementNS } from '../utils.js';\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( _context !== null ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector2 = new Vector2();\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tgetProgram( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t} else {\n\n\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tif ( texture.isFramebufferTexture !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nWebGLRenderer.prototype.isWebGLRenderer = true;\n\nexport { WebGLRenderer };\n","/**\n * Uniform Utilities\n */\n\nexport function cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nexport function mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nexport { UniformsUtils };\n","import { Texture } from './Texture.js';\nimport { CubeReflectionMapping } from '../constants.js';\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nCubeTexture.prototype.isCubeTexture = true;\n\nexport { CubeTexture };\n","import { ImageUtils } from '../extras/ImageUtils.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nSource.prototype.isSource = true;\n\nexport { Source };\n","import { EventDispatcher } from '../core/EventDispatcher.js';\nimport {\n\tMirroredRepeatWrapping,\n\tClampToEdgeWrapping,\n\tRepeatWrapping,\n\tLinearEncoding,\n\tUnsignedByteType,\n\tRGBAFormat,\n\tLinearMipmapLinearFilter,\n\tLinearFilter,\n\tUVMapping\n} from '../constants.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { Source } from './Source.js';\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype.isTexture = true;\n\nexport { Texture };\n"],"names":["Camera","constructor","super","this","type","matrixWorldInverse","Matrix4","projectionMatrix","projectionMatrixInverse","copy","source","recursive","getWorldDirection","target","updateWorldMatrix","e","matrixWorld","elements","set","normalize","updateMatrixWorld","force","invert","updateParents","updateChildren","clone","prototype","isCamera","OrthographicCamera","left","right","top","bottom","near","far","zoom","view","updateProjectionMatrix","Object","assign","setViewOffset","fullWidth","fullHeight","x","y","width","height","enabled","offsetX","offsetY","clearViewOffset","dx","dy","cx","cy","scaleW","scaleH","makeOrthographic","toJSON","meta","data","object","isOrthographicCamera","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","setFocalLength","focalLength","vExtentSlope","getFilmHeight","Math","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","min","max","skew","makePerspective","isPerspectiveCamera","_canvas","ImageUtils","static","image","test","src","HTMLCanvasElement","canvas","undefined","c","context","getContext","ImageData","putImageData","drawImage","console","warn","toDataURL","HTMLImageElement","ImageBitmap","imageData","getImageData","i","length","slice","Uint8Array","Uint8ClampedArray","floor","BoxGeometry","BufferGeometry","depth","widthSegments","heightSegments","depthSegments","parameters","scope","indices","vertices","normals","uvs","numberOfVertices","groupStart","buildPlane","u","v","w","udir","vdir","gridX","gridY","materialIndex","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","vector","Vector3","iy","ix","push","z","a","b","d","addGroup","setIndex","setAttribute","Float32BufferAttribute","PlaneGeometry","width_half","height_half","segment_width","segment_height","ShaderMaterial","Material","defines","uniforms","vertexShader","fragmentShader","linewidth","wireframe","wireframeLinewidth","fog","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","attributes","error","setValues","name","value","isTexture","uuid","isColor","getHex","isVector2","toArray","isVector3","isVector4","isMatrix3","isMatrix4","keys","key","isShaderMaterial","_sphere","Sphere","_vector","Frustum","p0","p1","p2","p3","p4","p5","planes","frustum","setFromProjectionMatrix","m","me","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","geometry","boundingSphere","computeBoundingSphere","applyMatrix4","intersectsSphere","intersectsSprite","sprite","center","radius","sphere","negRadius","distanceToPoint","intersectsBox","box","plane","normal","containsPoint","point","_vector1","_vector2","_normalMatrix","Plane","constant","setFromNormalAndCoplanarPoint","dot","setFromCoplanarPoints","subVectors","cross","inverseNormalLength","multiplyScalar","negate","distanceToSphere","projectPoint","add","intersectLine","line","direction","delta","denominator","start","t","intersectsLine","startSign","endSign","end","intersectsPlane","coplanarPoint","matrix","optionalNormalMatrix","normalMatrix","getNormalMatrix","referencePoint","applyMatrix3","translate","offset","equals","isPlane","Group","isGroup","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","callback","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","get","attribute","isInterleavedBufferAttribute","remove","deleteBuffer","buffer","delete","update","bufferType","isGLBufferAttribute","cached","version","bytesPerElement","elementSize","array","usage","createBuffer","bindBuffer","bufferData","onUploadCallback","Float32Array","FLOAT","Uint16Array","isFloat16BufferAttribute","Error","HALF_FLOAT","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","UNSIGNED_BYTE","BYTES_PER_ELEMENT","updateRange","count","bufferSubData","subarray","updateBuffer","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_vert","background_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","Color","opacity","map","uvTransform","Matrix3","uv2Transform","alphaMap","alphaTest","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","ior","refractionRatio","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","Vector2","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","color","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","position","distance","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","points","size","scale","rotation","ShaderLib","basic","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","toon","matcap","dashed","dashSize","totalSize","background","t2D","cube","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","renderer","cubemaps","state","objects","alpha","premultipliedAlpha","clearColor","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","r","g","getClearColor","setClearColor","getClearAlpha","setClearAlpha","render","renderList","scene","forceClear","isScene","xr","session","getSession","environmentBlendMode","autoClear","clear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","mapping","Mesh","side","depthTest","depthWrite","deleteAttribute","onBeforeRender","camera","copyPosition","defineProperty","material","isRenderTargetTexture","toneMapping","needsUpdate","layers","enableAll","unshift","matrixAutoUpdate","updateMatrix","WebGLBindingStates","maxVertexAttributes","getParameter","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","index","initAttributes","il","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","normalized","stride","vertexAttribIPointer","reset","resetDefaultState","setup","updateBuffers","programMap","id","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","location","cachedAttribute","geometryAttribute","instanceMatrix","instanceColor","cache","saveCache","ELEMENT_ARRAY_BUFFER","isInstancedMesh","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","itemSize","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","dispose","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","precision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","has","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","MAX_SAMPLES","physical","clearcoat","clearcoatMap","clearcoatRoughness","clearcoatRoughnessMap","clearcoatNormalScale","clearcoatNormalMap","sheen","sheenColor","sheenColorMap","sheenRoughness","sheenRoughnessMap","transmission","transmissionMap","transmissionSamplerSize","transmissionSamplerMap","thickness","thicknessMap","attenuationDistance","attenuationColor","specularIntensity","specularIntensityMap","specularColor","specularColorMap","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","dstOffset","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","setState","useCache","clippingPlanes","clipIntersection","clipShadows","materialProperties","nGlobal","lGlobal","clippingState","WebGLRenderTarget","EventDispatcher","options","scissor","Vector4","scissorTest","viewport","texture","Texture","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","flipY","generateMipmaps","internalFormat","depthBuffer","stencilBuffer","depthTexture","samples","setSize","dispatchEvent","isWebGLRenderTarget","CubeCamera","Object3D","renderTarget","isWebGLCubeRenderTarget","cameraPX","up","lookAt","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","parent","children","currentRenderTarget","getRenderTarget","currentToneMapping","currentXrEnabled","setRenderTarget","needsPMREMUpdate","WebGLCubeRenderTarget","images","CubeTexture","fromEquirectangularTexture","shader","blending","mesh","currentMinFilter","stencil","WebGLCubeMaps","mapTextureMapping","onTextureDispose","event","removeEventListener","cubemap","addEventListener","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","PHI","sqrt","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","pow","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","sizeLods","lodPlanes","sigmas","lodMax","lod","totalLods","sizeLod","texelSize","uv1","cubeFaces","positionSize","uvSize","faceIndexSize","uv","faceIndex","face","coordinates","fill","BufferAttribute","_createPlanes","weights","poleAxis","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","MeshBasicMaterial","backgroundBox","useSolidColor","col","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","blurMesh","blurUniforms","pixels","radiansPerPixel","isFinite","PI","sigmaPixels","sum","weight","exp","outputSize","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","cubemapUV","isEquirectMap","isCubeMap","isCubeTextureComplete","WebGLExtensions","getExtension","WebGLGeometries","geometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","l","Uint32BufferAttribute","Uint16BufferAttribute","previousAttribute","morphAttributes","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","textures","programs","autoReset","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","DataArrayTexture","wrapR","unpackAlignment","numericalSort","absNumericalSort","abs","denormalize","morph","divideScalar","WebGLMorphtargets","influencesList","morphInfluences","morphTextures","workInfluences","objectInfluences","morphTargetInfluences","morphAttribute","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","ceil","vertexDataStride","morphTarget","morphNormal","morphColor","j","fromBufferAttribute","disposeTexture","morphInfluencesSum","morphBaseInfluence","morphTargetsRelative","getUniforms","setValue","influences","influence","sort","Number","MAX_SAFE_INTEGER","getAttribute","hasAttribute","WebGLObjects","updateMap","onInstancedMeshDispose","instancedMesh","buffergeometry","hasEventListener","isDataArrayTexture","Data3DTexture","isData3DTexture","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","n","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","exec","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","WebGLShader","string","createShader","shaderSource","compileShader","setOptional","upload","values","seqWithValue","programIdCount","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","errorLine","parseInt","toUpperCase","split","lines2","from","to","join","handleSource","getShaderSource","getTexelEncodingFunction","functionName","components","getEncodingComponents","getToneMappingFunction","toneMappingName","filterEmptyLine","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","WebGLProgram","cacheKey","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","combine","generateEnvMapBlendingDefine","envMapCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","generateCubeUVSize","customExtensions","extensionDerivatives","tangentSpaceNormalMap","flatShading","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","generateExtensions","customDefines","chunks","generateDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexColors","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","sizeAttenuation","decodeVideoTexture","physicallyCorrectLights","dithering","opaque","outputEncoding","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","log","prefix","cachedUniforms","deleteShader","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","fetchAttributeLocations","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","Map","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","cubeuvmaps","_programLayers","Layers","_customShaders","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getParameters","shadows","environment","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","useAlphaTest","useClearcoat","isXRRenderTarget","normalMapType","isVideoTexture","transparent","tangent","isFogExp2","isSkinnedMesh","directional","spot","rectArea","hemi","shadowMap","toneMapped","customProgramCacheKey","getProgramCacheKey","morphAttributeCount","getProgramCacheKeyParameters","disableAll","enable","mask","getProgramCacheKeyBooleans","UniformsUtils","acquireProgram","p","pl","preexistingProgram","releaseProgram","indexOf","pop","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","renderOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","group","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","castShadow","WebGLLights","shadowCache","ShadowUniformsCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix4","matrix42","scaleFactor","intensity","isAmbientLight","isLightProbe","addScaledVector","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","setFromMatrixPosition","cos","angle","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","sub","transformDirection","identity","premultiply","extractRotation","WebGLRenderState","lightsArray","shadowsArray","setupLights","setupLightsView","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowSide","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","result","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","visible","isMeshDistanceMaterial","renderObject","shadowCamera","isMesh","isLine","isPoints","receiveShadow","frustumCulled","modelViewMatrix","multiplyMatrices","Array","isArray","groups","k","kl","groupMaterial","depthMaterial","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","multiply","isPointLightShadow","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","disable","depthMask","setFunc","depthFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","clearStencil","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","parseFloat","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","fromArray","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","blendEquation","blendSrc","blendDst","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","BLEND","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setPolygonOffset","polygonOffset","factor","POLYGON_OFFSET_FILL","activeTexture","webglSlot","TEXTURE0","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","isWebGLMultipleRenderTargets","COLOR_ATTACHMENT0","drawBuffersWEBGL","useProgram","setMaterial","frontFaceCW","colorWrite","stencilWrite","stencilWriteMask","stencilFuncMask","polygonOffsetFactor","polygonOffsetUnits","alphaToCoverage","SAMPLE_ALPHA_TO_COVERAGE","setLineWidth","lineWidth","SCISSOR_TEST","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","arguments","texImage3D","texStorage2D","texStorage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","MathUtils","isPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","RED","R32F","R16F","R8","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","mipmaps","isCompressedTexture","filterFallback","f","LINEAR","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","deallocateTexture","onRenderTargetDispose","renderTargetProperties","__webglTexture","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","deallocateRenderTarget","textureUnits","slot","updateVideoTexture","__version","complete","uploadTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_3D","TEXTURE_2D_ARRAY","TEXTURE_WRAP_R","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","premultiplyAlpha","getTextureCacheKey","__currentVersion","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","textureNeedsPowerOfTwo","verifyColorSpace","convert","mipmap","glInternalFormat","useTexStorage","allocateMemory","levels","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isDataTexture","onUpdate","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthRenderbuffer","isCube","__autoAllocateDepthBuffer","webglDepthTexture","setupDepthTexture","createRenderbuffer","__useRenderToTexture","textureUnit","resetTextureUnits","isCompressed","cubeImage","mipmapImage","uploadCubeTexture","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","isWebGL3DRenderTarget","isWebGLArrayRenderTarget","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RED_INTEGER","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","disconnect","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","decompose","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceTo","distanceToPinch","threshold","handedness","gripSpace","DepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","inputSourcesMap","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","onSessionEnd","forEach","animation","isPresenting","onInputSourcesChange","inputSources","removed","added","cameraAutoUpdate","getController","getControllerGrip","getHand","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","setSession","async","xrCompatible","makeXRCompatible","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","depthFormat","depthType","glDepthFormat","projectionlayerInit","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","depthNear","depthFar","quaternion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","compose","near2","far2","left2","right2","top2","bottom2","setProjectionFromUnion","getCamera","getFoveation","fixedFoveation","foveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","WebGLMaterials","refreshUniformsCommon","emissiveIntensity","uvScaleMap","uv2ScaleMap","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","isMeshBasicMaterial","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","gapSize","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLRenderer","style","display","createCanvasElement","_context","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","materials","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","initGLContext","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","releaseMaterialProgramReferences","deallocateMaterial","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","getSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","determinant","needsProgramChange","needsLights","lightsStateVersion","getProgram","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","LN2","uCamPos","cameraPosition","skeleton","boneTexture","computeBoneTexture","boneTextureSize","uniformsList","setProgram","rangeFactor","dataCount","rangeStart","drawRange","rangeCount","Infinity","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","traverseVisible","isLight","traverse","projectObject","isLOD","renderScene","opaqueObjects","transmissiveObjects","transparentObjects","renderObjects","renderTransmissionPass","onAfterRender","programCacheKey","updateCommonMaterialProperties","onBuild","onBeforeCompile","materialNeedsLights","progUniforms","self","camera2","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","isWebGLRenderer","cloneUniforms","dst","property","isQuaternion","mergeUniforms","merged","tmp","merge","Source","isRootObject","output","url","serializeImage","call","isSource","textureId","DEFAULT_IMAGE","DEFAULT_MAPPING","repeat","userData","setUvTransform","JSON","parse","stringify","metadata","generator","wrap","transformUv"],"sourceRoot":""}