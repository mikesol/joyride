{"version":3,"file":"142.bundle.js","mappings":"yKAIA,MAAMA,UAA0B,IAE/BC,YAAaC,GAEZC,MAAOD,GAIRE,KAAMC,EAAMC,EAAQC,EAAYC,GAE/B,MAAMC,EAAU,IAAI,IAEdC,EAAS,IAAI,IAAaC,KAAKT,SACrCQ,EAAOE,eAAgBD,KAAKE,aAC5BH,EAAOI,QAASH,KAAKI,MAErB,IAAIC,EAAS,EAEb,SAASC,EAAaC,GAErBR,EAAON,KAAMC,EAAMa,IAAK,SAAWC,GAElCV,EAAQW,OAAQF,GAAMC,EAEtBH,IAEgB,IAAXA,IAEJP,EAAQY,aAAc,EAEjBf,GAASA,EAAQG,WAIrBa,EAAWd,GAIf,IAAM,IAAIU,EAAI,EAAGA,EAAIb,EAAKkB,SAAWL,EAEpCD,EAAaC,GAId,OAAOT,K,uDC7CT,MAAMe,UAAoB,IAEzBvB,YAAamB,EAAQK,EAASC,EAAOC,EAAOC,EAAWC,EAAWC,EAAQC,EAAMC,EAAYC,GAK3F9B,MAHAiB,OAAoBE,IAAXF,EAAuBA,EAAS,GACzCK,OAAsBH,IAAZG,EAAwBA,EAAU,MAEpBC,EAAOC,EAAOC,EAAWC,EAAWC,EAAQC,EAAMC,EAAYC,GAEtFtB,KAAKuB,OAAQ,EAIVd,aAEH,OAAOT,KAAKQ,MAITC,WAAQe,GAEXxB,KAAKQ,MAAQgB,GAMfX,EAAYY,UAAUC,eAAgB","sources":["webpack://joyride/./node_modules/three/src/loaders/CubeTextureLoader.js","webpack://joyride/./node_modules/three/src/textures/CubeTexture.js"],"sourcesContent":["import { ImageLoader } from './ImageLoader.js';\nimport { CubeTexture } from '../textures/CubeTexture.js';\nimport { Loader } from './Loader.js';\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n\nexport { CubeTextureLoader };\n","import { Texture } from './Texture.js';\nimport { CubeReflectionMapping } from '../constants.js';\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nCubeTexture.prototype.isCubeTexture = true;\n\nexport { CubeTexture };\n"],"names":["CubeTextureLoader","constructor","manager","super","load","urls","onLoad","onProgress","onError","texture","loader","this","setCrossOrigin","crossOrigin","setPath","path","loaded","loadTexture","i","image","images","needsUpdate","undefined","length","CubeTexture","mapping","wrapS","wrapT","magFilter","minFilter","format","type","anisotropy","encoding","flipY","value","prototype","isCubeTexture"],"sourceRoot":""}