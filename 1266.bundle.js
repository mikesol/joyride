"use strict";(self.webpackChunkjoyride=self.webpackChunkjoyride||[]).push([[1266,6120,9771,7232],{94:(t,s,i)=>{i.d(s,{V:()=>h});var r=i(1245),e=i(1052);class h extends e.T{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new r.Matrix4,this.projectionMatrix=new r.Matrix4,this.projectionMatrixInverse=new r.Matrix4}copy(t,s){return super.copy(t,s),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const s=this.matrixWorld.elements;return t.set(-s[8],-s[9],-s[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,s){super.updateWorldMatrix(t,s),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}h.prototype.isCamera=!0},7675:(t,s,i)=>{i.d(s,{_:()=>h});var r=i(1052),e=i(7282);class h extends r.T{constructor(t,s=1){super(),this.type="Light",this.color=new e.Color(t),this.intensity=s}dispose(){}copy(t){return super.copy(t),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const s=super.toJSON(t);return s.object.color=this.color.getHex(),s.object.intensity=this.intensity,void 0!==this.groundColor&&(s.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(s.object.distance=this.distance),void 0!==this.angle&&(s.object.angle=this.angle),void 0!==this.decay&&(s.object.decay=this.decay),void 0!==this.penumbra&&(s.object.penumbra=this.penumbra),void 0!==this.shadow&&(s.object.shadow=this.shadow.toJSON()),s}}h.prototype.isLight=!0},6139:(t,s,i)=>{i.d(s,{h:()=>m});var r=i(1245),e=i(6120),h=i(4532),n=i(6980),a=i(3871);const o=new r.Matrix4,c=new h.Vector3,u=new h.Vector3;class m{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new e.Vector2(512,512),this.map=null,this.mapPass=null,this.matrix=new r.Matrix4,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new a.i,this._frameExtents=new e.Vector2(1,1),this._viewportCount=1,this._viewports=[new n.L(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const s=this.camera,i=this.matrix;c.setFromMatrixPosition(t.matrixWorld),s.position.copy(c),u.setFromMatrixPosition(t.target.matrixWorld),s.lookAt(u),s.updateMatrixWorld(),o.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(s.projectionMatrix),i.multiply(s.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}},7232:(t,s,i)=>{i.r(s),i.d(s,{Box3:()=>e});var r=i(4532);class e{constructor(t=new r.Vector3(1/0,1/0,1/0),s=new r.Vector3(-1/0,-1/0,-1/0)){this.min=t,this.max=s}set(t,s){return this.min.copy(t),this.max.copy(s),this}setFromArray(t){let s=1/0,i=1/0,r=1/0,e=-1/0,h=-1/0,n=-1/0;for(let a=0,o=t.length;a<o;a+=3){const o=t[a],c=t[a+1],u=t[a+2];o<s&&(s=o),c<i&&(i=c),u<r&&(r=u),o>e&&(e=o),c>h&&(h=c),u>n&&(n=u)}return this.min.set(s,i,r),this.max.set(e,h,n),this}setFromBufferAttribute(t){let s=1/0,i=1/0,r=1/0,e=-1/0,h=-1/0,n=-1/0;for(let a=0,o=t.count;a<o;a++){const o=t.getX(a),c=t.getY(a),u=t.getZ(a);o<s&&(s=o),c<i&&(i=c),u<r&&(r=u),o>e&&(e=o),c>h&&(h=c),u>n&&(n=u)}return this.min.set(s,i,r),this.max.set(e,h,n),this}setFromPoints(t){this.makeEmpty();for(let s=0,i=t.length;s<i;s++)this.expandByPoint(t[s]);return this}setFromCenterAndSize(t,s){const i=n.copy(s).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,s=!1){return this.makeEmpty(),this.expandByObject(t,s)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,s=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(void 0!==i)if(s&&null!=i.attributes&&void 0!==i.attributes.position){const s=i.attributes.position;for(let i=0,r=s.count;i<r;i++)n.fromBufferAttribute(s,i).applyMatrix4(t.matrixWorld),this.expandByPoint(n)}else null===i.boundingBox&&i.computeBoundingBox(),a.copy(i.boundingBox),a.applyMatrix4(t.matrixWorld),this.union(a);const r=t.children;for(let t=0,i=r.length;t<i;t++)this.expandByObject(r[t],s);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,s){return s.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,n),n.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let s,i;return t.normal.x>0?(s=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(s=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(s+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(s+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(s+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(s+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),s<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(y),d.subVectors(this.max,y),o.subVectors(t.a,y),c.subVectors(t.b,y),u.subVectors(t.c,y),m.subVectors(c,o),x.subVectors(u,c),l.subVectors(o,u);let s=[0,-m.z,m.y,0,-x.z,x.y,0,-l.z,l.y,m.z,0,-m.x,x.z,0,-x.x,l.z,0,-l.x,-m.y,m.x,0,-x.y,x.x,0,-l.y,l.x,0];return!!M(s,o,c,u,d)&&(s=[1,0,0,0,1,0,0,0,1],!!M(s,o,c,u,d)&&(p.crossVectors(m,x),s=[p.x,p.y,p.z],M(s,o,c,u,d)))}clampPoint(t,s){return s.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return n.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(n).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(h[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),h[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),h[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),h[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),h[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),h[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),h[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),h[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(h)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}e.prototype.isBox3=!0;const h=[new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3,new r.Vector3],n=new r.Vector3,a=new e,o=new r.Vector3,c=new r.Vector3,u=new r.Vector3,m=new r.Vector3,x=new r.Vector3,l=new r.Vector3,y=new r.Vector3,d=new r.Vector3,p=new r.Vector3,w=new r.Vector3;function M(t,s,i,r,e){for(let h=0,n=t.length-3;h<=n;h+=3){w.fromArray(t,h);const n=e.x*Math.abs(w.x)+e.y*Math.abs(w.y)+e.z*Math.abs(w.z),a=s.dot(w),o=i.dot(w),c=r.dot(w);if(Math.max(-Math.max(a,o,c),Math.min(a,o,c))>n)return!1}return!0}},3871:(t,s,i)=>{i.d(s,{i:()=>o});var r=i(4532),e=i(9771),h=i(2158);const n=new e.Sphere,a=new r.Vector3;class o{constructor(t=new h.J,s=new h.J,i=new h.J,r=new h.J,e=new h.J,n=new h.J){this.planes=[t,s,i,r,e,n]}set(t,s,i,r,e,h){const n=this.planes;return n[0].copy(t),n[1].copy(s),n[2].copy(i),n[3].copy(r),n[4].copy(e),n[5].copy(h),this}copy(t){const s=this.planes;for(let i=0;i<6;i++)s[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){const s=this.planes,i=t.elements,r=i[0],e=i[1],h=i[2],n=i[3],a=i[4],o=i[5],c=i[6],u=i[7],m=i[8],x=i[9],l=i[10],y=i[11],d=i[12],p=i[13],w=i[14],M=i[15];return s[0].setComponents(n-r,u-a,y-m,M-d).normalize(),s[1].setComponents(n+r,u+a,y+m,M+d).normalize(),s[2].setComponents(n+e,u+o,y+x,M+p).normalize(),s[3].setComponents(n-e,u-o,y-x,M-p).normalize(),s[4].setComponents(n-h,u-c,y-l,M-w).normalize(),s[5].setComponents(n+h,u+c,y+l,M+w).normalize(),this}intersectsObject(t){const s=t.geometry;return null===s.boundingSphere&&s.computeBoundingSphere(),n.copy(s.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(n)}intersectsSprite(t){return n.center.set(0,0,0),n.radius=.7071067811865476,n.applyMatrix4(t.matrixWorld),this.intersectsSphere(n)}intersectsSphere(t){const s=this.planes,i=t.center,r=-t.radius;for(let t=0;t<6;t++)if(s[t].distanceToPoint(i)<r)return!1;return!0}intersectsBox(t){const s=this.planes;for(let i=0;i<6;i++){const r=s[i];if(a.x=r.normal.x>0?t.max.x:t.min.x,a.y=r.normal.y>0?t.max.y:t.min.y,a.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(a)<0)return!1}return!0}containsPoint(t){const s=this.planes;for(let i=0;i<6;i++)if(s[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}},2158:(t,s,i)=>{i.d(s,{J:()=>o});var r=i(4894),e=i(4532);const h=new e.Vector3,n=new e.Vector3,a=new r.V;class o{constructor(t=new e.Vector3(1,0,0),s=0){this.normal=t,this.constant=s}set(t,s){return this.normal.copy(t),this.constant=s,this}setComponents(t,s,i,r){return this.normal.set(t,s,i),this.constant=r,this}setFromNormalAndCoplanarPoint(t,s){return this.normal.copy(t),this.constant=-s.dot(this.normal),this}setFromCoplanarPoints(t,s,i){const r=h.subVectors(i,s).cross(n.subVectors(t,s)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,s){return s.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,s){const i=t.delta(h),r=this.normal.dot(i);if(0===r)return 0===this.distanceToPoint(t.start)?s.copy(t.start):null;const e=-(t.start.dot(this.normal)+this.constant)/r;return e<0||e>1?null:s.copy(i).multiplyScalar(e).add(t.start)}intersectsLine(t){const s=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return s<0&&i>0||i<0&&s>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,s){const i=s||a.getNormalMatrix(t),r=this.coplanarPoint(h).applyMatrix4(t),e=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(e),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}o.prototype.isPlane=!0},9771:(t,s,i)=>{i.r(s),i.d(s,{Sphere:()=>c});var r=i(7232),e=i(4532);const h=new r.Box3,n=new e.Vector3,a=new e.Vector3,o=new e.Vector3;class c{constructor(t=new e.Vector3,s=-1){this.center=t,this.radius=s}set(t,s){return this.center.copy(t),this.radius=s,this}setFromPoints(t,s){const i=this.center;void 0!==s?i.copy(s):h.setFromPoints(t).getCenter(i);let r=0;for(let s=0,e=t.length;s<e;s++)r=Math.max(r,i.distanceToSquared(t[s]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const s=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=s*s}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,s){const i=this.center.distanceToSquared(t);return s.copy(t),i>this.radius*this.radius&&(s.sub(this.center).normalize(),s.multiplyScalar(this.radius).add(this.center)),s}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){o.subVectors(t,this.center);const s=o.lengthSq();if(s>this.radius*this.radius){const t=Math.sqrt(s),i=.5*(t-this.radius);this.center.add(o.multiplyScalar(i/t)),this.radius+=i}return this}union(t){return!0===this.center.equals(t.center)?a.set(0,0,1).multiplyScalar(t.radius):a.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(n.copy(t.center).add(a)),this.expandByPoint(n.copy(t.center).sub(a)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}},6120:(t,s,i)=>{i.r(s),i.d(s,{Vector2:()=>r});class r{constructor(t=0,s=0){this.x=t,this.y=s}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,s){return this.x=t,this.y=s,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,s){return void 0!==s?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,s)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t,s){return void 0!==s?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,s)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const s=this.x,i=this.y,r=t.elements;return this.x=r[0]*s+r[3]*i+r[6],this.y=r[1]*s+r[4]*i+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y;return s*s+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t}fromBufferAttribute(t,s,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(s),this.y=t.getY(s),this}rotateAround(t,s){const i=Math.cos(s),r=Math.sin(s),e=this.x-t.x,h=this.y-t.y;return this.x=e*i-h*r+t.x,this.y=e*r+h*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}r.prototype.isVector2=!0},6980:(t,s,i)=>{i.d(s,{L:()=>r});class r{constructor(t=0,s=0,i=0,r=1){this.x=t,this.y=s,this.z=i,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,s,i,r){return this.x=t,this.y=s,this.z=i,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;case 3:this.w=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,s){return void 0!==s?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,s)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this.w=t.w+s.w,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this.w+=t.w*s,this}sub(t,s){return void 0!==s?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,s)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this.w=t.w-s.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const s=this.x,i=this.y,r=this.z,e=this.w,h=t.elements;return this.x=h[0]*s+h[4]*i+h[8]*r+h[12]*e,this.y=h[1]*s+h[5]*i+h[9]*r+h[13]*e,this.z=h[2]*s+h[6]*i+h[10]*r+h[14]*e,this.w=h[3]*s+h[7]*i+h[11]*r+h[15]*e,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const s=Math.sqrt(1-t.w*t.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/s,this.y=t.y/s,this.z=t.z/s),this}setAxisAngleFromRotationMatrix(t){let s,i,r,e;const h=.01,n=.1,a=t.elements,o=a[0],c=a[4],u=a[8],m=a[1],x=a[5],l=a[9],y=a[2],d=a[6],p=a[10];if(Math.abs(c-m)<h&&Math.abs(u-y)<h&&Math.abs(l-d)<h){if(Math.abs(c+m)<n&&Math.abs(u+y)<n&&Math.abs(l+d)<n&&Math.abs(o+x+p-3)<n)return this.set(1,0,0,0),this;s=Math.PI;const t=(o+1)/2,a=(x+1)/2,w=(p+1)/2,M=(c+m)/4,z=(u+y)/4,b=(l+d)/4;return t>a&&t>w?t<h?(i=0,r=.707106781,e=.707106781):(i=Math.sqrt(t),r=M/i,e=z/i):a>w?a<h?(i=.707106781,r=0,e=.707106781):(r=Math.sqrt(a),i=M/r,e=b/r):w<h?(i=.707106781,r=.707106781,e=0):(e=Math.sqrt(w),i=z/e,r=b/e),this.set(i,r,e,s),this}let w=Math.sqrt((d-l)*(d-l)+(u-y)*(u-y)+(m-c)*(m-c));return Math.abs(w)<.001&&(w=1),this.x=(d-l)/w,this.y=(u-y)/w,this.z=(m-c)/w,this.w=Math.acos((o+x+p-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this.w=Math.max(t.w,Math.min(s.w,this.w)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this.w=Math.max(t,Math.min(s,this.w)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this.w+=(t.w-this.w)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this.w=t.w+(s.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this.w=t[s+3],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t[s+3]=this.w,t}fromBufferAttribute(t,s,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this.w=t.getW(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}r.prototype.isVector4=!0}}]);