{"version":3,"file":"1245.bundle.js","mappings":"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","sources":["webpack://joyride/./node_modules/three/src/math/Matrix4.js"],"sourcesContent":["import { Vector3 } from './Vector3.js';\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1.elements[ 0 ] *= invSX;\n\t\t_m1.elements[ 1 ] *= invSX;\n\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t_m1.elements[ 4 ] *= invSY;\n\t\t_m1.elements[ 5 ] *= invSY;\n\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nexport { Matrix4 };\n"],"names":["Matrix4","constructor","this","elements","arguments","length","console","error","set","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","clone","fromArray","copy","m","me","copyPosition","setFromMatrix3","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","x","y","z","extractRotation","scaleX","_v1","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","a","Math","cos","b","sin","c","d","e","f","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","q","compose","_zero","_one","lookAt","eye","target","up","_z","subVectors","lengthSq","normalize","_x","crossVectors","abs","_y","multiply","n","undefined","warn","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyScalar","s","determinant","transpose","tmp","setPosition","isVector3","invert","t11","t12","t13","t14","det","detInv","scale","v","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","sqrt","max","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","angle","t","tx","ty","makeScale","makeShear","xy","xz","yx","yz","zx","zy","position","quaternion","w","_w","x2","y2","z2","xx","yy","zz","wx","wy","wz","sx","sy","sz","decompose","_m1","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","p","equals","matrix","i","array","offset","toArray","prototype","isMatrix4","Vector3"],"sourceRoot":""}